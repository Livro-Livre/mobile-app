{
  "basePath": "/api/v1",
  "definitions": {
    "DefaultResponse": {
      "properties": {
        "errors": {
          "items": {
            "properties": {
              "message": { "type": "string" },
              "path": { "type": "string" }
            },
            "required": ["message"],
            "type": "object"
          },
          "type": "array"
        }
      },
      "required": ["errors"],
      "type": "object"
    },
    "account_line": {
      "properties": {
        "account_line_id": {
          "description": "Internal account line identifier",
          "type": "integer"
        },
        "account_type": {
          "description": "Account line type",
          "type": ["string", "null"]
        },
        "amount": { "description": "Account line amount", "type": "number" },
        "amount_outstanding": {
          "description": "Outstanding amount",
          "type": "number"
        },
        "checkout_id": {
          "description": "Internal identifier for the checkout the account line is related to",
          "type": ["integer", "null"]
        },
        "date": {
          "description": "Date the account line was created",
          "format": "date-time",
          "type": "string"
        },
        "debit_type": {
          "description": "Account line debit type",
          "type": ["string", "null"]
        },
        "description": {
          "description": "Account line description",
          "type": ["string", "null"]
        },
        "internal_note": {
          "description": "Internal note",
          "type": ["string", "null"]
        },
        "item_id": {
          "description": "Internal identifier for the item the account line is related to",
          "type": ["integer", "null"]
        },
        "last_increment": {
          "description": "The amount the line was increased last time",
          "type": ["number", "null"]
        },
        "library_id": {
          "description": "Internal identifier for the library in which the transaction took place",
          "type": ["string", "null"]
        },
        "patron_id": {
          "description": "Internal identifier for the patron the account line belongs to",
          "type": "integer"
        },
        "payment_type": {
          "description": "Payment type",
          "type": ["string", "null"]
        },
        "timestamp": {
          "description": "Timestamp for the latest line update",
          "format": "date-time",
          "type": "string"
        },
        "user_id": {
          "description": "Internal patron identifier for the staff member that introduced the account line",
          "type": ["integer", "null"]
        }
      },
      "type": "object"
    },
    "advancededitormacro": {
      "additionalProperties": false,
      "properties": {
        "macro_id": {
          "description": "Internal advanced editor macro identifier",
          "readOnly": true,
          "type": "integer"
        },
        "macro_text": {
          "description": "macro text",
          "type": ["string", "null"]
        },
        "name": { "description": "macro name", "type": "string" },
        "patron_id": {
          "description": "borrower number",
          "type": ["integer", "null"]
        },
        "shared": {
          "description": "is macro shared",
          "type": ["boolean", "null"]
        }
      },
      "required": ["name", "macro_text", "patron_id", "shared"],
      "type": "object"
    },
    "allows_renewal": {
      "properties": {
        "allows_renewal": {
          "description": "Renewability status; true = renewable, false = not renewable",
          "type": "boolean"
        },
        "current_renewals": {
          "description": "Current used renewals",
          "type": "integer"
        },
        "error": {
          "description": "Description on false allows_renewal.",
          "type": ["string", "null"]
        },
        "max_renewals": {
          "description": "Maximum number of possible renewals",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "basket": {
      "properties": {
        "authorised_by": {
          "description": "Internal patron identifier of the basket creator",
          "type": ["integer", "null"]
        },
        "basket_group_id": {
          "description": "links this basket to its group (aqbasketgroups.id)",
          "type": ["integer", "null"]
        },
        "basket_id": {
          "description": "Internal identifier for the basket",
          "type": "integer"
        },
        "billing_library": {
          "description": "basket billing place",
          "type": ["string", "null"]
        },
        "close_date": {
          "description": "The date the basket was closed",
          "format": "date",
          "type": ["string", "null"]
        },
        "contract_id": {
          "description": "Internal identifier of the linked contract",
          "type": "integer"
        },
        "create_items": {
          "description": "When items should be created for orders in this basket (Options: 'ordering', 'receiving', 'cataloguing'. Null means system wide config)",
          "enum": ["ordering", "receiving", "cataloguing"],
          "type": "string"
        },
        "creation_date": {
          "description": "The date the basket was created",
          "format": "date",
          "type": ["string", "null"]
        },
        "delivery_library": {
          "description": "basket delivery place",
          "type": ["string", "null"]
        },
        "internal_note": {
          "description": "Internal note",
          "type": ["string", "null"]
        },
        "library_id": {
          "description": "Library the basket belongs to",
          "type": ["integer", "null"]
        },
        "name": { "description": "Basket name", "type": "string" },
        "standing": {
          "description": "If the orders in this basket are standing",
          "type": "boolean"
        },
        "vendor_id": {
          "description": "Internal identifier for the vendor",
          "type": "integer"
        },
        "vendor_note": {
          "description": "Vendor note",
          "type": ["string", "null"]
        }
      },
      "type": "object"
    },
    "checkout": {
      "properties": {
        "auto_renew": { "description": "Auto renewal", "type": "boolean" },
        "auto_renew_error": {
          "description": "Auto renewal error",
          "type": ["string", "null"]
        },
        "checkin_date": {
          "description": "Date the item was returned",
          "format": "date-time",
          "type": ["string", "null"]
        },
        "checkout_date": {
          "description": "Date the item was issued",
          "format": "date-time",
          "type": "string"
        },
        "checkout_id": {
          "description": "internally assigned checkout identifier",
          "type": "integer"
        },
        "due_date": {
          "description": "Due date",
          "format": "date-time",
          "type": "string"
        },
        "item_id": {
          "description": "internal identifier of checked out item",
          "type": "integer"
        },
        "last_renewed_date": {
          "description": "Date the item was last renewed",
          "format": "date-time",
          "type": ["string", "null"]
        },
        "library_id": {
          "description": "code of the library the item was checked out",
          "type": ["string", "null"]
        },
        "note": {
          "description": "Issue note text",
          "type": ["string", "null"]
        },
        "note_date": {
          "description": "Datetime of the issue note",
          "format": "date",
          "type": ["string", "null"]
        },
        "onsite_checkout": {
          "description": "On site checkout",
          "type": "boolean"
        },
        "patron_id": {
          "description": "Internal patron identifier",
          "type": "integer"
        },
        "renewals": {
          "description": "Number of renewals",
          "type": ["integer", "null"]
        },
        "timestamp": { "description": "Last update time", "type": "string" }
      },
      "type": "object"
    },
    "checkouts": {
      "items": {
        "properties": {
          "auto_renew": { "description": "Auto renewal", "type": "boolean" },
          "auto_renew_error": {
            "description": "Auto renewal error",
            "type": ["string", "null"]
          },
          "checkin_date": {
            "description": "Date the item was returned",
            "format": "date-time",
            "type": ["string", "null"]
          },
          "checkout_date": {
            "description": "Date the item was issued",
            "format": "date-time",
            "type": "string"
          },
          "checkout_id": {
            "description": "internally assigned checkout identifier",
            "type": "integer"
          },
          "due_date": {
            "description": "Due date",
            "format": "date-time",
            "type": "string"
          },
          "item_id": {
            "description": "internal identifier of checked out item",
            "type": "integer"
          },
          "last_renewed_date": {
            "description": "Date the item was last renewed",
            "format": "date-time",
            "type": ["string", "null"]
          },
          "library_id": {
            "description": "code of the library the item was checked out",
            "type": ["string", "null"]
          },
          "note": {
            "description": "Issue note text",
            "type": ["string", "null"]
          },
          "note_date": {
            "description": "Datetime of the issue note",
            "format": "date",
            "type": ["string", "null"]
          },
          "onsite_checkout": {
            "description": "On site checkout",
            "type": "boolean"
          },
          "patron_id": {
            "description": "Internal patron identifier",
            "type": "integer"
          },
          "renewals": {
            "description": "Number of renewals",
            "type": ["integer", "null"]
          },
          "timestamp": { "description": "Last update time", "type": "string" }
        },
        "type": "object"
      },
      "type": "array"
    },
    "circ-rule-kind": {
      "additionalProperties": false,
      "properties": {
        "scope": {
          "description": "levels that this rule kind can be set for",
          "items": {
            "enum": ["branchcode", "categorycode", "itemtype"],
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": ["scope"],
      "type": "object"
    },
    "city": {
      "additionalProperties": false,
      "properties": {
        "city_id": {
          "description": "internally assigned city identifier",
          "readOnly": true,
          "type": "integer"
        },
        "country": {
          "description": "city country",
          "type": ["string", "null"]
        },
        "name": { "description": "city name", "type": "string" },
        "postal_code": {
          "description": "city postal code",
          "type": ["string", "null"]
        },
        "state": { "description": "city state", "type": ["string", "null"] }
      },
      "required": ["name", "state", "postal_code", "country"],
      "type": "object"
    },
    "error": {
      "properties": {
        "error": { "description": "Error message", "type": "string" }
      },
      "type": "object"
    },
    "fund": {
      "additionalProperties": false,
      "properties": {
        "budget_id": {
          "description": "Internal identifier for the budget",
          "type": ["number", "null"]
        },
        "code": {
          "description": "Code assigned to the fund by the user",
          "type": ["string", "null"]
        },
        "fund_access": {
          "description": "Level of permission for this fund (1: owner, 2: owner, users and library, 3: owner and users)",
          "type": ["number", "null"]
        },
        "fund_id": {
          "description": "internally assigned fund identifier",
          "readOnly": true,
          "type": "integer"
        },
        "fund_owner_id": {
          "description": "Internal identifier for the fund owner",
          "type": ["number", "null"]
        },
        "library_id": {
          "description": "Internal identifier for the library that this fund belongs to",
          "type": ["string", "null"]
        },
        "name": {
          "description": "Name assigned to the fund by the user",
          "type": ["string", "null"]
        },
        "notes": {
          "description": "Notes related to this fund",
          "type": ["string", "null"]
        },
        "parent_fund_id": {
          "description": "Internal identifier for parent fund",
          "type": ["integer", "null"]
        },
        "statistic1_auth_value_category": {
          "description": "Statistical category for this fund",
          "type": ["string", "null"]
        },
        "statistic2_auth_value_category": {
          "description": "Second statistical category for this fund",
          "type": ["string", "null"]
        },
        "timestamp": {
          "description": "Timestamp",
          "format": "date-time",
          "type": ["string"]
        },
        "total_amount": {
          "description": "Total amount for this fund",
          "type": ["number", "null"]
        },
        "warn_at_amount": {
          "description": "Warning at amount",
          "type": ["number", "null"]
        },
        "warn_at_percentage": {
          "description": "Warning at percentage",
          "type": ["number", "null"]
        }
      },
      "required": ["name"],
      "type": "object"
    },
    "hold": {
      "properties": {
        "biblio_id": {
          "description": "Internal biblio identifier",
          "type": "integer"
        },
        "cancellation_date": {
          "description": "The date the hold was cancelled",
          "format": "date",
          "type": ["string", "null"]
        },
        "expiration_date": {
          "description": "The date the hold expires",
          "format": "date",
          "type": ["string", "null"]
        },
        "hold_date": {
          "description": "The date the hold was placed",
          "format": "date",
          "type": ["string", "null"]
        },
        "hold_id": {
          "description": "Internal hold identifier",
          "type": "integer"
        },
        "item_id": {
          "description": "Internal item identifier",
          "type": ["string", "null"]
        },
        "item_level": {
          "description": "If the hold is placed at item level",
          "type": "boolean"
        },
        "item_type": {
          "description": "If record level hold, the optional itemtype of the item the patron is requesting",
          "type": ["string", "null"]
        },
        "lowest_priority": {
          "description": "Controls if the hold is given the lowest priority on the queue",
          "type": "boolean"
        },
        "notes": {
          "description": "Notes related to this hold",
          "type": ["string", "null"]
        },
        "patron_id": {
          "description": "Internal patron identifier",
          "type": "integer"
        },
        "pickup_library_id": {
          "description": "Internal library identifier for the pickup library",
          "type": ["string", "null"]
        },
        "priority": {
          "description": "Where in the queue the patron sits",
          "type": ["integer", "null"]
        },
        "status": {
          "description": "A one letter code defining what the status of the hold is after it has been confirmed",
          "type": ["string", "null"]
        },
        "suspended": {
          "description": "Controls if the hold is suspended",
          "type": "boolean"
        },
        "suspended_until": {
          "description": "Date until which the hold has been suspended",
          "format": "date-time",
          "type": ["string", "null"]
        },
        "timestamp": {
          "description": "Timestamp for the latest hold update",
          "format": "date-time",
          "type": "string"
        },
        "waiting_date": {
          "description": "The date the item was marked as waiting for the patron at the library",
          "format": "date",
          "type": ["string", "null"]
        }
      },
      "type": "object"
    },
    "holds": {
      "items": {
        "properties": {
          "biblio_id": {
            "description": "Internal biblio identifier",
            "type": "integer"
          },
          "cancellation_date": {
            "description": "The date the hold was cancelled",
            "format": "date",
            "type": ["string", "null"]
          },
          "expiration_date": {
            "description": "The date the hold expires",
            "format": "date",
            "type": ["string", "null"]
          },
          "hold_date": {
            "description": "The date the hold was placed",
            "format": "date",
            "type": ["string", "null"]
          },
          "hold_id": {
            "description": "Internal hold identifier",
            "type": "integer"
          },
          "item_id": {
            "description": "Internal item identifier",
            "type": ["string", "null"]
          },
          "item_level": {
            "description": "If the hold is placed at item level",
            "type": "boolean"
          },
          "item_type": {
            "description": "If record level hold, the optional itemtype of the item the patron is requesting",
            "type": ["string", "null"]
          },
          "lowest_priority": {
            "description": "Controls if the hold is given the lowest priority on the queue",
            "type": "boolean"
          },
          "notes": {
            "description": "Notes related to this hold",
            "type": ["string", "null"]
          },
          "patron_id": {
            "description": "Internal patron identifier",
            "type": "integer"
          },
          "pickup_library_id": {
            "description": "Internal library identifier for the pickup library",
            "type": ["string", "null"]
          },
          "priority": {
            "description": "Where in the queue the patron sits",
            "type": ["integer", "null"]
          },
          "status": {
            "description": "A one letter code defining what the status of the hold is after it has been confirmed",
            "type": ["string", "null"]
          },
          "suspended": {
            "description": "Controls if the hold is suspended",
            "type": "boolean"
          },
          "suspended_until": {
            "description": "Date until which the hold has been suspended",
            "format": "date-time",
            "type": ["string", "null"]
          },
          "timestamp": {
            "description": "Timestamp for the latest hold update",
            "format": "date-time",
            "type": "string"
          },
          "waiting_date": {
            "description": "The date the item was marked as waiting for the patron at the library",
            "format": "date",
            "type": ["string", "null"]
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "ill_backend": {
      "properties": {
        "capabilities": {
          "description": "List of capabilities",
          "type": "object"
        },
        "ill_backend_id": {
          "description": "Internal ILL backend identifier",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ill_backends": {
      "items": {
        "properties": {
          "capabilities": {
            "description": "List of capabilities",
            "type": "object"
          },
          "ill_backend_id": {
            "description": "Internal ILL backend identifier",
            "type": "string"
          }
        },
        "type": "object"
      },
      "type": "array"
    },
    "invoice": {
      "additionalProperties": false,
      "properties": {
        "close_date": {
          "description": "Invoice close date (only when the invoice is closed)",
          "format": "date",
          "type": "string"
        },
        "closed": {
          "description": "If the invoice is closed",
          "type": "boolean"
        },
        "invoice_date": {
          "description": "Date of billing",
          "format": "date",
          "type": ["string", "null"]
        },
        "invoice_id": {
          "description": "Internal identifier for the incoide. Generated on POST",
          "type": "integer"
        },
        "invoice_number": {
          "description": "Invoice number assigned by the vendor",
          "type": "string"
        },
        "shipping_cost": {
          "description": "Shipping cost",
          "type": ["integer", "null"]
        },
        "shipping_cost_budget_id": {
          "description": "Shipping cost linking to budget",
          "type": ["integer", "null"]
        },
        "shipping_date": {
          "description": "Date of shipping",
          "format": "date",
          "type": ["string", "null"]
        },
        "vendor_id": {
          "description": "Internal identifier for the vendor",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "item": {
      "additionalProperties": false,
      "properties": {
        "acquisition_date": {
          "description": "The date the item was acquired",
          "format": "date",
          "type": ["string", "null"]
        },
        "acquisition_source": {
          "description": "Information about the acquisition source (it is not really a vendor id)",
          "type": ["string", "null"]
        },
        "biblio_id": {
          "description": "Internal identifier for the parent bibliographic record",
          "type": "integer"
        },
        "call_number_sort": { "description": "?", "type": ["string", "null"] },
        "call_number_source": {
          "description": "Classification source used on this item",
          "type": ["string", "null"]
        },
        "callnumber": {
          "description": "Call number for this item",
          "type": ["string", "null"]
        },
        "checked_out_date": {
          "description": "Defines if item is checked out (NULL for not checked out, and checkout date for checked out)",
          "format": "date",
          "type": ["string", "null"]
        },
        "checkouts_count": {
          "description": "Number of times this item has been checked out/issued",
          "type": ["integer", "null"]
        },
        "coded_location_qualifier": {
          "description": "Coded location qualifier",
          "type": ["string", "null"]
        },
        "collection_code": {
          "description": "Authorized value for the collection code associated with this item",
          "type": ["string", "null"]
        },
        "copy_number": {
          "description": "Copy number",
          "type": ["string", "null"]
        },
        "damaged_date": {
          "description": "The date and time an item was last marked as damaged, NULL if not damaged",
          "type": ["string", "null"]
        },
        "damaged_status": {
          "description": "Authorized value defining this item as damaged",
          "type": "integer"
        },
        "extended_subfields": {
          "description": "Additional 952 subfields in XML format",
          "type": ["string", "null"]
        },
        "external_id": {
          "description": "The item's barcode",
          "type": ["string", "null"]
        },
        "holding_library_id": {
          "description": "Library that is currently in possession item",
          "type": ["string", "null"]
        },
        "holds_count": {
          "description": "Number of times this item has been placed on hold/reserved",
          "type": ["integer", "null"]
        },
        "home_library_id": {
          "description": "Internal library id for the library the item belongs to",
          "type": ["string", "null"]
        },
        "internal_notes": {
          "description": "Non-public notes on this item",
          "type": ["string", "null"]
        },
        "inventory_number": {
          "description": "Inventory number",
          "type": ["string", "null"]
        },
        "item_id": {
          "description": "Internal item identifier",
          "type": "integer"
        },
        "item_type": {
          "description": "Itemtype defining the type for this item",
          "type": ["string", "null"]
        },
        "last_checkout_date": {
          "description": "The date the item was last checked out",
          "format": "date",
          "type": ["string", "null"]
        },
        "last_seen_date": {
          "description": "The date the item barcode was last scanned",
          "format": "date",
          "type": ["string", "null"]
        },
        "location": {
          "description": "Authorized value for the shelving location for this item",
          "type": ["string", "null"]
        },
        "lost_date": {
          "description": "The date and time an item was last marked as lost, NULL if not lost",
          "format": "date-time",
          "type": ["string", "null"]
        },
        "lost_status": {
          "description": "Authorized value defining this item as lost",
          "type": "integer"
        },
        "materials_notes": {
          "description": "Materials specified",
          "type": ["string", "null"]
        },
        "new_status": {
          "description": "'new' value, whatever free-text information.",
          "type": ["string", "null"]
        },
        "not_for_loan_status": {
          "description": "Authorized value defining why this item is not for loan",
          "type": "integer"
        },
        "permanent_location": {
          "description": "Linked to the CART and PROC temporary locations feature, stores the permanent shelving location",
          "type": ["string", "null"]
        },
        "public_notes": {
          "description": "Public notes on this item",
          "type": ["string", "null"]
        },
        "purchase_price": {
          "description": "Purchase price",
          "type": ["number", "null"]
        },
        "renewals_count": {
          "description": "Number of times this item has been renewed",
          "type": ["integer", "null"]
        },
        "replacement_price": {
          "description": "Cost the library charges to replace the item (e.g. if lost)",
          "type": ["number", "null"]
        },
        "replacement_price_date": {
          "description": "The date the replacement price is effective from",
          "format": "date",
          "type": ["string", "null"]
        },
        "restricted_status": {
          "description": "Authorized value defining use restrictions for this item",
          "type": ["integer", "null"]
        },
        "serial_issue_number": {
          "description": "serial enumeration/chronology for the item",
          "type": ["string", "null"]
        },
        "timestamp": {
          "description": "Date and time this item was last altered",
          "format": "date-time",
          "type": "string"
        },
        "uri": {
          "description": "URL for the item",
          "type": ["string", "null"]
        },
        "withdrawn": {
          "description": "Authorized value defining this item as withdrawn",
          "type": "integer"
        },
        "withdrawn_date": {
          "description": "The date and time an item was last marked as withdrawn, NULL if not withdrawn",
          "format": "date-time",
          "type": ["string", "null"]
        }
      },
      "required": [
        "item_id",
        "biblio_id",
        "not_for_loan_status",
        "damaged_status",
        "lost_status",
        "withdrawn"
      ],
      "type": "object"
    },
    "library": {
      "additionalProperties": false,
      "properties": {
        "address1": {
          "description": "the first address line of the library",
          "type": ["string", "null"]
        },
        "address2": {
          "description": "the second address line of the library",
          "type": ["string", "null"]
        },
        "address3": {
          "description": "the third address line of the library",
          "type": ["string", "null"]
        },
        "city": {
          "description": "the city or province of the library",
          "type": ["string", "null"]
        },
        "country": {
          "description": "the county of the library",
          "type": ["string", "null"]
        },
        "email": {
          "description": "the primary email address of the library",
          "type": ["string", "null"]
        },
        "fax": {
          "description": "the fax number of the library",
          "type": ["string", "null"]
        },
        "geolocation": {
          "description": "geolocation of your library",
          "type": ["string", "null"]
        },
        "ip": {
          "description": "the IP address for your library or branch",
          "type": ["string", "null"]
        },
        "library_id": {
          "description": "internally assigned library identifier",
          "maxLength": 10,
          "minLength": 1,
          "type": "string"
        },
        "marc_org_code": {
          "description": "MARC Organization Code, see http://www.loc.gov/marc/organizations/orgshome.html, when empty defaults to syspref MARCOrgCode",
          "type": ["string", "null"]
        },
        "name": {
          "description": "Printable name of library",
          "type": "string"
        },
        "notes": {
          "description": "notes related to your library or branch",
          "type": ["string", "null"]
        },
        "opac_info": {
          "description": "HTML that displays in OPAC",
          "type": ["string", "null"]
        },
        "phone": {
          "description": "the primary phone of the library",
          "type": ["string", "null"]
        },
        "pickup_location": {
          "description": "If the library can act as a pickup location",
          "type": "boolean"
        },
        "postal_code": {
          "description": "the postal code of the library",
          "type": ["string", "null"]
        },
        "reply_to_email": {
          "description": "the email to be used as a Reply-To",
          "type": ["string", "null"]
        },
        "return_path_email": {
          "description": "the email to be used as Return-Path",
          "type": ["string", "null"]
        },
        "state": {
          "description": "the reqional state of the library",
          "type": ["string", "null"]
        },
        "url": {
          "description": "the URL for your library or branch's website",
          "type": ["string", "null"]
        }
      },
      "required": ["library_id", "name"],
      "type": "object"
    },
    "order": {
      "additionalProperties": false,
      "properties": {
        "basket": { "type": ["object", "null"] },
        "basket_id": {
          "description": "Basket this order is linked to",
          "type": ["integer", "null"]
        },
        "biblio": { "type": ["object", "null"] },
        "biblio_id": {
          "description": "Identifier for the linked bibliographic record",
          "type": ["integer", "null"]
        },
        "cancellation_date": {
          "description": "Date the line item was deleted",
          "format": "date",
          "type": ["string", "null"]
        },
        "cancellation_reason": {
          "description": "Reason of cancellation",
          "type": ["string", "null"]
        },
        "claims_count": {
          "description": "Generated claim letters count",
          "type": "integer"
        },
        "created_by": {
          "description": "Interal patron identifier of the order line creator",
          "type": ["integer", "null"]
        },
        "currency": {
          "description": "Currency used for the purchase",
          "type": ["string", "null"]
        },
        "date_received": {
          "description": "Date the order was received",
          "format": "date",
          "type": ["string", "null"]
        },
        "discount_rate": {
          "description": "Discount rate",
          "type": ["number", "null"]
        },
        "ecost": {
          "description": "Effective cost",
          "type": ["number", "null"]
        },
        "ecost_tax_excluded": {
          "description": "Effective cost (tax excluded)",
          "type": ["number", "null"]
        },
        "ecost_tax_included": {
          "description": "Effective cost (tax included)",
          "type": ["number", "null"]
        },
        "entry_date": {
          "description": "Date the bib was added to the basket",
          "format": "date",
          "type": ["string", "null"]
        },
        "fund": { "type": ["object", "null"] },
        "fund_id": {
          "description": "Internal identifier for the fund this order goes against",
          "type": "integer"
        },
        "internal_note": {
          "description": "Notes related to this order line, made for staff",
          "type": ["string", "null"]
        },
        "invoice": { "type": ["object", "null"] },
        "invoice_id": {
          "description": "Id of the order invoice",
          "type": ["integer", "null"]
        },
        "items": { "type": "array" },
        "last_claim_date": {
          "description": "Last date a claim letter was generated",
          "format": "date",
          "type": ["string", "null"]
        },
        "list_price": {
          "description": "Vendor price for the line item",
          "type": ["number", "null"]
        },
        "order_id": {
          "description": "Internally assigned order identifier",
          "type": "integer"
        },
        "parent_order_id": {
          "description": "Order ID of parent order line if exists",
          "type": ["integer", "null"]
        },
        "quantity": {
          "description": "Ordered quantity",
          "type": ["integer", "null"]
        },
        "quantity_received": {
          "description": "Quantity received so far",
          "type": "integer"
        },
        "replacement_price": {
          "description": "Replacement cost for this item",
          "type": ["number", "null"]
        },
        "rrp": {
          "description": "Retail cost for this item",
          "type": ["number", "null"]
        },
        "rrp_tax_excluded": {
          "description": "Replacement cost for this item (tax excluded)",
          "type": ["number", "null"]
        },
        "rrp_tax_included": {
          "description": "Replacement cost for this item (tax included)",
          "type": ["number", "null"]
        },
        "shipping_cost": {
          "description": "Shipping cost",
          "type": ["number", "null"]
        },
        "statistics_1": {
          "description": "Statistical field",
          "type": ["string", "null"]
        },
        "statistics_1_authcat": {
          "description": "Statistical category for this order",
          "type": ["string", "null"]
        },
        "statistics_2": {
          "description": "Statistical field (2)",
          "type": ["string", "null"]
        },
        "statistics_2_authcat": {
          "description": "Statistical category for this order (2)",
          "type": ["string", "null"]
        },
        "status": {
          "description": "The current order status",
          "enum": ["new", "ordered", "partial", "complete", "cancelled"],
          "type": "string"
        },
        "subscription": { "type": ["object", "null"] },
        "subscription_id": {
          "description": "Subscription ID linking the order to a subscription",
          "type": ["integer", "null"]
        },
        "tax_rate_on_ordering": {
          "description": "Tax rate on ordering (%)",
          "type": ["number", "null"]
        },
        "tax_rate_on_receiving": {
          "description": "Tax rate on receiving (%)",
          "type": ["number", "null"]
        },
        "tax_value_on_ordering": {
          "description": "Tax value on ordering",
          "type": ["number", "null"]
        },
        "tax_value_on_receiving": {
          "description": "Tax value on receiving",
          "type": ["number", "null"]
        },
        "timestamp": {
          "description": "Date and time this order line was last modified",
          "format": "date-time",
          "type": "string"
        },
        "uncertain_price": {
          "description": "If this price was uncertain",
          "type": "boolean"
        },
        "unit_price": {
          "description": "The actual cost entered when receiving this line item",
          "type": ["number", "null"]
        },
        "unit_price_tax_excluded": {
          "description": "Unit price excluding tax (on receiving)",
          "type": ["number", "null"]
        },
        "unit_price_tax_included": {
          "description": "Unit price including tax (on receiving)",
          "type": ["number", "null"]
        },
        "vendor_note": {
          "description": "Notes related to this order line, made for vendor",
          "type": ["string", "null"]
        }
      },
      "type": "object"
    },
    "patron": {
      "additionalProperties": false,
      "properties": {
        "address": {
          "description": "first address line of patron's primary address",
          "type": ["string", "null"]
        },
        "address2": {
          "description": "second address line of patron's primary address",
          "type": ["string", "null"]
        },
        "altaddress_address": {
          "description": "first address line of patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_address2": {
          "description": "second address line of patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_city": {
          "description": "city or town of patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_country": {
          "description": "country of patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_email": {
          "description": "email address for patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_notes": {
          "description": "a note related to patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_phone": {
          "description": "phone number for patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_postal_code": {
          "description": "zip or postal code of patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_state": {
          "description": "state or province of patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_street_number": {
          "description": "street number of patron's alternate address",
          "type": ["string", "null"]
        },
        "altaddress_street_type": {
          "description": "street type of patron's alternate address",
          "type": ["string", "null"]
        },
        "altcontact_address": {
          "description": "the first address line for the alternate contact for the patron",
          "type": ["string", "null"]
        },
        "altcontact_address2": {
          "description": "the second address line for the alternate contact for the patron",
          "type": ["string", "null"]
        },
        "altcontact_city": {
          "description": "the city for the alternate contact for the patron",
          "type": ["string", "null"]
        },
        "altcontact_country": {
          "description": "the country for the alternate contact for the patron",
          "type": ["string", "null"]
        },
        "altcontact_firstname": {
          "description": "first name of alternate contact for the patron",
          "type": ["string", "null"]
        },
        "altcontact_phone": {
          "description": "the phone number for the alternate contact for the patron",
          "type": ["string", "null"]
        },
        "altcontact_postal_code": {
          "description": "the zipcode for the alternate contact for the patron",
          "type": ["string", "null"]
        },
        "altcontact_state": {
          "description": "the state for the alternate contact for the patron",
          "type": ["string", "null"]
        },
        "altcontact_surname": {
          "description": "surname or last name of the alternate contact for the patron",
          "type": ["string", "null"]
        },
        "anonymized": {
          "description": "If the patron has been anonymized",
          "readOnly": true,
          "type": "boolean"
        },
        "autorenew_checkouts": {
          "description": "indicate whether auto-renewal is allowed for patron",
          "type": "boolean"
        },
        "cardnumber": {
          "description": "library assigned user identifier",
          "type": ["string", "null"]
        },
        "category_id": {
          "description": "Internal identifier for the patron's category",
          "type": "string"
        },
        "check_previous_checkout": {
          "description": "produce a warning for this patron if this item has previously been checked out to this patron if 'yes', not if 'no', defer to category setting if 'inherit'",
          "type": "string"
        },
        "city": {
          "description": "city or town of patron's primary address",
          "type": ["string", "null"]
        },
        "country": {
          "description": "country of patron's primary address",
          "type": ["string", "null"]
        },
        "date_enrolled": {
          "description": "date the patron was added to Koha",
          "format": "date",
          "type": ["string", "null"]
        },
        "date_of_birth": {
          "description": "patron's date of birth",
          "format": "date",
          "type": ["string", "null"]
        },
        "date_renewed": {
          "description": "date the patron's card was last renewed",
          "type": ["string", "null"]
        },
        "email": {
          "description": "primary email address for patron's primary address",
          "type": ["string", "null"]
        },
        "expiry_date": {
          "description": "date the patron's card is set to expire",
          "format": "date",
          "type": ["string", "null"]
        },
        "fax": {
          "description": "fax number for patron's primary address",
          "type": ["string", "null"]
        },
        "firstname": {
          "description": "patron's first name",
          "type": ["string", "null"]
        },
        "gender": {
          "description": "patron's gender",
          "type": ["string", "null"]
        },
        "incorrect_address": {
          "description": "set to 1 if library marked this patron as having an unconfirmed address",
          "type": ["boolean", "null"]
        },
        "initials": {
          "description": "initials of the patron",
          "type": ["string", "null"]
        },
        "lang": {
          "description": "lang to use to send notices to this patron",
          "type": "string"
        },
        "last_seen": {
          "description": "last time a patron has been seen (connected at the OPAC or staff interface)",
          "format": "date-time",
          "type": ["string", "null"]
        },
        "library_id": {
          "description": "Internal identifier for the patron's home library",
          "type": "string"
        },
        "login_attempts": {
          "description": "number of failed login attemps",
          "type": ["integer", "null"]
        },
        "mobile": {
          "description": "the other phone number for patron's primary address",
          "type": ["string", "null"]
        },
        "opac_notes": {
          "description": "a note on the patron's account visible in OPAC and staff client",
          "type": ["string", "null"]
        },
        "other_name": {
          "description": "any other names associated with the patron",
          "type": ["string", "null"]
        },
        "overdrive_auth_token": {
          "description": "persist OverDrive auth token",
          "type": ["string", "null"]
        },
        "patron_card_lost": {
          "description": "set to 1 if library marked this patron as having lost his card",
          "type": ["boolean", "null"]
        },
        "patron_id": {
          "description": "Internal patron identifier",
          "type": "integer"
        },
        "phone": {
          "description": "primary phone number for patron's primary address",
          "type": ["string", "null"]
        },
        "postal_code": {
          "description": "zip or postal code of patron's primary address",
          "type": ["string", "null"]
        },
        "privacy": {
          "description": "patron's privacy settings related to their reading history",
          "type": "integer"
        },
        "privacy_guarantor_checkouts": {
          "description": "controls if relatives can see this patron's checkouts",
          "type": "integer"
        },
        "privacy_guarantor_fines": {
          "description": "controls if relatives can see this patron's fines",
          "type": "boolean"
        },
        "relationship_type": {
          "description": "used for children to include the relationship to their guarantor",
          "type": ["string", "null"]
        },
        "restricted": {
          "description": "If any restriction applies to the patron",
          "readOnly": true,
          "type": "boolean"
        },
        "secondary_email": {
          "description": "secondary email address for patron's primary address",
          "type": ["string", "null"]
        },
        "secondary_phone": {
          "description": "secondary phone number for patron's primary address",
          "type": ["string", "null"]
        },
        "sms_number": {
          "description": "the mobile phone number where the patron would like to receive notices (if SMS turned on)",
          "type": ["string", "null"]
        },
        "sms_provider_id": {
          "description": "the provider of the mobile phone number defined in smsalertnumber",
          "type": ["integer", "null"]
        },
        "staff_notes": {
          "description": "a note on the patron's account",
          "type": ["string", "null"]
        },
        "state": {
          "description": "state or province of patron's primary address",
          "type": ["string", "null"]
        },
        "statistics_1": {
          "description": "a field that can be used for any information unique to the library",
          "type": ["string", "null"]
        },
        "statistics_2": {
          "description": "a field that can be used for any information unique to the library",
          "type": ["string", "null"]
        },
        "street_number": {
          "description": "street number of patron's primary address",
          "type": ["string", "null"]
        },
        "street_type": {
          "description": "street type of patron's primary address",
          "type": ["string", "null"]
        },
        "surname": {
          "description": "patron's last name",
          "type": ["string", "null"]
        },
        "title": {
          "description": "patron's title",
          "type": ["string", "null"]
        },
        "updated_on": {
          "description": "time of last change could be useful for synchronization with external systems (among others)",
          "format": "date-time",
          "type": "string"
        },
        "userid": {
          "description": "patron's login",
          "type": ["string", "null"]
        }
      },
      "required": ["surname", "address", "city", "library_id", "category_id"],
      "type": "object"
    },
    "patron_account_credit": {
      "properties": {
        "account_lines_ids": {
          "description": "List of account line ids the credit goes against (optional)",
          "items": { "type": "integer" },
          "type": "array"
        },
        "amount": {
          "description": "Credit amount",
          "minimum": 0,
          "type": "number"
        },
        "credit_type": {
          "description": "Type of credit ('CREDIT', 'FORGIVEN', 'LOST_FOUND', 'PAYMENT', 'WRITEOFF' )",
          "type": "string"
        },
        "date": {
          "description": "Date the credit was recorded (optional)",
          "format": "date",
          "type": "string"
        },
        "description": { "description": "Description", "type": "string" },
        "library_id": {
          "description": "Internal identifier for the library in which the transaction took place",
          "type": ["string", "null"]
        },
        "note": { "description": "Internal note", "type": "string" },
        "payment_type": {
          "description": "Payment type (only applies when credit_type=payment)",
          "type": "string"
        }
      },
      "required": ["amount"],
      "type": "object"
    },
    "patron_balance": {
      "additionalProperties": false,
      "properties": {
        "balance": { "description": "Signed decimal number", "type": "number" },
        "outstanding_credits": {
          "properties": {
            "lines": {
              "items": {
                "properties": {
                  "account_line_id": {
                    "description": "Internal account line identifier",
                    "type": "integer"
                  },
                  "account_type": {
                    "description": "Account line type",
                    "type": ["string", "null"]
                  },
                  "amount": {
                    "description": "Account line amount",
                    "type": "number"
                  },
                  "amount_outstanding": {
                    "description": "Outstanding amount",
                    "type": "number"
                  },
                  "checkout_id": {
                    "description": "Internal identifier for the checkout the account line is related to",
                    "type": ["integer", "null"]
                  },
                  "date": {
                    "description": "Date the account line was created",
                    "format": "date-time",
                    "type": "string"
                  },
                  "debit_type": {
                    "description": "Account line debit type",
                    "type": ["string", "null"]
                  },
                  "description": {
                    "description": "Account line description",
                    "type": ["string", "null"]
                  },
                  "internal_note": {
                    "description": "Internal note",
                    "type": ["string", "null"]
                  },
                  "item_id": {
                    "description": "Internal identifier for the item the account line is related to",
                    "type": ["integer", "null"]
                  },
                  "last_increment": {
                    "description": "The amount the line was increased last time",
                    "type": ["number", "null"]
                  },
                  "library_id": {
                    "description": "Internal identifier for the library in which the transaction took place",
                    "type": ["string", "null"]
                  },
                  "patron_id": {
                    "description": "Internal identifier for the patron the account line belongs to",
                    "type": "integer"
                  },
                  "payment_type": {
                    "description": "Payment type",
                    "type": ["string", "null"]
                  },
                  "timestamp": {
                    "description": "Timestamp for the latest line update",
                    "format": "date-time",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "Internal patron identifier for the staff member that introduced the account line",
                    "type": ["integer", "null"]
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total": { "type": "number" }
          }
        },
        "outstanding_debits": {
          "properties": {
            "lines": {
              "items": {
                "properties": {
                  "account_line_id": {
                    "description": "Internal account line identifier",
                    "type": "integer"
                  },
                  "account_type": {
                    "description": "Account line type",
                    "type": ["string", "null"]
                  },
                  "amount": {
                    "description": "Account line amount",
                    "type": "number"
                  },
                  "amount_outstanding": {
                    "description": "Outstanding amount",
                    "type": "number"
                  },
                  "checkout_id": {
                    "description": "Internal identifier for the checkout the account line is related to",
                    "type": ["integer", "null"]
                  },
                  "date": {
                    "description": "Date the account line was created",
                    "format": "date-time",
                    "type": "string"
                  },
                  "debit_type": {
                    "description": "Account line debit type",
                    "type": ["string", "null"]
                  },
                  "description": {
                    "description": "Account line description",
                    "type": ["string", "null"]
                  },
                  "internal_note": {
                    "description": "Internal note",
                    "type": ["string", "null"]
                  },
                  "item_id": {
                    "description": "Internal identifier for the item the account line is related to",
                    "type": ["integer", "null"]
                  },
                  "last_increment": {
                    "description": "The amount the line was increased last time",
                    "type": ["number", "null"]
                  },
                  "library_id": {
                    "description": "Internal identifier for the library in which the transaction took place",
                    "type": ["string", "null"]
                  },
                  "patron_id": {
                    "description": "Internal identifier for the patron the account line belongs to",
                    "type": "integer"
                  },
                  "payment_type": {
                    "description": "Payment type",
                    "type": ["string", "null"]
                  },
                  "timestamp": {
                    "description": "Timestamp for the latest line update",
                    "format": "date-time",
                    "type": "string"
                  },
                  "user_id": {
                    "description": "Internal patron identifier for the staff member that introduced the account line",
                    "type": ["integer", "null"]
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "total": { "type": "number" }
          },
          "type": "object"
        }
      },
      "required": ["balance"],
      "type": "object"
    },
    "return_claim": {
      "properties": {
        "claim_id": {
          "description": "internally assigned return claim identifier",
          "type": ["integer"]
        },
        "created_by": {
          "description": "patron id of librarian who made the claim",
          "type": ["integer", "null"]
        },
        "created_on": {
          "description": "date of claim creation",
          "format": "date-time",
          "type": ["string", "null"]
        },
        "issue_id": {
          "description": "internal identifier of the claimed checkout if still checked out",
          "type": ["integer", "null"]
        },
        "item_id": {
          "description": "internal identifier of the claimed item",
          "type": ["integer"]
        },
        "notes": {
          "description": "notes about this claim",
          "type": ["string", "null"]
        },
        "old_issue_id": {
          "description": "internal identifier of the claimed checkout if not longer checked out",
          "type": ["integer", "null"]
        },
        "patron_id": {
          "description": "Internal patron identifier",
          "type": "integer"
        },
        "resolution": {
          "description": "code of resolution type for this claim",
          "type": ["string", "null"]
        },
        "resolved_by": {
          "description": "patron id of librarian who resolved this claim",
          "type": ["integer", "null"]
        },
        "resolved_on": {
          "description": "date the claim was resolved",
          "format": "date-time",
          "type": ["string", "null"]
        },
        "updated_by": {
          "description": "patron id of librarian who last updated the claim",
          "type": ["integer", "null"]
        },
        "updated_on": {
          "description": "date the claim was last updated",
          "format": "date-time",
          "type": ["string", "null"]
        }
      },
      "type": "object"
    },
    "vendor": {
      "additionalProperties": false,
      "properties": {
        "accountnumber": {
          "description": "Vendor account number",
          "type": ["string", "null"]
        },
        "active": {
          "description": "Is this vendor active",
          "type": ["boolean", "null"]
        },
        "address1": {
          "description": "Vendor physical address (line 1)",
          "type": ["string", "null"]
        },
        "address2": {
          "description": "Vendor physical address (line 2)",
          "type": ["string", "null"]
        },
        "address3": {
          "description": "Vendor physical address (line 3)",
          "type": ["string", "null"]
        },
        "address4": {
          "description": "Vendor physical address (line 4)",
          "type": ["string", "null"]
        },
        "deliverytime": {
          "description": "Expected delivery time (in days)",
          "type": ["integer", "null"]
        },
        "discount": {
          "description": "Default discount rate for items ordered from this vendor",
          "type": ["number", "null"]
        },
        "fax": {
          "description": "Vendor fax number",
          "type": ["string", "null"]
        },
        "gst": {
          "description": "Is the library taxed when buying from this vendor",
          "type": ["boolean", "null"]
        },
        "id": {
          "description": "internally assigned vendor identifier",
          "readOnly": true,
          "type": "integer"
        },
        "invoice_currency": {
          "description": "Invoice prices currency",
          "type": ["string", "null"]
        },
        "invoice_includes_gst": {
          "description": "Invoice prices include taxes",
          "type": ["boolean", "null"]
        },
        "list_currency": {
          "description": "List prices currency",
          "type": ["string", "null"]
        },
        "list_includes_gst": {
          "description": "List prices include taxes",
          "type": ["boolean", "null"]
        },
        "name": { "description": "Vendor name", "type": ["string"] },
        "notes": { "description": "Vendor notes", "type": ["string", "null"] },
        "phone": {
          "description": "Vendor phone number",
          "type": ["string", "null"]
        },
        "postal": {
          "description": "Vendor postal address",
          "type": ["string", "null"]
        },
        "tax_rate": {
          "description": "Default tax rate for items ordered from this vendor",
          "type": ["number", "null"]
        },
        "url": {
          "description": "Vendor web address",
          "type": ["string", "null"]
        }
      },
      "required": ["name"],
      "type": "object"
    }
  },
  "host": "biblioteca-intra.fac.unb.br",
  "info": {
    "contact": {
      "name": "Koha Development Team",
      "url": "https://koha-community.org/"
    },
    "license": {
      "name": "GPL v3",
      "url": "http://www.gnu.org/licenses/gpl.txt"
    },
    "title": "Koha REST API",
    "version": "1"
  },
  "parameters": {
    "advancededitormacro_id_pp": {
      "description": "Advanced editor macro internal identifier",
      "in": "path",
      "name": "advancededitormacro_id",
      "required": true,
      "type": "integer"
    },
    "biblio_id_pp": {
      "description": "Record internal identifier",
      "in": "path",
      "name": "biblio_id",
      "required": true,
      "type": "integer"
    },
    "checkout_id_pp": {
      "description": "Internal checkout identifier",
      "in": "path",
      "name": "checkout_id",
      "required": true,
      "type": "integer"
    },
    "city_id_pp": {
      "description": "City internal identifier",
      "in": "path",
      "name": "city_id",
      "required": true,
      "type": "integer"
    },
    "club_id_pp": {
      "description": "Internal club identifier",
      "in": "path",
      "name": "club_id",
      "required": true,
      "type": "integer"
    },
    "fundidPathParam": {
      "description": "Fund id",
      "in": "path",
      "name": "fund_id",
      "required": true,
      "type": "integer"
    },
    "hold_id_pp": {
      "description": "Internal hold identifier",
      "in": "path",
      "name": "hold_id",
      "required": true,
      "type": "integer"
    },
    "item_id_pp": {
      "description": "Internal item identifier",
      "in": "path",
      "name": "item_id",
      "required": true,
      "type": "integer"
    },
    "library_id_pp": {
      "description": "Internal library identifier",
      "in": "path",
      "name": "library_id",
      "required": true,
      "type": "string"
    },
    "match": {
      "description": "Matching criteria",
      "enum": ["contains", "exact", "starts_with", "ends_with"],
      "in": "query",
      "name": "_match",
      "required": false,
      "type": "string"
    },
    "order_by": {
      "collectionFormat": "csv",
      "description": "Sorting criteria",
      "in": "query",
      "items": { "type": "string" },
      "name": "_order_by",
      "required": false,
      "type": "array"
    },
    "order_id_pp": {
      "description": "Internal order identifier",
      "in": "path",
      "name": "order_id",
      "required": true,
      "type": "integer"
    },
    "page": {
      "description": "Page number, for paginated object listing",
      "in": "query",
      "name": "_page",
      "required": false,
      "type": "integer"
    },
    "patron_id_pp": {
      "description": "Internal patron identifier",
      "in": "path",
      "name": "patron_id",
      "required": true,
      "type": "integer"
    },
    "patron_id_qp": {
      "description": "Internal patron identifier",
      "in": "query",
      "name": "patron_id",
      "type": "integer"
    },
    "per_page": {
      "description": "Page size, for paginated object listing",
      "in": "query",
      "name": "_per_page",
      "required": false,
      "type": "integer"
    },
    "q_body": {
      "description": "Query filter sent through request's body",
      "in": "body",
      "name": "query",
      "required": false,
      "schema": { "type": ["object", "array"] }
    },
    "q_header": {
      "description": "Query filter sent as a request header",
      "in": "header",
      "name": "x-koha-query",
      "required": false,
      "type": "string"
    },
    "q_param": {
      "description": "Query filter sent as a request parameter",
      "in": "query",
      "name": "q",
      "required": false,
      "type": "string"
    },
    "vendoridPathParam": {
      "description": "Vendor id",
      "in": "path",
      "name": "vendor_id",
      "required": true,
      "type": "integer"
    }
  },
  "paths": {
    "/acquisitions/funds": {
      "get": {
        "operationId": "listFunds",
        "parameters": [
          {
            "description": "Case insensitive search on fund name",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Display only the funds that belongs to the given patron ID",
            "in": "query",
            "name": "fund_owner_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Matching criteria",
            "enum": ["contains", "exact", "starts_with", "ends_with"],
            "in": "query",
            "name": "_match",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Sorting criteria",
            "in": "query",
            "items": { "type": "string" },
            "name": "_order_by",
            "required": false,
            "type": "array"
          },
          {
            "description": "Page number, for paginated object listing",
            "in": "query",
            "name": "_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page size, for paginated object listing",
            "in": "query",
            "name": "_per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of funds",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "budget_id": {
                    "description": "Internal identifier for the budget",
                    "type": ["number", "null"]
                  },
                  "code": {
                    "description": "Code assigned to the fund by the user",
                    "type": ["string", "null"]
                  },
                  "fund_access": {
                    "description": "Level of permission for this fund (1: owner, 2: owner, users and library, 3: owner and users)",
                    "type": ["number", "null"]
                  },
                  "fund_id": {
                    "description": "internally assigned fund identifier",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "fund_owner_id": {
                    "description": "Internal identifier for the fund owner",
                    "type": ["number", "null"]
                  },
                  "library_id": {
                    "description": "Internal identifier for the library that this fund belongs to",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Name assigned to the fund by the user",
                    "type": ["string", "null"]
                  },
                  "notes": {
                    "description": "Notes related to this fund",
                    "type": ["string", "null"]
                  },
                  "parent_fund_id": {
                    "description": "Internal identifier for parent fund",
                    "type": ["integer", "null"]
                  },
                  "statistic1_auth_value_category": {
                    "description": "Statistical category for this fund",
                    "type": ["string", "null"]
                  },
                  "statistic2_auth_value_category": {
                    "description": "Second statistical category for this fund",
                    "type": ["string", "null"]
                  },
                  "timestamp": {
                    "description": "Timestamp",
                    "format": "date-time",
                    "type": ["string"]
                  },
                  "total_amount": {
                    "description": "Total amount for this fund",
                    "type": ["number", "null"]
                  },
                  "warn_at_amount": {
                    "description": "Warning at amount",
                    "type": ["number", "null"]
                  },
                  "warn_at_percentage": {
                    "description": "Warning at percentage",
                    "type": ["number", "null"]
                  }
                },
                "required": ["name"],
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Fund not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "funds"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "budget_manage_all" }
        },
        "x-mojo-to": "Acquisitions::Funds#list"
      }
    },
    "/acquisitions/orders": {
      "get": {
        "operationId": "listOrders",
        "parameters": [
          {
            "description": "Identifier for a linked bibliographic record",
            "in": "query",
            "name": "biblio_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Identifier for a linked acquisition basket",
            "in": "query",
            "name": "basket_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Identifier for the fund the order goes against",
            "in": "query",
            "name": "fund_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Current status for the order. Can be 'new', 'ordered', 'partial', 'complete' or 'cancelled'",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "Matching criteria",
            "enum": ["contains", "exact", "starts_with", "ends_with"],
            "in": "query",
            "name": "_match",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Sorting criteria",
            "in": "query",
            "items": { "type": "string" },
            "name": "_order_by",
            "required": false,
            "type": "array"
          },
          {
            "description": "Page number, for paginated object listing",
            "in": "query",
            "name": "_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page size, for paginated object listing",
            "in": "query",
            "name": "_per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of orders",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "basket": { "type": ["object", "null"] },
                  "basket_id": {
                    "description": "Basket this order is linked to",
                    "type": ["integer", "null"]
                  },
                  "biblio": { "type": ["object", "null"] },
                  "biblio_id": {
                    "description": "Identifier for the linked bibliographic record",
                    "type": ["integer", "null"]
                  },
                  "cancellation_date": {
                    "description": "Date the line item was deleted",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "cancellation_reason": {
                    "description": "Reason of cancellation",
                    "type": ["string", "null"]
                  },
                  "claims_count": {
                    "description": "Generated claim letters count",
                    "type": "integer"
                  },
                  "created_by": {
                    "description": "Interal patron identifier of the order line creator",
                    "type": ["integer", "null"]
                  },
                  "currency": {
                    "description": "Currency used for the purchase",
                    "type": ["string", "null"]
                  },
                  "date_received": {
                    "description": "Date the order was received",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "discount_rate": {
                    "description": "Discount rate",
                    "type": ["number", "null"]
                  },
                  "ecost": {
                    "description": "Effective cost",
                    "type": ["number", "null"]
                  },
                  "ecost_tax_excluded": {
                    "description": "Effective cost (tax excluded)",
                    "type": ["number", "null"]
                  },
                  "ecost_tax_included": {
                    "description": "Effective cost (tax included)",
                    "type": ["number", "null"]
                  },
                  "entry_date": {
                    "description": "Date the bib was added to the basket",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "fund": { "type": ["object", "null"] },
                  "fund_id": {
                    "description": "Internal identifier for the fund this order goes against",
                    "type": "integer"
                  },
                  "internal_note": {
                    "description": "Notes related to this order line, made for staff",
                    "type": ["string", "null"]
                  },
                  "invoice": { "type": ["object", "null"] },
                  "invoice_id": {
                    "description": "Id of the order invoice",
                    "type": ["integer", "null"]
                  },
                  "items": { "type": "array" },
                  "last_claim_date": {
                    "description": "Last date a claim letter was generated",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "list_price": {
                    "description": "Vendor price for the line item",
                    "type": ["number", "null"]
                  },
                  "order_id": {
                    "description": "Internally assigned order identifier",
                    "type": "integer"
                  },
                  "parent_order_id": {
                    "description": "Order ID of parent order line if exists",
                    "type": ["integer", "null"]
                  },
                  "quantity": {
                    "description": "Ordered quantity",
                    "type": ["integer", "null"]
                  },
                  "quantity_received": {
                    "description": "Quantity received so far",
                    "type": "integer"
                  },
                  "replacement_price": {
                    "description": "Replacement cost for this item",
                    "type": ["number", "null"]
                  },
                  "rrp": {
                    "description": "Retail cost for this item",
                    "type": ["number", "null"]
                  },
                  "rrp_tax_excluded": {
                    "description": "Replacement cost for this item (tax excluded)",
                    "type": ["number", "null"]
                  },
                  "rrp_tax_included": {
                    "description": "Replacement cost for this item (tax included)",
                    "type": ["number", "null"]
                  },
                  "shipping_cost": {
                    "description": "Shipping cost",
                    "type": ["number", "null"]
                  },
                  "statistics_1": {
                    "description": "Statistical field",
                    "type": ["string", "null"]
                  },
                  "statistics_1_authcat": {
                    "description": "Statistical category for this order",
                    "type": ["string", "null"]
                  },
                  "statistics_2": {
                    "description": "Statistical field (2)",
                    "type": ["string", "null"]
                  },
                  "statistics_2_authcat": {
                    "description": "Statistical category for this order (2)",
                    "type": ["string", "null"]
                  },
                  "status": {
                    "description": "The current order status",
                    "enum": [
                      "new",
                      "ordered",
                      "partial",
                      "complete",
                      "cancelled"
                    ],
                    "type": "string"
                  },
                  "subscription": { "type": ["object", "null"] },
                  "subscription_id": {
                    "description": "Subscription ID linking the order to a subscription",
                    "type": ["integer", "null"]
                  },
                  "tax_rate_on_ordering": {
                    "description": "Tax rate on ordering (%)",
                    "type": ["number", "null"]
                  },
                  "tax_rate_on_receiving": {
                    "description": "Tax rate on receiving (%)",
                    "type": ["number", "null"]
                  },
                  "tax_value_on_ordering": {
                    "description": "Tax value on ordering",
                    "type": ["number", "null"]
                  },
                  "tax_value_on_receiving": {
                    "description": "Tax value on receiving",
                    "type": ["number", "null"]
                  },
                  "timestamp": {
                    "description": "Date and time this order line was last modified",
                    "format": "date-time",
                    "type": "string"
                  },
                  "uncertain_price": {
                    "description": "If this price was uncertain",
                    "type": "boolean"
                  },
                  "unit_price": {
                    "description": "The actual cost entered when receiving this line item",
                    "type": ["number", "null"]
                  },
                  "unit_price_tax_excluded": {
                    "description": "Unit price excluding tax (on receiving)",
                    "type": ["number", "null"]
                  },
                  "unit_price_tax_included": {
                    "description": "Unit price including tax (on receiving)",
                    "type": ["number", "null"]
                  },
                  "vendor_note": {
                    "description": "Notes related to this order line, made for vendor",
                    "type": ["string", "null"]
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "orders"],
        "x-koha-authorization": {
          "permissions": { "acquisition": ["order_manage", "order_manage_all"] }
        },
        "x-koha-embed": [
          "basket",
          "fund",
          "invoice",
          "subscription",
          "items",
          "biblio"
        ],
        "x-mojo-to": "Acquisitions::Orders#list"
      },
      "post": {
        "operationId": "addOrder",
        "parameters": [
          {
            "description": "A JSON object representing an order",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "basket": { "type": ["object", "null"] },
                "basket_id": {
                  "description": "Basket this order is linked to",
                  "type": ["integer", "null"]
                },
                "biblio": { "type": ["object", "null"] },
                "biblio_id": {
                  "description": "Identifier for the linked bibliographic record",
                  "type": ["integer", "null"]
                },
                "cancellation_date": {
                  "description": "Date the line item was deleted",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "cancellation_reason": {
                  "description": "Reason of cancellation",
                  "type": ["string", "null"]
                },
                "claims_count": {
                  "description": "Generated claim letters count",
                  "type": "integer"
                },
                "created_by": {
                  "description": "Interal patron identifier of the order line creator",
                  "type": ["integer", "null"]
                },
                "currency": {
                  "description": "Currency used for the purchase",
                  "type": ["string", "null"]
                },
                "date_received": {
                  "description": "Date the order was received",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "discount_rate": {
                  "description": "Discount rate",
                  "type": ["number", "null"]
                },
                "ecost": {
                  "description": "Effective cost",
                  "type": ["number", "null"]
                },
                "ecost_tax_excluded": {
                  "description": "Effective cost (tax excluded)",
                  "type": ["number", "null"]
                },
                "ecost_tax_included": {
                  "description": "Effective cost (tax included)",
                  "type": ["number", "null"]
                },
                "entry_date": {
                  "description": "Date the bib was added to the basket",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "fund": { "type": ["object", "null"] },
                "fund_id": {
                  "description": "Internal identifier for the fund this order goes against",
                  "type": "integer"
                },
                "internal_note": {
                  "description": "Notes related to this order line, made for staff",
                  "type": ["string", "null"]
                },
                "invoice": { "type": ["object", "null"] },
                "invoice_id": {
                  "description": "Id of the order invoice",
                  "type": ["integer", "null"]
                },
                "items": { "type": "array" },
                "last_claim_date": {
                  "description": "Last date a claim letter was generated",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "list_price": {
                  "description": "Vendor price for the line item",
                  "type": ["number", "null"]
                },
                "order_id": {
                  "description": "Internally assigned order identifier",
                  "type": "integer"
                },
                "parent_order_id": {
                  "description": "Order ID of parent order line if exists",
                  "type": ["integer", "null"]
                },
                "quantity": {
                  "description": "Ordered quantity",
                  "type": ["integer", "null"]
                },
                "quantity_received": {
                  "description": "Quantity received so far",
                  "type": "integer"
                },
                "replacement_price": {
                  "description": "Replacement cost for this item",
                  "type": ["number", "null"]
                },
                "rrp": {
                  "description": "Retail cost for this item",
                  "type": ["number", "null"]
                },
                "rrp_tax_excluded": {
                  "description": "Replacement cost for this item (tax excluded)",
                  "type": ["number", "null"]
                },
                "rrp_tax_included": {
                  "description": "Replacement cost for this item (tax included)",
                  "type": ["number", "null"]
                },
                "shipping_cost": {
                  "description": "Shipping cost",
                  "type": ["number", "null"]
                },
                "statistics_1": {
                  "description": "Statistical field",
                  "type": ["string", "null"]
                },
                "statistics_1_authcat": {
                  "description": "Statistical category for this order",
                  "type": ["string", "null"]
                },
                "statistics_2": {
                  "description": "Statistical field (2)",
                  "type": ["string", "null"]
                },
                "statistics_2_authcat": {
                  "description": "Statistical category for this order (2)",
                  "type": ["string", "null"]
                },
                "status": {
                  "description": "The current order status",
                  "enum": [
                    "new",
                    "ordered",
                    "partial",
                    "complete",
                    "cancelled"
                  ],
                  "type": "string"
                },
                "subscription": { "type": ["object", "null"] },
                "subscription_id": {
                  "description": "Subscription ID linking the order to a subscription",
                  "type": ["integer", "null"]
                },
                "tax_rate_on_ordering": {
                  "description": "Tax rate on ordering (%)",
                  "type": ["number", "null"]
                },
                "tax_rate_on_receiving": {
                  "description": "Tax rate on receiving (%)",
                  "type": ["number", "null"]
                },
                "tax_value_on_ordering": {
                  "description": "Tax value on ordering",
                  "type": ["number", "null"]
                },
                "tax_value_on_receiving": {
                  "description": "Tax value on receiving",
                  "type": ["number", "null"]
                },
                "timestamp": {
                  "description": "Date and time this order line was last modified",
                  "format": "date-time",
                  "type": "string"
                },
                "uncertain_price": {
                  "description": "If this price was uncertain",
                  "type": "boolean"
                },
                "unit_price": {
                  "description": "The actual cost entered when receiving this line item",
                  "type": ["number", "null"]
                },
                "unit_price_tax_excluded": {
                  "description": "Unit price excluding tax (on receiving)",
                  "type": ["number", "null"]
                },
                "unit_price_tax_included": {
                  "description": "Unit price including tax (on receiving)",
                  "type": ["number", "null"]
                },
                "vendor_note": {
                  "description": "Notes related to this order line, made for vendor",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Order added",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "basket": { "type": ["object", "null"] },
                "basket_id": {
                  "description": "Basket this order is linked to",
                  "type": ["integer", "null"]
                },
                "biblio": { "type": ["object", "null"] },
                "biblio_id": {
                  "description": "Identifier for the linked bibliographic record",
                  "type": ["integer", "null"]
                },
                "cancellation_date": {
                  "description": "Date the line item was deleted",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "cancellation_reason": {
                  "description": "Reason of cancellation",
                  "type": ["string", "null"]
                },
                "claims_count": {
                  "description": "Generated claim letters count",
                  "type": "integer"
                },
                "created_by": {
                  "description": "Interal patron identifier of the order line creator",
                  "type": ["integer", "null"]
                },
                "currency": {
                  "description": "Currency used for the purchase",
                  "type": ["string", "null"]
                },
                "date_received": {
                  "description": "Date the order was received",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "discount_rate": {
                  "description": "Discount rate",
                  "type": ["number", "null"]
                },
                "ecost": {
                  "description": "Effective cost",
                  "type": ["number", "null"]
                },
                "ecost_tax_excluded": {
                  "description": "Effective cost (tax excluded)",
                  "type": ["number", "null"]
                },
                "ecost_tax_included": {
                  "description": "Effective cost (tax included)",
                  "type": ["number", "null"]
                },
                "entry_date": {
                  "description": "Date the bib was added to the basket",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "fund": { "type": ["object", "null"] },
                "fund_id": {
                  "description": "Internal identifier for the fund this order goes against",
                  "type": "integer"
                },
                "internal_note": {
                  "description": "Notes related to this order line, made for staff",
                  "type": ["string", "null"]
                },
                "invoice": { "type": ["object", "null"] },
                "invoice_id": {
                  "description": "Id of the order invoice",
                  "type": ["integer", "null"]
                },
                "items": { "type": "array" },
                "last_claim_date": {
                  "description": "Last date a claim letter was generated",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "list_price": {
                  "description": "Vendor price for the line item",
                  "type": ["number", "null"]
                },
                "order_id": {
                  "description": "Internally assigned order identifier",
                  "type": "integer"
                },
                "parent_order_id": {
                  "description": "Order ID of parent order line if exists",
                  "type": ["integer", "null"]
                },
                "quantity": {
                  "description": "Ordered quantity",
                  "type": ["integer", "null"]
                },
                "quantity_received": {
                  "description": "Quantity received so far",
                  "type": "integer"
                },
                "replacement_price": {
                  "description": "Replacement cost for this item",
                  "type": ["number", "null"]
                },
                "rrp": {
                  "description": "Retail cost for this item",
                  "type": ["number", "null"]
                },
                "rrp_tax_excluded": {
                  "description": "Replacement cost for this item (tax excluded)",
                  "type": ["number", "null"]
                },
                "rrp_tax_included": {
                  "description": "Replacement cost for this item (tax included)",
                  "type": ["number", "null"]
                },
                "shipping_cost": {
                  "description": "Shipping cost",
                  "type": ["number", "null"]
                },
                "statistics_1": {
                  "description": "Statistical field",
                  "type": ["string", "null"]
                },
                "statistics_1_authcat": {
                  "description": "Statistical category for this order",
                  "type": ["string", "null"]
                },
                "statistics_2": {
                  "description": "Statistical field (2)",
                  "type": ["string", "null"]
                },
                "statistics_2_authcat": {
                  "description": "Statistical category for this order (2)",
                  "type": ["string", "null"]
                },
                "status": {
                  "description": "The current order status",
                  "enum": [
                    "new",
                    "ordered",
                    "partial",
                    "complete",
                    "cancelled"
                  ],
                  "type": "string"
                },
                "subscription": { "type": ["object", "null"] },
                "subscription_id": {
                  "description": "Subscription ID linking the order to a subscription",
                  "type": ["integer", "null"]
                },
                "tax_rate_on_ordering": {
                  "description": "Tax rate on ordering (%)",
                  "type": ["number", "null"]
                },
                "tax_rate_on_receiving": {
                  "description": "Tax rate on receiving (%)",
                  "type": ["number", "null"]
                },
                "tax_value_on_ordering": {
                  "description": "Tax value on ordering",
                  "type": ["number", "null"]
                },
                "tax_value_on_receiving": {
                  "description": "Tax value on receiving",
                  "type": ["number", "null"]
                },
                "timestamp": {
                  "description": "Date and time this order line was last modified",
                  "format": "date-time",
                  "type": "string"
                },
                "uncertain_price": {
                  "description": "If this price was uncertain",
                  "type": "boolean"
                },
                "unit_price": {
                  "description": "The actual cost entered when receiving this line item",
                  "type": ["number", "null"]
                },
                "unit_price_tax_excluded": {
                  "description": "Unit price excluding tax (on receiving)",
                  "type": ["number", "null"]
                },
                "unit_price_tax_included": {
                  "description": "Unit price including tax (on receiving)",
                  "type": ["number", "null"]
                },
                "vendor_note": {
                  "description": "Notes related to this order line, made for vendor",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "409": {
            "description": "Conflict in creating the resource",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "orders"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "order_manage" }
        },
        "x-mojo-to": "Acquisitions::Orders#add"
      }
    },
    "/acquisitions/orders/{order_id}": {
      "delete": {
        "operationId": "deleteOrder",
        "parameters": [
          {
            "description": "Internal order identifier",
            "in": "path",
            "name": "order_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": { "description": "Order deleted" },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "orders"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "order_manage" }
        },
        "x-mojo-to": "Acquisitions::Orders#delete"
      },
      "get": {
        "operationId": "getOrder",
        "parameters": [
          {
            "description": "Internal order identifier",
            "in": "path",
            "name": "order_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "An order",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "basket": { "type": ["object", "null"] },
                "basket_id": {
                  "description": "Basket this order is linked to",
                  "type": ["integer", "null"]
                },
                "biblio": { "type": ["object", "null"] },
                "biblio_id": {
                  "description": "Identifier for the linked bibliographic record",
                  "type": ["integer", "null"]
                },
                "cancellation_date": {
                  "description": "Date the line item was deleted",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "cancellation_reason": {
                  "description": "Reason of cancellation",
                  "type": ["string", "null"]
                },
                "claims_count": {
                  "description": "Generated claim letters count",
                  "type": "integer"
                },
                "created_by": {
                  "description": "Interal patron identifier of the order line creator",
                  "type": ["integer", "null"]
                },
                "currency": {
                  "description": "Currency used for the purchase",
                  "type": ["string", "null"]
                },
                "date_received": {
                  "description": "Date the order was received",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "discount_rate": {
                  "description": "Discount rate",
                  "type": ["number", "null"]
                },
                "ecost": {
                  "description": "Effective cost",
                  "type": ["number", "null"]
                },
                "ecost_tax_excluded": {
                  "description": "Effective cost (tax excluded)",
                  "type": ["number", "null"]
                },
                "ecost_tax_included": {
                  "description": "Effective cost (tax included)",
                  "type": ["number", "null"]
                },
                "entry_date": {
                  "description": "Date the bib was added to the basket",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "fund": { "type": ["object", "null"] },
                "fund_id": {
                  "description": "Internal identifier for the fund this order goes against",
                  "type": "integer"
                },
                "internal_note": {
                  "description": "Notes related to this order line, made for staff",
                  "type": ["string", "null"]
                },
                "invoice": { "type": ["object", "null"] },
                "invoice_id": {
                  "description": "Id of the order invoice",
                  "type": ["integer", "null"]
                },
                "items": { "type": "array" },
                "last_claim_date": {
                  "description": "Last date a claim letter was generated",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "list_price": {
                  "description": "Vendor price for the line item",
                  "type": ["number", "null"]
                },
                "order_id": {
                  "description": "Internally assigned order identifier",
                  "type": "integer"
                },
                "parent_order_id": {
                  "description": "Order ID of parent order line if exists",
                  "type": ["integer", "null"]
                },
                "quantity": {
                  "description": "Ordered quantity",
                  "type": ["integer", "null"]
                },
                "quantity_received": {
                  "description": "Quantity received so far",
                  "type": "integer"
                },
                "replacement_price": {
                  "description": "Replacement cost for this item",
                  "type": ["number", "null"]
                },
                "rrp": {
                  "description": "Retail cost for this item",
                  "type": ["number", "null"]
                },
                "rrp_tax_excluded": {
                  "description": "Replacement cost for this item (tax excluded)",
                  "type": ["number", "null"]
                },
                "rrp_tax_included": {
                  "description": "Replacement cost for this item (tax included)",
                  "type": ["number", "null"]
                },
                "shipping_cost": {
                  "description": "Shipping cost",
                  "type": ["number", "null"]
                },
                "statistics_1": {
                  "description": "Statistical field",
                  "type": ["string", "null"]
                },
                "statistics_1_authcat": {
                  "description": "Statistical category for this order",
                  "type": ["string", "null"]
                },
                "statistics_2": {
                  "description": "Statistical field (2)",
                  "type": ["string", "null"]
                },
                "statistics_2_authcat": {
                  "description": "Statistical category for this order (2)",
                  "type": ["string", "null"]
                },
                "status": {
                  "description": "The current order status",
                  "enum": [
                    "new",
                    "ordered",
                    "partial",
                    "complete",
                    "cancelled"
                  ],
                  "type": "string"
                },
                "subscription": { "type": ["object", "null"] },
                "subscription_id": {
                  "description": "Subscription ID linking the order to a subscription",
                  "type": ["integer", "null"]
                },
                "tax_rate_on_ordering": {
                  "description": "Tax rate on ordering (%)",
                  "type": ["number", "null"]
                },
                "tax_rate_on_receiving": {
                  "description": "Tax rate on receiving (%)",
                  "type": ["number", "null"]
                },
                "tax_value_on_ordering": {
                  "description": "Tax value on ordering",
                  "type": ["number", "null"]
                },
                "tax_value_on_receiving": {
                  "description": "Tax value on receiving",
                  "type": ["number", "null"]
                },
                "timestamp": {
                  "description": "Date and time this order line was last modified",
                  "format": "date-time",
                  "type": "string"
                },
                "uncertain_price": {
                  "description": "If this price was uncertain",
                  "type": "boolean"
                },
                "unit_price": {
                  "description": "The actual cost entered when receiving this line item",
                  "type": ["number", "null"]
                },
                "unit_price_tax_excluded": {
                  "description": "Unit price excluding tax (on receiving)",
                  "type": ["number", "null"]
                },
                "unit_price_tax_included": {
                  "description": "Unit price including tax (on receiving)",
                  "type": ["number", "null"]
                },
                "vendor_note": {
                  "description": "Notes related to this order line, made for vendor",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "orders"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "order_manage" }
        },
        "x-koha-embed": [
          "basket",
          "fund",
          "invoice",
          "subscription",
          "items",
          "biblio"
        ],
        "x-mojo-to": "Acquisitions::Orders#get"
      },
      "put": {
        "operationId": "updateOrder",
        "parameters": [
          {
            "description": "Internal order identifier",
            "in": "path",
            "name": "order_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object representing an order",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "basket": { "type": ["object", "null"] },
                "basket_id": {
                  "description": "Basket this order is linked to",
                  "type": ["integer", "null"]
                },
                "biblio": { "type": ["object", "null"] },
                "biblio_id": {
                  "description": "Identifier for the linked bibliographic record",
                  "type": ["integer", "null"]
                },
                "cancellation_date": {
                  "description": "Date the line item was deleted",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "cancellation_reason": {
                  "description": "Reason of cancellation",
                  "type": ["string", "null"]
                },
                "claims_count": {
                  "description": "Generated claim letters count",
                  "type": "integer"
                },
                "created_by": {
                  "description": "Interal patron identifier of the order line creator",
                  "type": ["integer", "null"]
                },
                "currency": {
                  "description": "Currency used for the purchase",
                  "type": ["string", "null"]
                },
                "date_received": {
                  "description": "Date the order was received",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "discount_rate": {
                  "description": "Discount rate",
                  "type": ["number", "null"]
                },
                "ecost": {
                  "description": "Effective cost",
                  "type": ["number", "null"]
                },
                "ecost_tax_excluded": {
                  "description": "Effective cost (tax excluded)",
                  "type": ["number", "null"]
                },
                "ecost_tax_included": {
                  "description": "Effective cost (tax included)",
                  "type": ["number", "null"]
                },
                "entry_date": {
                  "description": "Date the bib was added to the basket",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "fund": { "type": ["object", "null"] },
                "fund_id": {
                  "description": "Internal identifier for the fund this order goes against",
                  "type": "integer"
                },
                "internal_note": {
                  "description": "Notes related to this order line, made for staff",
                  "type": ["string", "null"]
                },
                "invoice": { "type": ["object", "null"] },
                "invoice_id": {
                  "description": "Id of the order invoice",
                  "type": ["integer", "null"]
                },
                "items": { "type": "array" },
                "last_claim_date": {
                  "description": "Last date a claim letter was generated",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "list_price": {
                  "description": "Vendor price for the line item",
                  "type": ["number", "null"]
                },
                "order_id": {
                  "description": "Internally assigned order identifier",
                  "type": "integer"
                },
                "parent_order_id": {
                  "description": "Order ID of parent order line if exists",
                  "type": ["integer", "null"]
                },
                "quantity": {
                  "description": "Ordered quantity",
                  "type": ["integer", "null"]
                },
                "quantity_received": {
                  "description": "Quantity received so far",
                  "type": "integer"
                },
                "replacement_price": {
                  "description": "Replacement cost for this item",
                  "type": ["number", "null"]
                },
                "rrp": {
                  "description": "Retail cost for this item",
                  "type": ["number", "null"]
                },
                "rrp_tax_excluded": {
                  "description": "Replacement cost for this item (tax excluded)",
                  "type": ["number", "null"]
                },
                "rrp_tax_included": {
                  "description": "Replacement cost for this item (tax included)",
                  "type": ["number", "null"]
                },
                "shipping_cost": {
                  "description": "Shipping cost",
                  "type": ["number", "null"]
                },
                "statistics_1": {
                  "description": "Statistical field",
                  "type": ["string", "null"]
                },
                "statistics_1_authcat": {
                  "description": "Statistical category for this order",
                  "type": ["string", "null"]
                },
                "statistics_2": {
                  "description": "Statistical field (2)",
                  "type": ["string", "null"]
                },
                "statistics_2_authcat": {
                  "description": "Statistical category for this order (2)",
                  "type": ["string", "null"]
                },
                "status": {
                  "description": "The current order status",
                  "enum": [
                    "new",
                    "ordered",
                    "partial",
                    "complete",
                    "cancelled"
                  ],
                  "type": "string"
                },
                "subscription": { "type": ["object", "null"] },
                "subscription_id": {
                  "description": "Subscription ID linking the order to a subscription",
                  "type": ["integer", "null"]
                },
                "tax_rate_on_ordering": {
                  "description": "Tax rate on ordering (%)",
                  "type": ["number", "null"]
                },
                "tax_rate_on_receiving": {
                  "description": "Tax rate on receiving (%)",
                  "type": ["number", "null"]
                },
                "tax_value_on_ordering": {
                  "description": "Tax value on ordering",
                  "type": ["number", "null"]
                },
                "tax_value_on_receiving": {
                  "description": "Tax value on receiving",
                  "type": ["number", "null"]
                },
                "timestamp": {
                  "description": "Date and time this order line was last modified",
                  "format": "date-time",
                  "type": "string"
                },
                "uncertain_price": {
                  "description": "If this price was uncertain",
                  "type": "boolean"
                },
                "unit_price": {
                  "description": "The actual cost entered when receiving this line item",
                  "type": ["number", "null"]
                },
                "unit_price_tax_excluded": {
                  "description": "Unit price excluding tax (on receiving)",
                  "type": ["number", "null"]
                },
                "unit_price_tax_included": {
                  "description": "Unit price including tax (on receiving)",
                  "type": ["number", "null"]
                },
                "vendor_note": {
                  "description": "Notes related to this order line, made for vendor",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "An order",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "basket": { "type": ["object", "null"] },
                "basket_id": {
                  "description": "Basket this order is linked to",
                  "type": ["integer", "null"]
                },
                "biblio": { "type": ["object", "null"] },
                "biblio_id": {
                  "description": "Identifier for the linked bibliographic record",
                  "type": ["integer", "null"]
                },
                "cancellation_date": {
                  "description": "Date the line item was deleted",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "cancellation_reason": {
                  "description": "Reason of cancellation",
                  "type": ["string", "null"]
                },
                "claims_count": {
                  "description": "Generated claim letters count",
                  "type": "integer"
                },
                "created_by": {
                  "description": "Interal patron identifier of the order line creator",
                  "type": ["integer", "null"]
                },
                "currency": {
                  "description": "Currency used for the purchase",
                  "type": ["string", "null"]
                },
                "date_received": {
                  "description": "Date the order was received",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "discount_rate": {
                  "description": "Discount rate",
                  "type": ["number", "null"]
                },
                "ecost": {
                  "description": "Effective cost",
                  "type": ["number", "null"]
                },
                "ecost_tax_excluded": {
                  "description": "Effective cost (tax excluded)",
                  "type": ["number", "null"]
                },
                "ecost_tax_included": {
                  "description": "Effective cost (tax included)",
                  "type": ["number", "null"]
                },
                "entry_date": {
                  "description": "Date the bib was added to the basket",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "fund": { "type": ["object", "null"] },
                "fund_id": {
                  "description": "Internal identifier for the fund this order goes against",
                  "type": "integer"
                },
                "internal_note": {
                  "description": "Notes related to this order line, made for staff",
                  "type": ["string", "null"]
                },
                "invoice": { "type": ["object", "null"] },
                "invoice_id": {
                  "description": "Id of the order invoice",
                  "type": ["integer", "null"]
                },
                "items": { "type": "array" },
                "last_claim_date": {
                  "description": "Last date a claim letter was generated",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "list_price": {
                  "description": "Vendor price for the line item",
                  "type": ["number", "null"]
                },
                "order_id": {
                  "description": "Internally assigned order identifier",
                  "type": "integer"
                },
                "parent_order_id": {
                  "description": "Order ID of parent order line if exists",
                  "type": ["integer", "null"]
                },
                "quantity": {
                  "description": "Ordered quantity",
                  "type": ["integer", "null"]
                },
                "quantity_received": {
                  "description": "Quantity received so far",
                  "type": "integer"
                },
                "replacement_price": {
                  "description": "Replacement cost for this item",
                  "type": ["number", "null"]
                },
                "rrp": {
                  "description": "Retail cost for this item",
                  "type": ["number", "null"]
                },
                "rrp_tax_excluded": {
                  "description": "Replacement cost for this item (tax excluded)",
                  "type": ["number", "null"]
                },
                "rrp_tax_included": {
                  "description": "Replacement cost for this item (tax included)",
                  "type": ["number", "null"]
                },
                "shipping_cost": {
                  "description": "Shipping cost",
                  "type": ["number", "null"]
                },
                "statistics_1": {
                  "description": "Statistical field",
                  "type": ["string", "null"]
                },
                "statistics_1_authcat": {
                  "description": "Statistical category for this order",
                  "type": ["string", "null"]
                },
                "statistics_2": {
                  "description": "Statistical field (2)",
                  "type": ["string", "null"]
                },
                "statistics_2_authcat": {
                  "description": "Statistical category for this order (2)",
                  "type": ["string", "null"]
                },
                "status": {
                  "description": "The current order status",
                  "enum": [
                    "new",
                    "ordered",
                    "partial",
                    "complete",
                    "cancelled"
                  ],
                  "type": "string"
                },
                "subscription": { "type": ["object", "null"] },
                "subscription_id": {
                  "description": "Subscription ID linking the order to a subscription",
                  "type": ["integer", "null"]
                },
                "tax_rate_on_ordering": {
                  "description": "Tax rate on ordering (%)",
                  "type": ["number", "null"]
                },
                "tax_rate_on_receiving": {
                  "description": "Tax rate on receiving (%)",
                  "type": ["number", "null"]
                },
                "tax_value_on_ordering": {
                  "description": "Tax value on ordering",
                  "type": ["number", "null"]
                },
                "tax_value_on_receiving": {
                  "description": "Tax value on receiving",
                  "type": ["number", "null"]
                },
                "timestamp": {
                  "description": "Date and time this order line was last modified",
                  "format": "date-time",
                  "type": "string"
                },
                "uncertain_price": {
                  "description": "If this price was uncertain",
                  "type": "boolean"
                },
                "unit_price": {
                  "description": "The actual cost entered when receiving this line item",
                  "type": ["number", "null"]
                },
                "unit_price_tax_excluded": {
                  "description": "Unit price excluding tax (on receiving)",
                  "type": ["number", "null"]
                },
                "unit_price_tax_included": {
                  "description": "Unit price including tax (on receiving)",
                  "type": ["number", "null"]
                },
                "vendor_note": {
                  "description": "Notes related to this order line, made for vendor",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Order not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "orders"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "order_manage" }
        },
        "x-mojo-to": "Acquisitions::Orders#update"
      }
    },
    "/acquisitions/vendors": {
      "get": {
        "operationId": "listVendors",
        "parameters": [
          {
            "description": "Case insensitive search on vendor name",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on vendor's account number",
            "in": "query",
            "name": "accountnumber",
            "required": false,
            "type": "string"
          },
          {
            "description": "Matching criteria",
            "enum": ["contains", "exact", "starts_with", "ends_with"],
            "in": "query",
            "name": "_match",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Sorting criteria",
            "in": "query",
            "items": { "type": "string" },
            "name": "_order_by",
            "required": false,
            "type": "array"
          },
          {
            "description": "Page number, for paginated object listing",
            "in": "query",
            "name": "_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page size, for paginated object listing",
            "in": "query",
            "name": "_per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of vendors",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "accountnumber": {
                    "description": "Vendor account number",
                    "type": ["string", "null"]
                  },
                  "active": {
                    "description": "Is this vendor active",
                    "type": ["boolean", "null"]
                  },
                  "address1": {
                    "description": "Vendor physical address (line 1)",
                    "type": ["string", "null"]
                  },
                  "address2": {
                    "description": "Vendor physical address (line 2)",
                    "type": ["string", "null"]
                  },
                  "address3": {
                    "description": "Vendor physical address (line 3)",
                    "type": ["string", "null"]
                  },
                  "address4": {
                    "description": "Vendor physical address (line 4)",
                    "type": ["string", "null"]
                  },
                  "deliverytime": {
                    "description": "Expected delivery time (in days)",
                    "type": ["integer", "null"]
                  },
                  "discount": {
                    "description": "Default discount rate for items ordered from this vendor",
                    "type": ["number", "null"]
                  },
                  "fax": {
                    "description": "Vendor fax number",
                    "type": ["string", "null"]
                  },
                  "gst": {
                    "description": "Is the library taxed when buying from this vendor",
                    "type": ["boolean", "null"]
                  },
                  "id": {
                    "description": "internally assigned vendor identifier",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "invoice_currency": {
                    "description": "Invoice prices currency",
                    "type": ["string", "null"]
                  },
                  "invoice_includes_gst": {
                    "description": "Invoice prices include taxes",
                    "type": ["boolean", "null"]
                  },
                  "list_currency": {
                    "description": "List prices currency",
                    "type": ["string", "null"]
                  },
                  "list_includes_gst": {
                    "description": "List prices include taxes",
                    "type": ["boolean", "null"]
                  },
                  "name": { "description": "Vendor name", "type": ["string"] },
                  "notes": {
                    "description": "Vendor notes",
                    "type": ["string", "null"]
                  },
                  "phone": {
                    "description": "Vendor phone number",
                    "type": ["string", "null"]
                  },
                  "postal": {
                    "description": "Vendor postal address",
                    "type": ["string", "null"]
                  },
                  "tax_rate": {
                    "description": "Default tax rate for items ordered from this vendor",
                    "type": ["number", "null"]
                  },
                  "url": {
                    "description": "Vendor web address",
                    "type": ["string", "null"]
                  }
                },
                "required": ["name"],
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Vendor not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "vendors"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "vendors_manage" }
        },
        "x-mojo-to": "Acquisitions::Vendors#list"
      },
      "post": {
        "operationId": "addVendor",
        "parameters": [
          {
            "description": "A JSON object representing a vendor",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "accountnumber": {
                  "description": "Vendor account number",
                  "type": ["string", "null"]
                },
                "active": {
                  "description": "Is this vendor active",
                  "type": ["boolean", "null"]
                },
                "address1": {
                  "description": "Vendor physical address (line 1)",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "Vendor physical address (line 2)",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "Vendor physical address (line 3)",
                  "type": ["string", "null"]
                },
                "address4": {
                  "description": "Vendor physical address (line 4)",
                  "type": ["string", "null"]
                },
                "deliverytime": {
                  "description": "Expected delivery time (in days)",
                  "type": ["integer", "null"]
                },
                "discount": {
                  "description": "Default discount rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "fax": {
                  "description": "Vendor fax number",
                  "type": ["string", "null"]
                },
                "gst": {
                  "description": "Is the library taxed when buying from this vendor",
                  "type": ["boolean", "null"]
                },
                "id": {
                  "description": "internally assigned vendor identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "invoice_currency": {
                  "description": "Invoice prices currency",
                  "type": ["string", "null"]
                },
                "invoice_includes_gst": {
                  "description": "Invoice prices include taxes",
                  "type": ["boolean", "null"]
                },
                "list_currency": {
                  "description": "List prices currency",
                  "type": ["string", "null"]
                },
                "list_includes_gst": {
                  "description": "List prices include taxes",
                  "type": ["boolean", "null"]
                },
                "name": { "description": "Vendor name", "type": ["string"] },
                "notes": {
                  "description": "Vendor notes",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "Vendor phone number",
                  "type": ["string", "null"]
                },
                "postal": {
                  "description": "Vendor postal address",
                  "type": ["string", "null"]
                },
                "tax_rate": {
                  "description": "Default tax rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "url": {
                  "description": "Vendor web address",
                  "type": ["string", "null"]
                }
              },
              "required": ["name"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Vendor added",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "accountnumber": {
                  "description": "Vendor account number",
                  "type": ["string", "null"]
                },
                "active": {
                  "description": "Is this vendor active",
                  "type": ["boolean", "null"]
                },
                "address1": {
                  "description": "Vendor physical address (line 1)",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "Vendor physical address (line 2)",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "Vendor physical address (line 3)",
                  "type": ["string", "null"]
                },
                "address4": {
                  "description": "Vendor physical address (line 4)",
                  "type": ["string", "null"]
                },
                "deliverytime": {
                  "description": "Expected delivery time (in days)",
                  "type": ["integer", "null"]
                },
                "discount": {
                  "description": "Default discount rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "fax": {
                  "description": "Vendor fax number",
                  "type": ["string", "null"]
                },
                "gst": {
                  "description": "Is the library taxed when buying from this vendor",
                  "type": ["boolean", "null"]
                },
                "id": {
                  "description": "internally assigned vendor identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "invoice_currency": {
                  "description": "Invoice prices currency",
                  "type": ["string", "null"]
                },
                "invoice_includes_gst": {
                  "description": "Invoice prices include taxes",
                  "type": ["boolean", "null"]
                },
                "list_currency": {
                  "description": "List prices currency",
                  "type": ["string", "null"]
                },
                "list_includes_gst": {
                  "description": "List prices include taxes",
                  "type": ["boolean", "null"]
                },
                "name": { "description": "Vendor name", "type": ["string"] },
                "notes": {
                  "description": "Vendor notes",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "Vendor phone number",
                  "type": ["string", "null"]
                },
                "postal": {
                  "description": "Vendor postal address",
                  "type": ["string", "null"]
                },
                "tax_rate": {
                  "description": "Default tax rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "url": {
                  "description": "Vendor web address",
                  "type": ["string", "null"]
                }
              },
              "required": ["name"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Vendor not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "vendors"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "vendors_manage" }
        },
        "x-mojo-to": "Acquisitions::Vendors#add"
      }
    },
    "/acquisitions/vendors/{vendor_id}": {
      "delete": {
        "operationId": "deleteVendor",
        "parameters": [
          {
            "description": "Vendor id",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": { "description": "Vendor deleted" },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Vendor not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "vendors"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "vendors_manage" }
        },
        "x-mojo-to": "Acquisitions::Vendors#delete"
      },
      "get": {
        "operationId": "getVendor",
        "parameters": [
          {
            "description": "Vendor id",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A vendor",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "accountnumber": {
                  "description": "Vendor account number",
                  "type": ["string", "null"]
                },
                "active": {
                  "description": "Is this vendor active",
                  "type": ["boolean", "null"]
                },
                "address1": {
                  "description": "Vendor physical address (line 1)",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "Vendor physical address (line 2)",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "Vendor physical address (line 3)",
                  "type": ["string", "null"]
                },
                "address4": {
                  "description": "Vendor physical address (line 4)",
                  "type": ["string", "null"]
                },
                "deliverytime": {
                  "description": "Expected delivery time (in days)",
                  "type": ["integer", "null"]
                },
                "discount": {
                  "description": "Default discount rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "fax": {
                  "description": "Vendor fax number",
                  "type": ["string", "null"]
                },
                "gst": {
                  "description": "Is the library taxed when buying from this vendor",
                  "type": ["boolean", "null"]
                },
                "id": {
                  "description": "internally assigned vendor identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "invoice_currency": {
                  "description": "Invoice prices currency",
                  "type": ["string", "null"]
                },
                "invoice_includes_gst": {
                  "description": "Invoice prices include taxes",
                  "type": ["boolean", "null"]
                },
                "list_currency": {
                  "description": "List prices currency",
                  "type": ["string", "null"]
                },
                "list_includes_gst": {
                  "description": "List prices include taxes",
                  "type": ["boolean", "null"]
                },
                "name": { "description": "Vendor name", "type": ["string"] },
                "notes": {
                  "description": "Vendor notes",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "Vendor phone number",
                  "type": ["string", "null"]
                },
                "postal": {
                  "description": "Vendor postal address",
                  "type": ["string", "null"]
                },
                "tax_rate": {
                  "description": "Default tax rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "url": {
                  "description": "Vendor web address",
                  "type": ["string", "null"]
                }
              },
              "required": ["name"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Vendor not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "vendors"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "vendors_manage" }
        },
        "x-mojo-to": "Acquisitions::Vendors#get"
      },
      "put": {
        "operationId": "updateVendor",
        "parameters": [
          {
            "description": "Vendor id",
            "in": "path",
            "name": "vendor_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object representing a vendor",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "accountnumber": {
                  "description": "Vendor account number",
                  "type": ["string", "null"]
                },
                "active": {
                  "description": "Is this vendor active",
                  "type": ["boolean", "null"]
                },
                "address1": {
                  "description": "Vendor physical address (line 1)",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "Vendor physical address (line 2)",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "Vendor physical address (line 3)",
                  "type": ["string", "null"]
                },
                "address4": {
                  "description": "Vendor physical address (line 4)",
                  "type": ["string", "null"]
                },
                "deliverytime": {
                  "description": "Expected delivery time (in days)",
                  "type": ["integer", "null"]
                },
                "discount": {
                  "description": "Default discount rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "fax": {
                  "description": "Vendor fax number",
                  "type": ["string", "null"]
                },
                "gst": {
                  "description": "Is the library taxed when buying from this vendor",
                  "type": ["boolean", "null"]
                },
                "id": {
                  "description": "internally assigned vendor identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "invoice_currency": {
                  "description": "Invoice prices currency",
                  "type": ["string", "null"]
                },
                "invoice_includes_gst": {
                  "description": "Invoice prices include taxes",
                  "type": ["boolean", "null"]
                },
                "list_currency": {
                  "description": "List prices currency",
                  "type": ["string", "null"]
                },
                "list_includes_gst": {
                  "description": "List prices include taxes",
                  "type": ["boolean", "null"]
                },
                "name": { "description": "Vendor name", "type": ["string"] },
                "notes": {
                  "description": "Vendor notes",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "Vendor phone number",
                  "type": ["string", "null"]
                },
                "postal": {
                  "description": "Vendor postal address",
                  "type": ["string", "null"]
                },
                "tax_rate": {
                  "description": "Default tax rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "url": {
                  "description": "Vendor web address",
                  "type": ["string", "null"]
                }
              },
              "required": ["name"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A vendor",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "accountnumber": {
                  "description": "Vendor account number",
                  "type": ["string", "null"]
                },
                "active": {
                  "description": "Is this vendor active",
                  "type": ["boolean", "null"]
                },
                "address1": {
                  "description": "Vendor physical address (line 1)",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "Vendor physical address (line 2)",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "Vendor physical address (line 3)",
                  "type": ["string", "null"]
                },
                "address4": {
                  "description": "Vendor physical address (line 4)",
                  "type": ["string", "null"]
                },
                "deliverytime": {
                  "description": "Expected delivery time (in days)",
                  "type": ["integer", "null"]
                },
                "discount": {
                  "description": "Default discount rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "fax": {
                  "description": "Vendor fax number",
                  "type": ["string", "null"]
                },
                "gst": {
                  "description": "Is the library taxed when buying from this vendor",
                  "type": ["boolean", "null"]
                },
                "id": {
                  "description": "internally assigned vendor identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "invoice_currency": {
                  "description": "Invoice prices currency",
                  "type": ["string", "null"]
                },
                "invoice_includes_gst": {
                  "description": "Invoice prices include taxes",
                  "type": ["boolean", "null"]
                },
                "list_currency": {
                  "description": "List prices currency",
                  "type": ["string", "null"]
                },
                "list_includes_gst": {
                  "description": "List prices include taxes",
                  "type": ["boolean", "null"]
                },
                "name": { "description": "Vendor name", "type": ["string"] },
                "notes": {
                  "description": "Vendor notes",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "Vendor phone number",
                  "type": ["string", "null"]
                },
                "postal": {
                  "description": "Vendor postal address",
                  "type": ["string", "null"]
                },
                "tax_rate": {
                  "description": "Default tax rate for items ordered from this vendor",
                  "type": ["number", "null"]
                },
                "url": {
                  "description": "Vendor web address",
                  "type": ["string", "null"]
                }
              },
              "required": ["name"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Vendor not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["acquisitions", "vendors"],
        "x-koha-authorization": {
          "permissions": { "acquisition": "vendors_manage" }
        },
        "x-mojo-to": "Acquisitions::Vendors#update"
      }
    },
    "/advanced_editor/macros": {
      "get": {
        "operationId": "listMacro",
        "parameters": [
          {
            "description": "Case insensative search on macro name",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensative search on macro text",
            "in": "query",
            "name": "macro_text",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search on internal patron_id",
            "in": "query",
            "name": "patron_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search on shared macros",
            "in": "query",
            "name": "shared",
            "required": false,
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of macros",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "macro_id": {
                    "description": "Internal advanced editor macro identifier",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "macro_text": {
                    "description": "macro text",
                    "type": ["string", "null"]
                  },
                  "name": { "description": "macro name", "type": "string" },
                  "patron_id": {
                    "description": "borrower number",
                    "type": ["integer", "null"]
                  },
                  "shared": {
                    "description": "is macro shared",
                    "type": ["boolean", "null"]
                  }
                },
                "required": ["name", "macro_text", "patron_id", "shared"],
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["advancededitormacro"],
        "x-koha-authorization": {
          "permissions": { "editcatalogue": "advanced_editor" }
        },
        "x-mojo-to": "AdvancedEditorMacro#list"
      },
      "post": {
        "operationId": "addAdvancedEditorMacro",
        "parameters": [
          {
            "description": "A JSON object containing informations about the new macro",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Macro added",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["advancededitormacro"],
        "x-koha-authorization": {
          "permissions": { "editcatalogue": "advanced_editor" }
        },
        "x-mojo-to": "AdvancedEditorMacro#add"
      }
    },
    "/advanced_editor/macros/shared": {
      "post": {
        "operationId": "addsharedAdvancedEditorMacro",
        "parameters": [
          {
            "description": "A JSON object containing informations about the new macro",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Macro added",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["advancededitormacro"],
        "x-koha-authorization": {
          "permissions": {
            "editcatalogue": { "advanced_editor": 1, "create_shared_macros": 1 }
          }
        },
        "x-mojo-to": "AdvancedEditorMacro#add_shared"
      }
    },
    "/advanced_editor/macros/shared/{advancededitormacro_id}": {
      "delete": {
        "operationId": "deletesharedAdvancedEditorMacro",
        "parameters": [
          {
            "description": "Advanced editor macro internal identifier",
            "in": "path",
            "name": "advancededitormacro_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": {
            "description": "Advanced editor macro deleted",
            "schema": { "type": "string" }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Macro not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["advancededitormacros"],
        "x-koha-authorization": {
          "permissions": {
            "editcatalogue": { "advanced_editor": 1, "delete_shared_macros": 1 }
          }
        },
        "x-mojo-to": "AdvancedEditorMacro#delete_shared"
      },
      "get": {
        "operationId": "getsharedAdvancedEditorMacro",
        "parameters": [
          {
            "description": "Advanced editor macro internal identifier",
            "in": "path",
            "name": "advancededitormacro_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A macro",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "AdvancedEditorMacro not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["advancededitormacros"],
        "x-koha-authorization": {
          "permissions": { "editcatalogue": "advanced_editor" }
        },
        "x-mojo-to": "AdvancedEditorMacro#get_shared"
      },
      "put": {
        "operationId": "updatesharedAdvancedEditorMacro",
        "parameters": [
          {
            "description": "Advanced editor macro internal identifier",
            "in": "path",
            "name": "advancededitormacro_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "An advanced editor macro object",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "An advanced editor macro",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Macro not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["advancededitormacros"],
        "x-koha-authorization": {
          "permissions": {
            "editcatalogue": { "advanced_editor": 1, "create_shared_macros": 1 }
          }
        },
        "x-mojo-to": "AdvancedEditorMacro#update_shared"
      }
    },
    "/advanced_editor/macros/{advancededitormacro_id}": {
      "delete": {
        "operationId": "deleteAdvancedEditorMacro",
        "parameters": [
          {
            "description": "Advanced editor macro internal identifier",
            "in": "path",
            "name": "advancededitormacro_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": {
            "description": "Advanced editor macro deleted",
            "schema": { "type": "string" }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Macro not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["advancededitormacros"],
        "x-koha-authorization": {
          "permissions": { "editcatalogue": "advanced_editor" }
        },
        "x-mojo-to": "AdvancedEditorMacro#delete"
      },
      "get": {
        "operationId": "getAdvancedEditorMacro",
        "parameters": [
          {
            "description": "Advanced editor macro internal identifier",
            "in": "path",
            "name": "advancededitormacro_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A macro",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "AdvancedEditorMacro not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["advancededitormacros"],
        "x-koha-authorization": {
          "permissions": { "editcatalogue": "advanced_editor" }
        },
        "x-mojo-to": "AdvancedEditorMacro#get"
      },
      "put": {
        "operationId": "updateAdvancedEditorMacro",
        "parameters": [
          {
            "description": "Advanced editor macro internal identifier",
            "in": "path",
            "name": "advancededitormacro_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "An advanced editor macro object",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "An advanced editor macro",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "macro_id": {
                  "description": "Internal advanced editor macro identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "macro_text": {
                  "description": "macro text",
                  "type": ["string", "null"]
                },
                "name": { "description": "macro name", "type": "string" },
                "patron_id": {
                  "description": "borrower number",
                  "type": ["integer", "null"]
                },
                "shared": {
                  "description": "is macro shared",
                  "type": ["boolean", "null"]
                }
              },
              "required": ["name", "macro_text", "patron_id", "shared"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Macro not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["advancededitormacros"],
        "x-koha-authorization": {
          "permissions": { "editcatalogue": "advanced_editor" }
        },
        "x-mojo-to": "AdvancedEditorMacro#update"
      }
    },
    "/biblios/{biblio_id}": {
      "delete": {
        "operationId": "deleteBiblio",
        "parameters": [
          {
            "description": "Record internal identifier",
            "in": "path",
            "name": "biblio_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": {
            "description": "Biblio deleted",
            "schema": { "type": "string" }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Biblio not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "409": {
            "description": "Unable to perform action on biblio",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["biblios"],
        "x-koha-authorization": {
          "permissions": { "editcatalogue": "edit_catalogue" }
        },
        "x-mojo-to": "Biblios#delete"
      },
      "get": {
        "operationId": "getBiblio",
        "parameters": [
          {
            "description": "Record internal identifier",
            "in": "path",
            "name": "biblio_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/json",
          "application/marcxml+xml",
          "application/marc-in-json",
          "application/marc",
          "text/plain"
        ],
        "responses": {
          "200": { "description": "A biblio" },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Biblio not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "406": {
            "description": "Not acceptable",
            "schema": {
              "description": "Accepted content-types",
              "items": { "type": "string" },
              "type": "array"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["biblios"],
        "x-koha-authorization": { "permissions": { "catalogue": "1" } },
        "x-mojo-to": "Biblios#get"
      }
    },
    "/checkouts": {
      "get": {
        "operationId": "listCheckouts",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "query",
            "name": "patron_id",
            "type": "integer"
          },
          {
            "description": "Page number, for paginated object listing",
            "in": "query",
            "name": "_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page size, for paginated object listing",
            "in": "query",
            "name": "_per_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Matching criteria",
            "enum": ["contains", "exact", "starts_with", "ends_with"],
            "in": "query",
            "name": "_match",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Sorting criteria",
            "in": "query",
            "items": { "type": "string" },
            "name": "_order_by",
            "required": false,
            "type": "array"
          },
          {
            "description": "By default, current checkouts are returned, when this is true then checked in checkouts are returned as result.",
            "in": "query",
            "name": "checked_in",
            "type": "boolean"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of checkouts",
            "schema": {
              "items": {
                "properties": {
                  "auto_renew": {
                    "description": "Auto renewal",
                    "type": "boolean"
                  },
                  "auto_renew_error": {
                    "description": "Auto renewal error",
                    "type": ["string", "null"]
                  },
                  "checkin_date": {
                    "description": "Date the item was returned",
                    "format": "date-time",
                    "type": ["string", "null"]
                  },
                  "checkout_date": {
                    "description": "Date the item was issued",
                    "format": "date-time",
                    "type": "string"
                  },
                  "checkout_id": {
                    "description": "internally assigned checkout identifier",
                    "type": "integer"
                  },
                  "due_date": {
                    "description": "Due date",
                    "format": "date-time",
                    "type": "string"
                  },
                  "item_id": {
                    "description": "internal identifier of checked out item",
                    "type": "integer"
                  },
                  "last_renewed_date": {
                    "description": "Date the item was last renewed",
                    "format": "date-time",
                    "type": ["string", "null"]
                  },
                  "library_id": {
                    "description": "code of the library the item was checked out",
                    "type": ["string", "null"]
                  },
                  "note": {
                    "description": "Issue note text",
                    "type": ["string", "null"]
                  },
                  "note_date": {
                    "description": "Datetime of the issue note",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "onsite_checkout": {
                    "description": "On site checkout",
                    "type": "boolean"
                  },
                  "patron_id": {
                    "description": "Internal patron identifier",
                    "type": "integer"
                  },
                  "renewals": {
                    "description": "Number of renewals",
                    "type": ["integer", "null"]
                  },
                  "timestamp": {
                    "description": "Last update time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Patron not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["patrons", "checkouts"],
        "x-koha-authorization": {
          "permissions": { "circulate": "circulate_remaining_permissions" }
        },
        "x-mojo-to": "Checkouts#list"
      }
    },
    "/checkouts/{checkout_id}": {
      "get": {
        "operationId": "getCheckout",
        "parameters": [
          {
            "description": "Internal checkout identifier",
            "in": "path",
            "name": "checkout_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Updated borrower's checkout",
            "schema": {
              "properties": {
                "auto_renew": {
                  "description": "Auto renewal",
                  "type": "boolean"
                },
                "auto_renew_error": {
                  "description": "Auto renewal error",
                  "type": ["string", "null"]
                },
                "checkin_date": {
                  "description": "Date the item was returned",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "checkout_date": {
                  "description": "Date the item was issued",
                  "format": "date-time",
                  "type": "string"
                },
                "checkout_id": {
                  "description": "internally assigned checkout identifier",
                  "type": "integer"
                },
                "due_date": {
                  "description": "Due date",
                  "format": "date-time",
                  "type": "string"
                },
                "item_id": {
                  "description": "internal identifier of checked out item",
                  "type": "integer"
                },
                "last_renewed_date": {
                  "description": "Date the item was last renewed",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "code of the library the item was checked out",
                  "type": ["string", "null"]
                },
                "note": {
                  "description": "Issue note text",
                  "type": ["string", "null"]
                },
                "note_date": {
                  "description": "Datetime of the issue note",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "onsite_checkout": {
                  "description": "On site checkout",
                  "type": "boolean"
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "renewals": {
                  "description": "Number of renewals",
                  "type": ["integer", "null"]
                },
                "timestamp": {
                  "description": "Last update time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Checkout not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["patrons", "checkouts"],
        "x-koha-authorization": {
          "permissions": { "circulate": "circulate_remaining_permissions" }
        },
        "x-mojo-to": "Checkouts#get"
      }
    },
    "/checkouts/{checkout_id}/allows_renewal": {
      "get": {
        "operationId": "allows_renewalCheckout",
        "parameters": [
          {
            "description": "Internal checkout identifier",
            "in": "path",
            "name": "checkout_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Checkout renewability information",
            "schema": {
              "properties": {
                "allows_renewal": {
                  "description": "Renewability status; true = renewable, false = not renewable",
                  "type": "boolean"
                },
                "current_renewals": {
                  "description": "Current used renewals",
                  "type": "integer"
                },
                "error": {
                  "description": "Description on false allows_renewal.",
                  "type": ["string", "null"]
                },
                "max_renewals": {
                  "description": "Maximum number of possible renewals",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Checkout not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["patrons", "checkouts"],
        "x-koha-authorization": {
          "permissions": { "circulate": "circulate_remaining_permissions" }
        },
        "x-mojo-to": "Checkouts#allows_renewal"
      }
    },
    "/checkouts/{checkout_id}/renewal": {
      "post": {
        "operationId": "renewCheckout",
        "parameters": [
          {
            "description": "Internal checkout identifier",
            "in": "path",
            "name": "checkout_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Updated borrower's checkout",
            "schema": {
              "properties": {
                "auto_renew": {
                  "description": "Auto renewal",
                  "type": "boolean"
                },
                "auto_renew_error": {
                  "description": "Auto renewal error",
                  "type": ["string", "null"]
                },
                "checkin_date": {
                  "description": "Date the item was returned",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "checkout_date": {
                  "description": "Date the item was issued",
                  "format": "date-time",
                  "type": "string"
                },
                "checkout_id": {
                  "description": "internally assigned checkout identifier",
                  "type": "integer"
                },
                "due_date": {
                  "description": "Due date",
                  "format": "date-time",
                  "type": "string"
                },
                "item_id": {
                  "description": "internal identifier of checked out item",
                  "type": "integer"
                },
                "last_renewed_date": {
                  "description": "Date the item was last renewed",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "code of the library the item was checked out",
                  "type": ["string", "null"]
                },
                "note": {
                  "description": "Issue note text",
                  "type": ["string", "null"]
                },
                "note_date": {
                  "description": "Datetime of the issue note",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "onsite_checkout": {
                  "description": "On site checkout",
                  "type": "boolean"
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "renewals": {
                  "description": "Number of renewals",
                  "type": ["integer", "null"]
                },
                "timestamp": {
                  "description": "Last update time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Cannot renew checkout",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Checkout not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["patrons", "checkouts"],
        "x-koha-authorization": {
          "permissions": { "circulate": "circulate_remaining_permissions" }
        },
        "x-mojo-to": "Checkouts#renew"
      }
    },
    "/circulation-rules/kinds": {
      "get": {
        "operationId": "getCirculationRuleKinds",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A map of rule kind information",
            "schema": {
              "additionalProperties": {
                "additionalProperties": false,
                "properties": {
                  "scope": {
                    "description": "levels that this rule kind can be set for",
                    "items": {
                      "enum": ["branchcode", "categorycode", "itemtype"],
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": ["scope"],
                "type": "object"
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["cities"],
        "x-mojo-to": "CirculationRules#get_kinds"
      }
    },
    "/cities": {
      "get": {
        "operationId": "listCities",
        "parameters": [
          {
            "description": "Case insensative search on city name",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensative search on city state",
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensative search on city country",
            "in": "query",
            "name": "country",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case Insensative search on city postal code",
            "in": "query",
            "name": "postal_code",
            "required": false,
            "type": "string"
          },
          {
            "description": "Matching criteria",
            "enum": ["contains", "exact", "starts_with", "ends_with"],
            "in": "query",
            "name": "_match",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Sorting criteria",
            "in": "query",
            "items": { "type": "string" },
            "name": "_order_by",
            "required": false,
            "type": "array"
          },
          {
            "description": "Page number, for paginated object listing",
            "in": "query",
            "name": "_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page size, for paginated object listing",
            "in": "query",
            "name": "_per_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Query filter sent as a request parameter",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "Query filter sent through request's body",
            "in": "body",
            "name": "query",
            "required": false,
            "schema": { "type": ["object", "array"] }
          },
          {
            "description": "Query filter sent as a request header",
            "in": "header",
            "name": "x-koha-query",
            "required": false,
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of cities",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "city_id": {
                    "description": "internally assigned city identifier",
                    "readOnly": true,
                    "type": "integer"
                  },
                  "country": {
                    "description": "city country",
                    "type": ["string", "null"]
                  },
                  "name": { "description": "city name", "type": "string" },
                  "postal_code": {
                    "description": "city postal code",
                    "type": ["string", "null"]
                  },
                  "state": {
                    "description": "city state",
                    "type": ["string", "null"]
                  }
                },
                "required": ["name", "state", "postal_code", "country"],
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["cities"],
        "x-koha-authorization": { "permissions": { "catalogue": "1" } },
        "x-mojo-to": "Cities#list"
      },
      "post": {
        "operationId": "addCity",
        "parameters": [
          {
            "description": "A JSON object containing informations about the new hold",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "city_id": {
                  "description": "internally assigned city identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "country": {
                  "description": "city country",
                  "type": ["string", "null"]
                },
                "name": { "description": "city name", "type": "string" },
                "postal_code": {
                  "description": "city postal code",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "city state",
                  "type": ["string", "null"]
                }
              },
              "required": ["name", "state", "postal_code", "country"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "City added",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "city_id": {
                  "description": "internally assigned city identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "country": {
                  "description": "city country",
                  "type": ["string", "null"]
                },
                "name": { "description": "city name", "type": "string" },
                "postal_code": {
                  "description": "city postal code",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "city state",
                  "type": ["string", "null"]
                }
              },
              "required": ["name", "state", "postal_code", "country"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["cities"],
        "x-koha-authorization": {
          "permissions": { "parameters": "manage_cities" }
        },
        "x-mojo-to": "Cities#add"
      }
    },
    "/cities/{city_id}": {
      "delete": {
        "operationId": "deleteCity",
        "parameters": [
          {
            "description": "City internal identifier",
            "in": "path",
            "name": "city_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": { "description": "City deleted" },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "City not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["cities"],
        "x-koha-authorization": {
          "permissions": { "parameters": "manage_cities" }
        },
        "x-mojo-to": "Cities#delete"
      },
      "get": {
        "operationId": "getCity",
        "parameters": [
          {
            "description": "City internal identifier",
            "in": "path",
            "name": "city_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A city",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "city_id": {
                  "description": "internally assigned city identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "country": {
                  "description": "city country",
                  "type": ["string", "null"]
                },
                "name": { "description": "city name", "type": "string" },
                "postal_code": {
                  "description": "city postal code",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "city state",
                  "type": ["string", "null"]
                }
              },
              "required": ["name", "state", "postal_code", "country"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "404": {
            "description": "City not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["cities"],
        "x-koha-authorization": { "permissions": { "catalogue": "1" } },
        "x-mojo-to": "Cities#get"
      },
      "put": {
        "operationId": "updateCity",
        "parameters": [
          {
            "description": "City internal identifier",
            "in": "path",
            "name": "city_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A city object",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "city_id": {
                  "description": "internally assigned city identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "country": {
                  "description": "city country",
                  "type": ["string", "null"]
                },
                "name": { "description": "city name", "type": "string" },
                "postal_code": {
                  "description": "city postal code",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "city state",
                  "type": ["string", "null"]
                }
              },
              "required": ["name", "state", "postal_code", "country"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A city",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "city_id": {
                  "description": "internally assigned city identifier",
                  "readOnly": true,
                  "type": "integer"
                },
                "country": {
                  "description": "city country",
                  "type": ["string", "null"]
                },
                "name": { "description": "city name", "type": "string" },
                "postal_code": {
                  "description": "city postal code",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "city state",
                  "type": ["string", "null"]
                }
              },
              "required": ["name", "state", "postal_code", "country"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "City not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["cities"],
        "x-koha-authorization": {
          "permissions": { "parameters": "manage_cities" }
        },
        "x-mojo-to": "Cities#update"
      }
    },
    "/clubs/{club_id}/holds": {
      "post": {
        "consumes": ["application/json"],
        "operationId": "addClubHold",
        "parameters": [
          {
            "description": "Internal club identifier",
            "in": "path",
            "name": "club_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object containing informations about the new hold",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "biblio_id": {
                  "description": "Internal biblio identifier",
                  "type": ["integer", "null"]
                },
                "default_patron_home": {
                  "description": "For each patron, set pickup location to patron's home library if possible",
                  "type": "integer"
                },
                "expiration_date": {
                  "description": "Hold end date",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "item_id": {
                  "description": "Internal item identifier",
                  "type": ["integer", "null"]
                },
                "item_type": {
                  "description": "Limit hold on one itemtype (ignored for item-level holds)",
                  "type": ["string", "null"]
                },
                "notes": {
                  "description": "Notes related to this hold",
                  "type": ["string", "null"]
                },
                "pickup_library_id": {
                  "description": "Internal library identifier for the pickup library",
                  "type": "string"
                }
              },
              "required": ["pickup_library_id"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Created hold",
            "schema": {
              "properties": {
                "biblio_id": {
                  "description": "Internal biblio identifier",
                  "type": "integer"
                },
                "club_hold_id": {
                  "description": "Internal club hold identifier",
                  "type": "integer"
                },
                "club_id": {
                  "description": "Internal club identifier",
                  "type": "integer"
                },
                "item_id": {
                  "description": "Internal item identifier",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Hold not allowed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Hold not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "409": {
            "description": "Hold not allowed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["holds", "clubs"],
        "x-koha-authorization": { "permissions": { "reserveforothers": "1" } },
        "x-mojo-to": "Clubs::Holds#add"
      }
    },
    "/holds": {
      "get": {
        "operationId": "listHolds",
        "parameters": [
          {
            "description": "Internal reserve identifier",
            "in": "query",
            "name": "hold_id",
            "type": "integer"
          },
          {
            "description": "Internal patron identifier",
            "in": "query",
            "name": "patron_id",
            "type": "integer"
          },
          {
            "description": "Hold",
            "format": "date",
            "in": "query",
            "name": "hold_date",
            "type": "string"
          },
          {
            "description": "Internal biblio identifier",
            "in": "query",
            "name": "biblio_id",
            "type": "integer"
          },
          {
            "description": "Internal library identifier for the pickup library",
            "in": "query",
            "name": "pickup_library_id",
            "type": "string"
          },
          {
            "description": "The date the hold was cancelled",
            "format": "date",
            "in": "query",
            "name": "cancellation_date",
            "type": "string"
          },
          {
            "description": "Notes related to this hold",
            "in": "query",
            "name": "notes",
            "type": "string"
          },
          {
            "description": "Where in the queue the patron sits",
            "in": "query",
            "name": "priority",
            "type": "integer"
          },
          {
            "description": "Found status",
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "description": "Time of latest update",
            "in": "query",
            "name": "timestamp",
            "type": "string"
          },
          {
            "description": "Internal item identifier",
            "in": "query",
            "name": "item_id",
            "type": "integer"
          },
          {
            "description": "Date the item was marked as waiting for the patron",
            "in": "query",
            "name": "waiting_date",
            "type": "string"
          },
          {
            "description": "Date the hold expires",
            "in": "query",
            "name": "expiration_date",
            "type": "string"
          },
          {
            "description": "Lowest priority",
            "in": "query",
            "name": "lowest_priority",
            "type": "boolean"
          },
          {
            "description": "Suspended",
            "in": "query",
            "name": "suspended",
            "type": "boolean"
          },
          {
            "description": "Suspended until",
            "in": "query",
            "name": "suspended_until",
            "type": "string"
          },
          {
            "description": "Matching criteria",
            "enum": ["contains", "exact", "starts_with", "ends_with"],
            "in": "query",
            "name": "_match",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Sorting criteria",
            "in": "query",
            "items": { "type": "string" },
            "name": "_order_by",
            "required": false,
            "type": "array"
          },
          {
            "description": "Page number, for paginated object listing",
            "in": "query",
            "name": "_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page size, for paginated object listing",
            "in": "query",
            "name": "_per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of holds",
            "schema": {
              "items": {
                "properties": {
                  "biblio_id": {
                    "description": "Internal biblio identifier",
                    "type": "integer"
                  },
                  "cancellation_date": {
                    "description": "The date the hold was cancelled",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "expiration_date": {
                    "description": "The date the hold expires",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "hold_date": {
                    "description": "The date the hold was placed",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "hold_id": {
                    "description": "Internal hold identifier",
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "Internal item identifier",
                    "type": ["string", "null"]
                  },
                  "item_level": {
                    "description": "If the hold is placed at item level",
                    "type": "boolean"
                  },
                  "item_type": {
                    "description": "If record level hold, the optional itemtype of the item the patron is requesting",
                    "type": ["string", "null"]
                  },
                  "lowest_priority": {
                    "description": "Controls if the hold is given the lowest priority on the queue",
                    "type": "boolean"
                  },
                  "notes": {
                    "description": "Notes related to this hold",
                    "type": ["string", "null"]
                  },
                  "patron_id": {
                    "description": "Internal patron identifier",
                    "type": "integer"
                  },
                  "pickup_library_id": {
                    "description": "Internal library identifier for the pickup library",
                    "type": ["string", "null"]
                  },
                  "priority": {
                    "description": "Where in the queue the patron sits",
                    "type": ["integer", "null"]
                  },
                  "status": {
                    "description": "A one letter code defining what the status of the hold is after it has been confirmed",
                    "type": ["string", "null"]
                  },
                  "suspended": {
                    "description": "Controls if the hold is suspended",
                    "type": "boolean"
                  },
                  "suspended_until": {
                    "description": "Date until which the hold has been suspended",
                    "format": "date-time",
                    "type": ["string", "null"]
                  },
                  "timestamp": {
                    "description": "Timestamp for the latest hold update",
                    "format": "date-time",
                    "type": "string"
                  },
                  "waiting_date": {
                    "description": "The date the item was marked as waiting for the patron at the library",
                    "format": "date",
                    "type": ["string", "null"]
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Hold not allowed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Borrower not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patrons", "holds"],
        "x-koha-authorization": {
          "permissions": { "borrowers": "edit_borrowers" }
        },
        "x-mojo-to": "Holds#list"
      },
      "post": {
        "consumes": ["application/json"],
        "operationId": "addHold",
        "parameters": [
          {
            "description": "A JSON object containing informations about the new hold",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "biblio_id": {
                  "description": "Internal biblio identifier",
                  "type": ["integer", "null"]
                },
                "expiration_date": {
                  "description": "Hold end date",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "item_id": {
                  "description": "Internal item identifier",
                  "type": ["integer", "null"]
                },
                "item_type": {
                  "description": "Limit hold on one itemtype (ignored for item-level holds)",
                  "type": ["string", "null"]
                },
                "notes": {
                  "description": "Notes related to this hold",
                  "type": ["string", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "pickup_library_id": {
                  "description": "Internal library identifier for the pickup library",
                  "type": "string"
                }
              },
              "required": ["patron_id", "pickup_library_id"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Created hold",
            "schema": {
              "properties": {
                "biblio_id": {
                  "description": "Internal biblio identifier",
                  "type": "integer"
                },
                "cancellation_date": {
                  "description": "The date the hold was cancelled",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "expiration_date": {
                  "description": "The date the hold expires",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "hold_date": {
                  "description": "The date the hold was placed",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "hold_id": {
                  "description": "Internal hold identifier",
                  "type": "integer"
                },
                "item_id": {
                  "description": "Internal item identifier",
                  "type": ["string", "null"]
                },
                "item_level": {
                  "description": "If the hold is placed at item level",
                  "type": "boolean"
                },
                "item_type": {
                  "description": "If record level hold, the optional itemtype of the item the patron is requesting",
                  "type": ["string", "null"]
                },
                "lowest_priority": {
                  "description": "Controls if the hold is given the lowest priority on the queue",
                  "type": "boolean"
                },
                "notes": {
                  "description": "Notes related to this hold",
                  "type": ["string", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "pickup_library_id": {
                  "description": "Internal library identifier for the pickup library",
                  "type": ["string", "null"]
                },
                "priority": {
                  "description": "Where in the queue the patron sits",
                  "type": ["integer", "null"]
                },
                "status": {
                  "description": "A one letter code defining what the status of the hold is after it has been confirmed",
                  "type": ["string", "null"]
                },
                "suspended": {
                  "description": "Controls if the hold is suspended",
                  "type": "boolean"
                },
                "suspended_until": {
                  "description": "Date until which the hold has been suspended",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "timestamp": {
                  "description": "Timestamp for the latest hold update",
                  "format": "date-time",
                  "type": "string"
                },
                "waiting_date": {
                  "description": "The date the item was marked as waiting for the patron at the library",
                  "format": "date",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Hold not allowed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Borrower not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patrons", "holds"],
        "x-koha-authorization": { "permissions": { "reserveforothers": "1" } },
        "x-koha-override": { "AllowHoldPolicyOverride": 1 },
        "x-mojo-to": "Holds#add"
      }
    },
    "/holds/{hold_id}": {
      "delete": {
        "operationId": "deleteHold",
        "parameters": [
          {
            "description": "Internal hold identifier",
            "in": "path",
            "name": "hold_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": { "description": "Hold deleted" },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Hold not allowed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Hold not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["holds"],
        "x-koha-authorization": { "permissions": { "reserveforothers": "1" } },
        "x-mojo-to": "Holds#delete"
      },
      "put": {
        "consumes": ["application/json"],
        "operationId": "editHold",
        "parameters": [
          {
            "description": "Internal hold identifier",
            "in": "path",
            "name": "hold_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object containing fields to modify",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "branchcode": {
                  "description": "Pickup location",
                  "type": "string"
                },
                "priority": {
                  "description": "Position in waiting queue",
                  "minimum": 1,
                  "type": "integer"
                },
                "suspend_until": {
                  "description": "Suspend until",
                  "format": "date",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Updated hold",
            "schema": {
              "properties": {
                "biblio_id": {
                  "description": "Internal biblio identifier",
                  "type": "integer"
                },
                "cancellation_date": {
                  "description": "The date the hold was cancelled",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "expiration_date": {
                  "description": "The date the hold expires",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "hold_date": {
                  "description": "The date the hold was placed",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "hold_id": {
                  "description": "Internal hold identifier",
                  "type": "integer"
                },
                "item_id": {
                  "description": "Internal item identifier",
                  "type": ["string", "null"]
                },
                "item_level": {
                  "description": "If the hold is placed at item level",
                  "type": "boolean"
                },
                "item_type": {
                  "description": "If record level hold, the optional itemtype of the item the patron is requesting",
                  "type": ["string", "null"]
                },
                "lowest_priority": {
                  "description": "Controls if the hold is given the lowest priority on the queue",
                  "type": "boolean"
                },
                "notes": {
                  "description": "Notes related to this hold",
                  "type": ["string", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "pickup_library_id": {
                  "description": "Internal library identifier for the pickup library",
                  "type": ["string", "null"]
                },
                "priority": {
                  "description": "Where in the queue the patron sits",
                  "type": ["integer", "null"]
                },
                "status": {
                  "description": "A one letter code defining what the status of the hold is after it has been confirmed",
                  "type": ["string", "null"]
                },
                "suspended": {
                  "description": "Controls if the hold is suspended",
                  "type": "boolean"
                },
                "suspended_until": {
                  "description": "Date until which the hold has been suspended",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "timestamp": {
                  "description": "Timestamp for the latest hold update",
                  "format": "date-time",
                  "type": "string"
                },
                "waiting_date": {
                  "description": "The date the item was marked as waiting for the patron at the library",
                  "format": "date",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Hold not allowed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Hold not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["holds"],
        "x-koha-authorization": { "permissions": { "reserveforothers": "1" } },
        "x-mojo-to": "Holds#edit"
      }
    },
    "/holds/{hold_id}/pickup_location": {
      "put": {
        "operationId": "updateHoldPickupLocation",
        "parameters": [
          {
            "description": "Internal hold identifier",
            "in": "path",
            "name": "hold_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Pickup location",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "pickup_library_id": {
                  "description": "Internal identifier for the pickup library",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The new pickup location value for the hold",
            "schema": {
              "properties": {
                "pickup_library_id": {
                  "description": "Internal identifier for the pickup library",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Hold not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "409": {
            "description": "Unable to perform action on hold",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["holds"],
        "x-koha-authorization": {
          "permissions": { "reserveforothers": "place_holds" }
        },
        "x-mojo-to": "Holds#update_pickup_location"
      }
    },
    "/holds/{hold_id}/pickup_locations": {
      "get": {
        "operationId": "getHoldPickupLocations",
        "parameters": [
          {
            "description": "Internal hold identifier",
            "in": "path",
            "name": "hold_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Hold pickup location",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "address1": {
                    "description": "the first address line of the library",
                    "type": ["string", "null"]
                  },
                  "address2": {
                    "description": "the second address line of the library",
                    "type": ["string", "null"]
                  },
                  "address3": {
                    "description": "the third address line of the library",
                    "type": ["string", "null"]
                  },
                  "city": {
                    "description": "the city or province of the library",
                    "type": ["string", "null"]
                  },
                  "country": {
                    "description": "the county of the library",
                    "type": ["string", "null"]
                  },
                  "email": {
                    "description": "the primary email address of the library",
                    "type": ["string", "null"]
                  },
                  "fax": {
                    "description": "the fax number of the library",
                    "type": ["string", "null"]
                  },
                  "geolocation": {
                    "description": "geolocation of your library",
                    "type": ["string", "null"]
                  },
                  "ip": {
                    "description": "the IP address for your library or branch",
                    "type": ["string", "null"]
                  },
                  "library_id": {
                    "description": "internally assigned library identifier",
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string"
                  },
                  "marc_org_code": {
                    "description": "MARC Organization Code, see http://www.loc.gov/marc/organizations/orgshome.html, when empty defaults to syspref MARCOrgCode",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Printable name of library",
                    "type": "string"
                  },
                  "notes": {
                    "description": "notes related to your library or branch",
                    "type": ["string", "null"]
                  },
                  "opac_info": {
                    "description": "HTML that displays in OPAC",
                    "type": ["string", "null"]
                  },
                  "phone": {
                    "description": "the primary phone of the library",
                    "type": ["string", "null"]
                  },
                  "pickup_location": {
                    "description": "If the library can act as a pickup location",
                    "type": "boolean"
                  },
                  "postal_code": {
                    "description": "the postal code of the library",
                    "type": ["string", "null"]
                  },
                  "reply_to_email": {
                    "description": "the email to be used as a Reply-To",
                    "type": ["string", "null"]
                  },
                  "return_path_email": {
                    "description": "the email to be used as Return-Path",
                    "type": ["string", "null"]
                  },
                  "state": {
                    "description": "the reqional state of the library",
                    "type": ["string", "null"]
                  },
                  "url": {
                    "description": "the URL for your library or branch's website",
                    "type": ["string", "null"]
                  }
                },
                "required": ["library_id", "name"],
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Hold pickup location list not allowed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Hold not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["holds"],
        "x-koha-authorization": {
          "permissions": { "reserveforothers": "place_holds" }
        },
        "x-mojo-to": "Holds#pickup_locations"
      }
    },
    "/holds/{hold_id}/priority": {
      "put": {
        "operationId": "updateHoldPriority",
        "parameters": [
          {
            "description": "Internal hold identifier",
            "in": "path",
            "name": "hold_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "An integer representing the new priority to be set for the hold",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "The new priority value for the hold",
            "schema": { "type": "integer" }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Biblio not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "409": {
            "description": "Unable to perform action on biblio",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["biblios", "holds"],
        "x-koha-authorization": {
          "permissions": { "reserveforothers": "modify_holds_priority" }
        },
        "x-mojo-to": "Holds#update_priority"
      }
    },
    "/holds/{hold_id}/suspension": {
      "delete": {
        "consumes": ["application/json"],
        "operationId": "resumeHold",
        "parameters": [
          {
            "description": "Internal hold identifier",
            "in": "path",
            "name": "hold_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": { "description": "Hold resumed" },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Hold not allowed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Hold not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["holds"],
        "x-koha-authorization": { "permissions": { "reserveforothers": "1" } },
        "x-mojo-to": "Holds#resume"
      },
      "post": {
        "consumes": ["application/json"],
        "operationId": "suspendHold",
        "parameters": [
          {
            "description": "Internal hold identifier",
            "in": "path",
            "name": "hold_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object containing fields to modify",
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "properties": {
                "end_date": {
                  "description": "Date the hold suspension expires",
                  "format": "date",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": { "description": "Hold suspended" },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Hold not allowed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Hold not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["holds"],
        "x-koha-authorization": { "permissions": { "reserveforothers": "1" } },
        "x-mojo-to": "Holds#suspend"
      }
    },
    "/ill_backends": {
      "get": {
        "operationId": "listIllbackends",
        "parameters": [],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of ILL backends",
            "schema": {
              "items": {
                "properties": {
                  "capabilities": {
                    "description": "List of capabilities",
                    "type": "object"
                  },
                  "ill_backend_id": {
                    "description": "Internal ILL backend identifier",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "ILL backends not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["illbackends"],
        "x-koha-authorization": { "permissions": { "ill": "1" } },
        "x-mojo-to": "Illbackends#list"
      }
    },
    "/ill_backends/{ill_backend_id}": {
      "get": {
        "operationId": "getIllbackends",
        "parameters": [
          {
            "description": "ILL backend id/name",
            "in": "path",
            "name": "ill_backend_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "An ILL backends",
            "schema": {
              "properties": {
                "capabilities": {
                  "description": "List of capabilities",
                  "type": "object"
                },
                "ill_backend_id": {
                  "description": "Internal ILL backend identifier",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "ILL backends not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["illbackends"],
        "x-koha-authorization": { "permissions": { "ill": "1" } },
        "x-mojo-to": "Illbackends#get"
      }
    },
    "/illrequests": {
      "get": {
        "operationId": "listIllrequests",
        "parameters": [
          {
            "collectionFormat": "csv",
            "description": "Additional objects that should be embedded in the response",
            "in": "query",
            "items": {
              "enum": [
                "patron",
                "library",
                "capabilities",
                "metadata",
                "requested_partners",
                "comments",
                "status_alias"
              ],
              "type": "string"
            },
            "name": "embed",
            "required": false,
            "type": "array"
          },
          {
            "description": "The name of a ILL backend",
            "in": "query",
            "name": "backend",
            "required": false,
            "type": "string"
          },
          {
            "description": "The order ID of a request",
            "in": "query",
            "name": "orderid",
            "required": false,
            "type": "string"
          },
          {
            "description": "Internal biblio identifier",
            "in": "query",
            "name": "biblionumber",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Internal patron identifier",
            "in": "query",
            "name": "borrowernumber",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The date the request was considered completed",
            "in": "query",
            "name": "completed",
            "required": false,
            "type": "string"
          },
          {
            "description": "The date the request was considered complete formatted",
            "in": "query",
            "name": "completed_formatted",
            "required": false,
            "type": "string"
          },
          {
            "description": "A full status string e.g. REQREV",
            "in": "query",
            "name": "status",
            "required": false,
            "type": "string"
          },
          {
            "description": "The quoted cost of the request",
            "in": "query",
            "name": "cost",
            "required": false,
            "type": "number"
          },
          {
            "description": "The final cost of the request",
            "in": "query",
            "name": "price_paid",
            "required": false,
            "type": "number"
          },
          {
            "description": "The medium of the requested item",
            "in": "query",
            "name": "medium",
            "required": false,
            "type": "string"
          },
          {
            "description": "The last updated date of the request",
            "in": "query",
            "name": "updated",
            "required": false,
            "type": "string"
          },
          {
            "description": "The last updated date of the request formatted",
            "in": "query",
            "name": "updated_formatted",
            "required": false,
            "type": "string"
          },
          {
            "description": "The date the request was placed",
            "in": "query",
            "name": "placed",
            "required": false,
            "type": "string"
          },
          {
            "description": "The date the request was placed formatted",
            "in": "query",
            "name": "placed_formatted",
            "required": false,
            "type": "string"
          },
          {
            "description": "Library ID",
            "in": "query",
            "name": "branchcode",
            "required": false,
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "A list of ILL requests" },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "ILL requests not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["illrequests"],
        "x-koha-authorization": { "permissions": { "ill": "1" } },
        "x-mojo-to": "Illrequests#list"
      }
    },
    "/items": {
      "get": {
        "consumes": ["application/json"],
        "operationId": "listItems",
        "parameters": [
          {
            "description": "Search on the item's barcode",
            "in": "query",
            "name": "external_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Matching criteria",
            "enum": ["contains", "exact", "starts_with", "ends_with"],
            "in": "query",
            "name": "_match",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Sorting criteria",
            "in": "query",
            "items": { "type": "string" },
            "name": "_order_by",
            "required": false,
            "type": "array"
          },
          {
            "description": "Page number, for paginated object listing",
            "in": "query",
            "name": "_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page size, for paginated object listing",
            "in": "query",
            "name": "_per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of item",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "acquisition_date": {
                    "description": "The date the item was acquired",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "acquisition_source": {
                    "description": "Information about the acquisition source (it is not really a vendor id)",
                    "type": ["string", "null"]
                  },
                  "biblio_id": {
                    "description": "Internal identifier for the parent bibliographic record",
                    "type": "integer"
                  },
                  "call_number_sort": {
                    "description": "?",
                    "type": ["string", "null"]
                  },
                  "call_number_source": {
                    "description": "Classification source used on this item",
                    "type": ["string", "null"]
                  },
                  "callnumber": {
                    "description": "Call number for this item",
                    "type": ["string", "null"]
                  },
                  "checked_out_date": {
                    "description": "Defines if item is checked out (NULL for not checked out, and checkout date for checked out)",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "checkouts_count": {
                    "description": "Number of times this item has been checked out/issued",
                    "type": ["integer", "null"]
                  },
                  "coded_location_qualifier": {
                    "description": "Coded location qualifier",
                    "type": ["string", "null"]
                  },
                  "collection_code": {
                    "description": "Authorized value for the collection code associated with this item",
                    "type": ["string", "null"]
                  },
                  "copy_number": {
                    "description": "Copy number",
                    "type": ["string", "null"]
                  },
                  "damaged_date": {
                    "description": "The date and time an item was last marked as damaged, NULL if not damaged",
                    "type": ["string", "null"]
                  },
                  "damaged_status": {
                    "description": "Authorized value defining this item as damaged",
                    "type": "integer"
                  },
                  "extended_subfields": {
                    "description": "Additional 952 subfields in XML format",
                    "type": ["string", "null"]
                  },
                  "external_id": {
                    "description": "The item's barcode",
                    "type": ["string", "null"]
                  },
                  "holding_library_id": {
                    "description": "Library that is currently in possession item",
                    "type": ["string", "null"]
                  },
                  "holds_count": {
                    "description": "Number of times this item has been placed on hold/reserved",
                    "type": ["integer", "null"]
                  },
                  "home_library_id": {
                    "description": "Internal library id for the library the item belongs to",
                    "type": ["string", "null"]
                  },
                  "internal_notes": {
                    "description": "Non-public notes on this item",
                    "type": ["string", "null"]
                  },
                  "inventory_number": {
                    "description": "Inventory number",
                    "type": ["string", "null"]
                  },
                  "item_id": {
                    "description": "Internal item identifier",
                    "type": "integer"
                  },
                  "item_type": {
                    "description": "Itemtype defining the type for this item",
                    "type": ["string", "null"]
                  },
                  "last_checkout_date": {
                    "description": "The date the item was last checked out",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "last_seen_date": {
                    "description": "The date the item barcode was last scanned",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "location": {
                    "description": "Authorized value for the shelving location for this item",
                    "type": ["string", "null"]
                  },
                  "lost_date": {
                    "description": "The date and time an item was last marked as lost, NULL if not lost",
                    "format": "date-time",
                    "type": ["string", "null"]
                  },
                  "lost_status": {
                    "description": "Authorized value defining this item as lost",
                    "type": "integer"
                  },
                  "materials_notes": {
                    "description": "Materials specified",
                    "type": ["string", "null"]
                  },
                  "new_status": {
                    "description": "'new' value, whatever free-text information.",
                    "type": ["string", "null"]
                  },
                  "not_for_loan_status": {
                    "description": "Authorized value defining why this item is not for loan",
                    "type": "integer"
                  },
                  "permanent_location": {
                    "description": "Linked to the CART and PROC temporary locations feature, stores the permanent shelving location",
                    "type": ["string", "null"]
                  },
                  "public_notes": {
                    "description": "Public notes on this item",
                    "type": ["string", "null"]
                  },
                  "purchase_price": {
                    "description": "Purchase price",
                    "type": ["number", "null"]
                  },
                  "renewals_count": {
                    "description": "Number of times this item has been renewed",
                    "type": ["integer", "null"]
                  },
                  "replacement_price": {
                    "description": "Cost the library charges to replace the item (e.g. if lost)",
                    "type": ["number", "null"]
                  },
                  "replacement_price_date": {
                    "description": "The date the replacement price is effective from",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "restricted_status": {
                    "description": "Authorized value defining use restrictions for this item",
                    "type": ["integer", "null"]
                  },
                  "serial_issue_number": {
                    "description": "serial enumeration/chronology for the item",
                    "type": ["string", "null"]
                  },
                  "timestamp": {
                    "description": "Date and time this item was last altered",
                    "format": "date-time",
                    "type": "string"
                  },
                  "uri": {
                    "description": "URL for the item",
                    "type": ["string", "null"]
                  },
                  "withdrawn": {
                    "description": "Authorized value defining this item as withdrawn",
                    "type": "integer"
                  },
                  "withdrawn_date": {
                    "description": "The date and time an item was last marked as withdrawn, NULL if not withdrawn",
                    "format": "date-time",
                    "type": ["string", "null"]
                  }
                },
                "required": [
                  "item_id",
                  "biblio_id",
                  "not_for_loan_status",
                  "damaged_status",
                  "lost_status",
                  "withdrawn"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["items"],
        "x-koha-authorization": { "permissions": { "catalogue": "1" } },
        "x-mojo-to": "Items#list"
      }
    },
    "/items/{item_id}": {
      "get": {
        "consumes": ["application/json"],
        "operationId": "getItem",
        "parameters": [
          {
            "description": "Internal item identifier",
            "in": "path",
            "name": "item_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "An item",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "acquisition_date": {
                  "description": "The date the item was acquired",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "acquisition_source": {
                  "description": "Information about the acquisition source (it is not really a vendor id)",
                  "type": ["string", "null"]
                },
                "biblio_id": {
                  "description": "Internal identifier for the parent bibliographic record",
                  "type": "integer"
                },
                "call_number_sort": {
                  "description": "?",
                  "type": ["string", "null"]
                },
                "call_number_source": {
                  "description": "Classification source used on this item",
                  "type": ["string", "null"]
                },
                "callnumber": {
                  "description": "Call number for this item",
                  "type": ["string", "null"]
                },
                "checked_out_date": {
                  "description": "Defines if item is checked out (NULL for not checked out, and checkout date for checked out)",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "checkouts_count": {
                  "description": "Number of times this item has been checked out/issued",
                  "type": ["integer", "null"]
                },
                "coded_location_qualifier": {
                  "description": "Coded location qualifier",
                  "type": ["string", "null"]
                },
                "collection_code": {
                  "description": "Authorized value for the collection code associated with this item",
                  "type": ["string", "null"]
                },
                "copy_number": {
                  "description": "Copy number",
                  "type": ["string", "null"]
                },
                "damaged_date": {
                  "description": "The date and time an item was last marked as damaged, NULL if not damaged",
                  "type": ["string", "null"]
                },
                "damaged_status": {
                  "description": "Authorized value defining this item as damaged",
                  "type": "integer"
                },
                "extended_subfields": {
                  "description": "Additional 952 subfields in XML format",
                  "type": ["string", "null"]
                },
                "external_id": {
                  "description": "The item's barcode",
                  "type": ["string", "null"]
                },
                "holding_library_id": {
                  "description": "Library that is currently in possession item",
                  "type": ["string", "null"]
                },
                "holds_count": {
                  "description": "Number of times this item has been placed on hold/reserved",
                  "type": ["integer", "null"]
                },
                "home_library_id": {
                  "description": "Internal library id for the library the item belongs to",
                  "type": ["string", "null"]
                },
                "internal_notes": {
                  "description": "Non-public notes on this item",
                  "type": ["string", "null"]
                },
                "inventory_number": {
                  "description": "Inventory number",
                  "type": ["string", "null"]
                },
                "item_id": {
                  "description": "Internal item identifier",
                  "type": "integer"
                },
                "item_type": {
                  "description": "Itemtype defining the type for this item",
                  "type": ["string", "null"]
                },
                "last_checkout_date": {
                  "description": "The date the item was last checked out",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "last_seen_date": {
                  "description": "The date the item barcode was last scanned",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "location": {
                  "description": "Authorized value for the shelving location for this item",
                  "type": ["string", "null"]
                },
                "lost_date": {
                  "description": "The date and time an item was last marked as lost, NULL if not lost",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "lost_status": {
                  "description": "Authorized value defining this item as lost",
                  "type": "integer"
                },
                "materials_notes": {
                  "description": "Materials specified",
                  "type": ["string", "null"]
                },
                "new_status": {
                  "description": "'new' value, whatever free-text information.",
                  "type": ["string", "null"]
                },
                "not_for_loan_status": {
                  "description": "Authorized value defining why this item is not for loan",
                  "type": "integer"
                },
                "permanent_location": {
                  "description": "Linked to the CART and PROC temporary locations feature, stores the permanent shelving location",
                  "type": ["string", "null"]
                },
                "public_notes": {
                  "description": "Public notes on this item",
                  "type": ["string", "null"]
                },
                "purchase_price": {
                  "description": "Purchase price",
                  "type": ["number", "null"]
                },
                "renewals_count": {
                  "description": "Number of times this item has been renewed",
                  "type": ["integer", "null"]
                },
                "replacement_price": {
                  "description": "Cost the library charges to replace the item (e.g. if lost)",
                  "type": ["number", "null"]
                },
                "replacement_price_date": {
                  "description": "The date the replacement price is effective from",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "restricted_status": {
                  "description": "Authorized value defining use restrictions for this item",
                  "type": ["integer", "null"]
                },
                "serial_issue_number": {
                  "description": "serial enumeration/chronology for the item",
                  "type": ["string", "null"]
                },
                "timestamp": {
                  "description": "Date and time this item was last altered",
                  "format": "date-time",
                  "type": "string"
                },
                "uri": {
                  "description": "URL for the item",
                  "type": ["string", "null"]
                },
                "withdrawn": {
                  "description": "Authorized value defining this item as withdrawn",
                  "type": "integer"
                },
                "withdrawn_date": {
                  "description": "The date and time an item was last marked as withdrawn, NULL if not withdrawn",
                  "format": "date-time",
                  "type": ["string", "null"]
                }
              },
              "required": [
                "item_id",
                "biblio_id",
                "not_for_loan_status",
                "damaged_status",
                "lost_status",
                "withdrawn"
              ],
              "type": "object"
            }
          },
          "400": {
            "description": "Missing or wrong parameters",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "404": {
            "description": "Item not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["items"],
        "x-koha-authorization": { "permissions": { "catalogue": "1" } },
        "x-mojo-to": "Items#get"
      }
    },
    "/libraries": {
      "get": {
        "operationId": "listLibraries",
        "parameters": [
          {
            "description": "Case insensitive 'starts-with' search on name",
            "in": "query",
            "name": "name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts-with' search on address1",
            "in": "query",
            "name": "address1",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts-with' search on address2",
            "in": "query",
            "name": "address2",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts-with' search on address3",
            "in": "query",
            "name": "address3",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts-with' search on postal code",
            "in": "query",
            "name": "postal_code",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts-with' search on city",
            "in": "query",
            "name": "city",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts-with' search on state",
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts_with' search on country",
            "in": "query",
            "name": "country",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts_with' search on phone number",
            "in": "query",
            "name": "phone",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts_with' search on fax number",
            "in": "query",
            "name": "fax",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts_with' search on email address",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts_with' search on Reply-To email address",
            "in": "query",
            "name": "reply_to_email",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts_with' search on Return-Path email address",
            "in": "query",
            "name": "return_path_email",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts_with' search on website URL",
            "in": "query",
            "name": "url",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts_with' search on IP address",
            "in": "query",
            "name": "ip",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts_with' search on notes",
            "in": "query",
            "name": "notes",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive 'starts-with' search on OPAC info",
            "in": "query",
            "name": "opac_info",
            "required": false,
            "type": "string"
          },
          {
            "description": "Matching criteria",
            "enum": ["contains", "exact", "starts_with", "ends_with"],
            "in": "query",
            "name": "_match",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Sorting criteria",
            "in": "query",
            "items": { "type": "string" },
            "name": "_order_by",
            "required": false,
            "type": "array"
          },
          {
            "description": "Page number, for paginated object listing",
            "in": "query",
            "name": "_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page size, for paginated object listing",
            "in": "query",
            "name": "_per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of libraries",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "address1": {
                    "description": "the first address line of the library",
                    "type": ["string", "null"]
                  },
                  "address2": {
                    "description": "the second address line of the library",
                    "type": ["string", "null"]
                  },
                  "address3": {
                    "description": "the third address line of the library",
                    "type": ["string", "null"]
                  },
                  "city": {
                    "description": "the city or province of the library",
                    "type": ["string", "null"]
                  },
                  "country": {
                    "description": "the county of the library",
                    "type": ["string", "null"]
                  },
                  "email": {
                    "description": "the primary email address of the library",
                    "type": ["string", "null"]
                  },
                  "fax": {
                    "description": "the fax number of the library",
                    "type": ["string", "null"]
                  },
                  "geolocation": {
                    "description": "geolocation of your library",
                    "type": ["string", "null"]
                  },
                  "ip": {
                    "description": "the IP address for your library or branch",
                    "type": ["string", "null"]
                  },
                  "library_id": {
                    "description": "internally assigned library identifier",
                    "maxLength": 10,
                    "minLength": 1,
                    "type": "string"
                  },
                  "marc_org_code": {
                    "description": "MARC Organization Code, see http://www.loc.gov/marc/organizations/orgshome.html, when empty defaults to syspref MARCOrgCode",
                    "type": ["string", "null"]
                  },
                  "name": {
                    "description": "Printable name of library",
                    "type": "string"
                  },
                  "notes": {
                    "description": "notes related to your library or branch",
                    "type": ["string", "null"]
                  },
                  "opac_info": {
                    "description": "HTML that displays in OPAC",
                    "type": ["string", "null"]
                  },
                  "phone": {
                    "description": "the primary phone of the library",
                    "type": ["string", "null"]
                  },
                  "pickup_location": {
                    "description": "If the library can act as a pickup location",
                    "type": "boolean"
                  },
                  "postal_code": {
                    "description": "the postal code of the library",
                    "type": ["string", "null"]
                  },
                  "reply_to_email": {
                    "description": "the email to be used as a Reply-To",
                    "type": ["string", "null"]
                  },
                  "return_path_email": {
                    "description": "the email to be used as Return-Path",
                    "type": ["string", "null"]
                  },
                  "state": {
                    "description": "the reqional state of the library",
                    "type": ["string", "null"]
                  },
                  "url": {
                    "description": "the URL for your library or branch's website",
                    "type": ["string", "null"]
                  }
                },
                "required": ["library_id", "name"],
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["library"],
        "x-koha-authorization": { "permissions": { "catalogue": "1" } },
        "x-mojo-to": "Libraries#list"
      },
      "post": {
        "operationId": "addLibrary",
        "parameters": [
          {
            "description": "A JSON object containing informations about the new library",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "address1": {
                  "description": "the first address line of the library",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "the second address line of the library",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "the third address line of the library",
                  "type": ["string", "null"]
                },
                "city": {
                  "description": "the city or province of the library",
                  "type": ["string", "null"]
                },
                "country": {
                  "description": "the county of the library",
                  "type": ["string", "null"]
                },
                "email": {
                  "description": "the primary email address of the library",
                  "type": ["string", "null"]
                },
                "fax": {
                  "description": "the fax number of the library",
                  "type": ["string", "null"]
                },
                "geolocation": {
                  "description": "geolocation of your library",
                  "type": ["string", "null"]
                },
                "ip": {
                  "description": "the IP address for your library or branch",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "internally assigned library identifier",
                  "maxLength": 10,
                  "minLength": 1,
                  "type": "string"
                },
                "marc_org_code": {
                  "description": "MARC Organization Code, see http://www.loc.gov/marc/organizations/orgshome.html, when empty defaults to syspref MARCOrgCode",
                  "type": ["string", "null"]
                },
                "name": {
                  "description": "Printable name of library",
                  "type": "string"
                },
                "notes": {
                  "description": "notes related to your library or branch",
                  "type": ["string", "null"]
                },
                "opac_info": {
                  "description": "HTML that displays in OPAC",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "the primary phone of the library",
                  "type": ["string", "null"]
                },
                "pickup_location": {
                  "description": "If the library can act as a pickup location",
                  "type": "boolean"
                },
                "postal_code": {
                  "description": "the postal code of the library",
                  "type": ["string", "null"]
                },
                "reply_to_email": {
                  "description": "the email to be used as a Reply-To",
                  "type": ["string", "null"]
                },
                "return_path_email": {
                  "description": "the email to be used as Return-Path",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "the reqional state of the library",
                  "type": ["string", "null"]
                },
                "url": {
                  "description": "the URL for your library or branch's website",
                  "type": ["string", "null"]
                }
              },
              "required": ["library_id", "name"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Library added",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "address1": {
                  "description": "the first address line of the library",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "the second address line of the library",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "the third address line of the library",
                  "type": ["string", "null"]
                },
                "city": {
                  "description": "the city or province of the library",
                  "type": ["string", "null"]
                },
                "country": {
                  "description": "the county of the library",
                  "type": ["string", "null"]
                },
                "email": {
                  "description": "the primary email address of the library",
                  "type": ["string", "null"]
                },
                "fax": {
                  "description": "the fax number of the library",
                  "type": ["string", "null"]
                },
                "geolocation": {
                  "description": "geolocation of your library",
                  "type": ["string", "null"]
                },
                "ip": {
                  "description": "the IP address for your library or branch",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "internally assigned library identifier",
                  "maxLength": 10,
                  "minLength": 1,
                  "type": "string"
                },
                "marc_org_code": {
                  "description": "MARC Organization Code, see http://www.loc.gov/marc/organizations/orgshome.html, when empty defaults to syspref MARCOrgCode",
                  "type": ["string", "null"]
                },
                "name": {
                  "description": "Printable name of library",
                  "type": "string"
                },
                "notes": {
                  "description": "notes related to your library or branch",
                  "type": ["string", "null"]
                },
                "opac_info": {
                  "description": "HTML that displays in OPAC",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "the primary phone of the library",
                  "type": ["string", "null"]
                },
                "pickup_location": {
                  "description": "If the library can act as a pickup location",
                  "type": "boolean"
                },
                "postal_code": {
                  "description": "the postal code of the library",
                  "type": ["string", "null"]
                },
                "reply_to_email": {
                  "description": "the email to be used as a Reply-To",
                  "type": ["string", "null"]
                },
                "return_path_email": {
                  "description": "the email to be used as Return-Path",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "the reqional state of the library",
                  "type": ["string", "null"]
                },
                "url": {
                  "description": "the URL for your library or branch's website",
                  "type": ["string", "null"]
                }
              },
              "required": ["library_id", "name"],
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "409": {
            "description": "Conflict in creating resource",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["library"],
        "x-koha-authorization": {
          "permissions": { "parameters": "manage_libraries" }
        },
        "x-mojo-to": "Libraries#add"
      }
    },
    "/libraries/{library_id}": {
      "delete": {
        "operationId": "deleteLibrary",
        "parameters": [
          {
            "description": "Internal library identifier",
            "in": "path",
            "name": "library_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": {
            "description": "Library deleted",
            "schema": { "type": "string" }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Library not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["library"],
        "x-koha-authorization": {
          "permissions": { "parameters": "manage_libraries" }
        },
        "x-mojo-to": "Libraries#delete"
      },
      "get": {
        "operationId": "getLibrary",
        "parameters": [
          {
            "description": "Internal library identifier",
            "in": "path",
            "name": "library_id",
            "required": true,
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A library",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "address1": {
                  "description": "the first address line of the library",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "the second address line of the library",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "the third address line of the library",
                  "type": ["string", "null"]
                },
                "city": {
                  "description": "the city or province of the library",
                  "type": ["string", "null"]
                },
                "country": {
                  "description": "the county of the library",
                  "type": ["string", "null"]
                },
                "email": {
                  "description": "the primary email address of the library",
                  "type": ["string", "null"]
                },
                "fax": {
                  "description": "the fax number of the library",
                  "type": ["string", "null"]
                },
                "geolocation": {
                  "description": "geolocation of your library",
                  "type": ["string", "null"]
                },
                "ip": {
                  "description": "the IP address for your library or branch",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "internally assigned library identifier",
                  "maxLength": 10,
                  "minLength": 1,
                  "type": "string"
                },
                "marc_org_code": {
                  "description": "MARC Organization Code, see http://www.loc.gov/marc/organizations/orgshome.html, when empty defaults to syspref MARCOrgCode",
                  "type": ["string", "null"]
                },
                "name": {
                  "description": "Printable name of library",
                  "type": "string"
                },
                "notes": {
                  "description": "notes related to your library or branch",
                  "type": ["string", "null"]
                },
                "opac_info": {
                  "description": "HTML that displays in OPAC",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "the primary phone of the library",
                  "type": ["string", "null"]
                },
                "pickup_location": {
                  "description": "If the library can act as a pickup location",
                  "type": "boolean"
                },
                "postal_code": {
                  "description": "the postal code of the library",
                  "type": ["string", "null"]
                },
                "reply_to_email": {
                  "description": "the email to be used as a Reply-To",
                  "type": ["string", "null"]
                },
                "return_path_email": {
                  "description": "the email to be used as Return-Path",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "the reqional state of the library",
                  "type": ["string", "null"]
                },
                "url": {
                  "description": "the URL for your library or branch's website",
                  "type": ["string", "null"]
                }
              },
              "required": ["library_id", "name"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "404": {
            "description": "Library not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["library"],
        "x-koha-authorization": { "permissions": { "catalogue": "1" } },
        "x-mojo-to": "Libraries#get"
      },
      "put": {
        "consumes": ["application/json"],
        "operationId": "updateLibrary",
        "parameters": [
          {
            "description": "Internal library identifier",
            "in": "path",
            "name": "library_id",
            "required": true,
            "type": "string"
          },
          {
            "description": "A JSON object containing information on the library",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "address1": {
                  "description": "the first address line of the library",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "the second address line of the library",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "the third address line of the library",
                  "type": ["string", "null"]
                },
                "city": {
                  "description": "the city or province of the library",
                  "type": ["string", "null"]
                },
                "country": {
                  "description": "the county of the library",
                  "type": ["string", "null"]
                },
                "email": {
                  "description": "the primary email address of the library",
                  "type": ["string", "null"]
                },
                "fax": {
                  "description": "the fax number of the library",
                  "type": ["string", "null"]
                },
                "geolocation": {
                  "description": "geolocation of your library",
                  "type": ["string", "null"]
                },
                "ip": {
                  "description": "the IP address for your library or branch",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "internally assigned library identifier",
                  "maxLength": 10,
                  "minLength": 1,
                  "type": "string"
                },
                "marc_org_code": {
                  "description": "MARC Organization Code, see http://www.loc.gov/marc/organizations/orgshome.html, when empty defaults to syspref MARCOrgCode",
                  "type": ["string", "null"]
                },
                "name": {
                  "description": "Printable name of library",
                  "type": "string"
                },
                "notes": {
                  "description": "notes related to your library or branch",
                  "type": ["string", "null"]
                },
                "opac_info": {
                  "description": "HTML that displays in OPAC",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "the primary phone of the library",
                  "type": ["string", "null"]
                },
                "pickup_location": {
                  "description": "If the library can act as a pickup location",
                  "type": "boolean"
                },
                "postal_code": {
                  "description": "the postal code of the library",
                  "type": ["string", "null"]
                },
                "reply_to_email": {
                  "description": "the email to be used as a Reply-To",
                  "type": ["string", "null"]
                },
                "return_path_email": {
                  "description": "the email to be used as Return-Path",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "the reqional state of the library",
                  "type": ["string", "null"]
                },
                "url": {
                  "description": "the URL for your library or branch's website",
                  "type": ["string", "null"]
                }
              },
              "required": ["library_id", "name"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A library",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "address1": {
                  "description": "the first address line of the library",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "the second address line of the library",
                  "type": ["string", "null"]
                },
                "address3": {
                  "description": "the third address line of the library",
                  "type": ["string", "null"]
                },
                "city": {
                  "description": "the city or province of the library",
                  "type": ["string", "null"]
                },
                "country": {
                  "description": "the county of the library",
                  "type": ["string", "null"]
                },
                "email": {
                  "description": "the primary email address of the library",
                  "type": ["string", "null"]
                },
                "fax": {
                  "description": "the fax number of the library",
                  "type": ["string", "null"]
                },
                "geolocation": {
                  "description": "geolocation of your library",
                  "type": ["string", "null"]
                },
                "ip": {
                  "description": "the IP address for your library or branch",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "internally assigned library identifier",
                  "maxLength": 10,
                  "minLength": 1,
                  "type": "string"
                },
                "marc_org_code": {
                  "description": "MARC Organization Code, see http://www.loc.gov/marc/organizations/orgshome.html, when empty defaults to syspref MARCOrgCode",
                  "type": ["string", "null"]
                },
                "name": {
                  "description": "Printable name of library",
                  "type": "string"
                },
                "notes": {
                  "description": "notes related to your library or branch",
                  "type": ["string", "null"]
                },
                "opac_info": {
                  "description": "HTML that displays in OPAC",
                  "type": ["string", "null"]
                },
                "phone": {
                  "description": "the primary phone of the library",
                  "type": ["string", "null"]
                },
                "pickup_location": {
                  "description": "If the library can act as a pickup location",
                  "type": "boolean"
                },
                "postal_code": {
                  "description": "the postal code of the library",
                  "type": ["string", "null"]
                },
                "reply_to_email": {
                  "description": "the email to be used as a Reply-To",
                  "type": ["string", "null"]
                },
                "return_path_email": {
                  "description": "the email to be used as Return-Path",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "the reqional state of the library",
                  "type": ["string", "null"]
                },
                "url": {
                  "description": "the URL for your library or branch's website",
                  "type": ["string", "null"]
                }
              },
              "required": ["library_id", "name"],
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Library not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["library"],
        "x-koha-authorization": {
          "permissions": { "parameters": "manage_libraries" }
        },
        "x-mojo-to": "Libraries#update"
      }
    },
    "/oauth/token": {
      "post": {
        "operationId": "tokenOAuth",
        "parameters": [
          {
            "description": "grant type (client_credentials)",
            "in": "formData",
            "name": "grant_type",
            "required": true,
            "type": "string"
          },
          {
            "description": "client id",
            "in": "formData",
            "name": "client_id",
            "type": "string"
          },
          {
            "description": "client secret",
            "in": "formData",
            "name": "client_secret",
            "type": "string"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "access_token": { "type": "string" },
                "expires_in": { "type": "integer" },
                "token_type": { "type": "string" }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["oauth"],
        "x-mojo-to": "OAuth#token"
      }
    },
    "/patrons": {
      "get": {
        "operationId": "listPatrons",
        "parameters": [
          {
            "description": "Search on patron_id",
            "in": "query",
            "name": "patron_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on cardnumber",
            "in": "query",
            "name": "cardnumber",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on surname",
            "in": "query",
            "name": "surname",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on firstname",
            "in": "query",
            "name": "firstname",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on title",
            "in": "query",
            "name": "title",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on othernames",
            "in": "query",
            "name": "other_name",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on initials",
            "in": "query",
            "name": "initials",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on streetnumber",
            "in": "query",
            "name": "street_number",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on streettype",
            "in": "query",
            "name": "street_type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on address",
            "in": "query",
            "name": "address",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on address2",
            "in": "query",
            "name": "address2",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on city",
            "in": "query",
            "name": "city",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on state",
            "in": "query",
            "name": "state",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on zipcode",
            "in": "query",
            "name": "postal_code",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on country",
            "in": "query",
            "name": "country",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on email",
            "in": "query",
            "name": "email",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on phone",
            "in": "query",
            "name": "phone",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on mobile",
            "in": "query",
            "name": "mobile",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on fax",
            "in": "query",
            "name": "fax",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on secondary_email",
            "in": "query",
            "name": "secondary_email",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on secondary_phone",
            "in": "query",
            "name": "secondary_phone",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_street_number",
            "in": "query",
            "name": "altaddress_street_number",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_street_type",
            "in": "query",
            "name": "altaddress_street_type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_address",
            "in": "query",
            "name": "altaddress_address",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_address2",
            "in": "query",
            "name": "altaddress_address2",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_city",
            "in": "query",
            "name": "altaddress_city",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_state",
            "in": "query",
            "name": "altaddress_state",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_postal_code",
            "in": "query",
            "name": "altaddress_postal_code",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_country",
            "in": "query",
            "name": "altaddress_country",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_email",
            "in": "query",
            "name": "altaddress_email",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_phone",
            "in": "query",
            "name": "altaddress_phone",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on date_of_birth",
            "in": "query",
            "name": "date_of_birth",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on library_id",
            "in": "query",
            "name": "library_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on category_id",
            "in": "query",
            "name": "category_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on date_enrolled",
            "in": "query",
            "name": "date_enrolled",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on expiry_date",
            "in": "query",
            "name": "expiry_date",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search on incorrect_address",
            "in": "query",
            "name": "incorrect_address",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Search on patron_card_lost",
            "in": "query",
            "name": "patron_card_lost",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Filter search by restricted",
            "in": "query",
            "name": "restricted",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Search on guarantor_id",
            "in": "query",
            "name": "guarantor_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on staff_notes",
            "in": "query",
            "name": "staff_notes",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on relationship_type",
            "in": "query",
            "name": "relationship_type",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on gender",
            "in": "query",
            "name": "gender",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on userid",
            "in": "query",
            "name": "userid",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on opac_notes",
            "in": "query",
            "name": "opac_notes",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altaddress_notes",
            "in": "query",
            "name": "altaddress_notes",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on statistics_1",
            "in": "query",
            "name": "statistics_1",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on statistics_2",
            "in": "query",
            "name": "statistics_2",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search on autorenew_checkouts",
            "in": "query",
            "name": "autorenew_checkouts",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Case insensitive search on altcontact_firstname",
            "in": "query",
            "name": "altcontact_firstname",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altcontact_surname",
            "in": "query",
            "name": "altcontact_surname",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altcontact_address",
            "in": "query",
            "name": "altcontact_address",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altcontact_address2",
            "in": "query",
            "name": "altcontact_address2",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altcontact_city",
            "in": "query",
            "name": "altcontact_city",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altcontact_state",
            "in": "query",
            "name": "altcontact_state",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altcontact_postal_code",
            "in": "query",
            "name": "altcontact_postal_code",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altcontact_country",
            "in": "query",
            "name": "altcontact_country",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on altcontact_phone",
            "in": "query",
            "name": "altcontact_phone",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on sms_number",
            "in": "query",
            "name": "sms_number",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on sms_provider_id",
            "in": "query",
            "name": "sms_provider_id",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search on privacy",
            "in": "query",
            "name": "privacy",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search on privacy_guarantor_checkouts",
            "in": "query",
            "name": "privacy_guarantor_checkouts",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on check_previous_checkout",
            "in": "query",
            "name": "check_previous_checkout",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search on updated_on",
            "in": "query",
            "name": "updated_on",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on last_seen",
            "in": "query",
            "name": "last_seen",
            "required": false,
            "type": "string"
          },
          {
            "description": "Case insensitive search on lang",
            "in": "query",
            "name": "lang",
            "required": false,
            "type": "string"
          },
          {
            "description": "Search on login_attempts",
            "in": "query",
            "name": "login_attempts",
            "required": false,
            "type": "string"
          },
          {
            "description": "Matching criteria",
            "enum": ["contains", "exact", "starts_with", "ends_with"],
            "in": "query",
            "name": "_match",
            "required": false,
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Sorting criteria",
            "in": "query",
            "items": { "type": "string" },
            "name": "_order_by",
            "required": false,
            "type": "array"
          },
          {
            "description": "Page number, for paginated object listing",
            "in": "query",
            "name": "_page",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Page size, for paginated object listing",
            "in": "query",
            "name": "_per_page",
            "required": false,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A list of patrons",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "address": {
                    "description": "first address line of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "address2": {
                    "description": "second address line of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "altaddress_address": {
                    "description": "first address line of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_address2": {
                    "description": "second address line of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_city": {
                    "description": "city or town of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_country": {
                    "description": "country of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_email": {
                    "description": "email address for patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_notes": {
                    "description": "a note related to patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_phone": {
                    "description": "phone number for patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_postal_code": {
                    "description": "zip or postal code of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_state": {
                    "description": "state or province of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_street_number": {
                    "description": "street number of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_street_type": {
                    "description": "street type of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altcontact_address": {
                    "description": "the first address line for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_address2": {
                    "description": "the second address line for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_city": {
                    "description": "the city for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_country": {
                    "description": "the country for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_firstname": {
                    "description": "first name of alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_phone": {
                    "description": "the phone number for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_postal_code": {
                    "description": "the zipcode for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_state": {
                    "description": "the state for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_surname": {
                    "description": "surname or last name of the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "anonymized": {
                    "description": "If the patron has been anonymized",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "autorenew_checkouts": {
                    "description": "indicate whether auto-renewal is allowed for patron",
                    "type": "boolean"
                  },
                  "cardnumber": {
                    "description": "library assigned user identifier",
                    "type": ["string", "null"]
                  },
                  "category_id": {
                    "description": "Internal identifier for the patron's category",
                    "type": "string"
                  },
                  "check_previous_checkout": {
                    "description": "produce a warning for this patron if this item has previously been checked out to this patron if 'yes', not if 'no', defer to category setting if 'inherit'",
                    "type": "string"
                  },
                  "city": {
                    "description": "city or town of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "country": {
                    "description": "country of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "date_enrolled": {
                    "description": "date the patron was added to Koha",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "date_of_birth": {
                    "description": "patron's date of birth",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "date_renewed": {
                    "description": "date the patron's card was last renewed",
                    "type": ["string", "null"]
                  },
                  "email": {
                    "description": "primary email address for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "expiry_date": {
                    "description": "date the patron's card is set to expire",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "fax": {
                    "description": "fax number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "firstname": {
                    "description": "patron's first name",
                    "type": ["string", "null"]
                  },
                  "gender": {
                    "description": "patron's gender",
                    "type": ["string", "null"]
                  },
                  "incorrect_address": {
                    "description": "set to 1 if library marked this patron as having an unconfirmed address",
                    "type": ["boolean", "null"]
                  },
                  "initials": {
                    "description": "initials of the patron",
                    "type": ["string", "null"]
                  },
                  "lang": {
                    "description": "lang to use to send notices to this patron",
                    "type": "string"
                  },
                  "last_seen": {
                    "description": "last time a patron has been seen (connected at the OPAC or staff interface)",
                    "format": "date-time",
                    "type": ["string", "null"]
                  },
                  "library_id": {
                    "description": "Internal identifier for the patron's home library",
                    "type": "string"
                  },
                  "login_attempts": {
                    "description": "number of failed login attemps",
                    "type": ["integer", "null"]
                  },
                  "mobile": {
                    "description": "the other phone number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "opac_notes": {
                    "description": "a note on the patron's account visible in OPAC and staff client",
                    "type": ["string", "null"]
                  },
                  "other_name": {
                    "description": "any other names associated with the patron",
                    "type": ["string", "null"]
                  },
                  "overdrive_auth_token": {
                    "description": "persist OverDrive auth token",
                    "type": ["string", "null"]
                  },
                  "patron_card_lost": {
                    "description": "set to 1 if library marked this patron as having lost his card",
                    "type": ["boolean", "null"]
                  },
                  "patron_id": {
                    "description": "Internal patron identifier",
                    "type": "integer"
                  },
                  "phone": {
                    "description": "primary phone number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "postal_code": {
                    "description": "zip or postal code of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "privacy": {
                    "description": "patron's privacy settings related to their reading history",
                    "type": "integer"
                  },
                  "privacy_guarantor_checkouts": {
                    "description": "controls if relatives can see this patron's checkouts",
                    "type": "integer"
                  },
                  "privacy_guarantor_fines": {
                    "description": "controls if relatives can see this patron's fines",
                    "type": "boolean"
                  },
                  "relationship_type": {
                    "description": "used for children to include the relationship to their guarantor",
                    "type": ["string", "null"]
                  },
                  "restricted": {
                    "description": "If any restriction applies to the patron",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "secondary_email": {
                    "description": "secondary email address for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "secondary_phone": {
                    "description": "secondary phone number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "sms_number": {
                    "description": "the mobile phone number where the patron would like to receive notices (if SMS turned on)",
                    "type": ["string", "null"]
                  },
                  "sms_provider_id": {
                    "description": "the provider of the mobile phone number defined in smsalertnumber",
                    "type": ["integer", "null"]
                  },
                  "staff_notes": {
                    "description": "a note on the patron's account",
                    "type": ["string", "null"]
                  },
                  "state": {
                    "description": "state or province of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "statistics_1": {
                    "description": "a field that can be used for any information unique to the library",
                    "type": ["string", "null"]
                  },
                  "statistics_2": {
                    "description": "a field that can be used for any information unique to the library",
                    "type": ["string", "null"]
                  },
                  "street_number": {
                    "description": "street number of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "street_type": {
                    "description": "street type of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "surname": {
                    "description": "patron's last name",
                    "type": ["string", "null"]
                  },
                  "title": {
                    "description": "patron's title",
                    "type": ["string", "null"]
                  },
                  "updated_on": {
                    "description": "time of last change could be useful for synchronization with external systems (among others)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "userid": {
                    "description": "patron's login",
                    "type": ["string", "null"]
                  }
                },
                "required": [
                  "surname",
                  "address",
                  "city",
                  "library_id",
                  "category_id"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["patrons"],
        "x-koha-authorization": { "permissions": { "borrowers": "1" } },
        "x-mojo-to": "Patrons#list"
      },
      "post": {
        "consumes": ["application/json"],
        "operationId": "addPatron",
        "parameters": [
          {
            "description": "A JSON object containing information about the new patron",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "address": {
                  "description": "first address line of patron's primary address",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "second address line of patron's primary address",
                  "type": ["string", "null"]
                },
                "altaddress_address": {
                  "description": "first address line of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_address2": {
                  "description": "second address line of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_city": {
                  "description": "city or town of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_country": {
                  "description": "country of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_email": {
                  "description": "email address for patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_notes": {
                  "description": "a note related to patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_phone": {
                  "description": "phone number for patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_postal_code": {
                  "description": "zip or postal code of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_state": {
                  "description": "state or province of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_street_number": {
                  "description": "street number of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_street_type": {
                  "description": "street type of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altcontact_address": {
                  "description": "the first address line for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_address2": {
                  "description": "the second address line for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_city": {
                  "description": "the city for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_country": {
                  "description": "the country for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_firstname": {
                  "description": "first name of alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_phone": {
                  "description": "the phone number for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_postal_code": {
                  "description": "the zipcode for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_state": {
                  "description": "the state for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_surname": {
                  "description": "surname or last name of the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "anonymized": {
                  "description": "If the patron has been anonymized",
                  "readOnly": true,
                  "type": "boolean"
                },
                "autorenew_checkouts": {
                  "description": "indicate whether auto-renewal is allowed for patron",
                  "type": "boolean"
                },
                "cardnumber": {
                  "description": "library assigned user identifier",
                  "type": ["string", "null"]
                },
                "category_id": {
                  "description": "Internal identifier for the patron's category",
                  "type": "string"
                },
                "check_previous_checkout": {
                  "description": "produce a warning for this patron if this item has previously been checked out to this patron if 'yes', not if 'no', defer to category setting if 'inherit'",
                  "type": "string"
                },
                "city": {
                  "description": "city or town of patron's primary address",
                  "type": ["string", "null"]
                },
                "country": {
                  "description": "country of patron's primary address",
                  "type": ["string", "null"]
                },
                "date_enrolled": {
                  "description": "date the patron was added to Koha",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "date_of_birth": {
                  "description": "patron's date of birth",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "date_renewed": {
                  "description": "date the patron's card was last renewed",
                  "type": ["string", "null"]
                },
                "email": {
                  "description": "primary email address for patron's primary address",
                  "type": ["string", "null"]
                },
                "expiry_date": {
                  "description": "date the patron's card is set to expire",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "fax": {
                  "description": "fax number for patron's primary address",
                  "type": ["string", "null"]
                },
                "firstname": {
                  "description": "patron's first name",
                  "type": ["string", "null"]
                },
                "gender": {
                  "description": "patron's gender",
                  "type": ["string", "null"]
                },
                "incorrect_address": {
                  "description": "set to 1 if library marked this patron as having an unconfirmed address",
                  "type": ["boolean", "null"]
                },
                "initials": {
                  "description": "initials of the patron",
                  "type": ["string", "null"]
                },
                "lang": {
                  "description": "lang to use to send notices to this patron",
                  "type": "string"
                },
                "last_seen": {
                  "description": "last time a patron has been seen (connected at the OPAC or staff interface)",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "Internal identifier for the patron's home library",
                  "type": "string"
                },
                "login_attempts": {
                  "description": "number of failed login attemps",
                  "type": ["integer", "null"]
                },
                "mobile": {
                  "description": "the other phone number for patron's primary address",
                  "type": ["string", "null"]
                },
                "opac_notes": {
                  "description": "a note on the patron's account visible in OPAC and staff client",
                  "type": ["string", "null"]
                },
                "other_name": {
                  "description": "any other names associated with the patron",
                  "type": ["string", "null"]
                },
                "overdrive_auth_token": {
                  "description": "persist OverDrive auth token",
                  "type": ["string", "null"]
                },
                "patron_card_lost": {
                  "description": "set to 1 if library marked this patron as having lost his card",
                  "type": ["boolean", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "phone": {
                  "description": "primary phone number for patron's primary address",
                  "type": ["string", "null"]
                },
                "postal_code": {
                  "description": "zip or postal code of patron's primary address",
                  "type": ["string", "null"]
                },
                "privacy": {
                  "description": "patron's privacy settings related to their reading history",
                  "type": "integer"
                },
                "privacy_guarantor_checkouts": {
                  "description": "controls if relatives can see this patron's checkouts",
                  "type": "integer"
                },
                "privacy_guarantor_fines": {
                  "description": "controls if relatives can see this patron's fines",
                  "type": "boolean"
                },
                "relationship_type": {
                  "description": "used for children to include the relationship to their guarantor",
                  "type": ["string", "null"]
                },
                "restricted": {
                  "description": "If any restriction applies to the patron",
                  "readOnly": true,
                  "type": "boolean"
                },
                "secondary_email": {
                  "description": "secondary email address for patron's primary address",
                  "type": ["string", "null"]
                },
                "secondary_phone": {
                  "description": "secondary phone number for patron's primary address",
                  "type": ["string", "null"]
                },
                "sms_number": {
                  "description": "the mobile phone number where the patron would like to receive notices (if SMS turned on)",
                  "type": ["string", "null"]
                },
                "sms_provider_id": {
                  "description": "the provider of the mobile phone number defined in smsalertnumber",
                  "type": ["integer", "null"]
                },
                "staff_notes": {
                  "description": "a note on the patron's account",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "state or province of patron's primary address",
                  "type": ["string", "null"]
                },
                "statistics_1": {
                  "description": "a field that can be used for any information unique to the library",
                  "type": ["string", "null"]
                },
                "statistics_2": {
                  "description": "a field that can be used for any information unique to the library",
                  "type": ["string", "null"]
                },
                "street_number": {
                  "description": "street number of patron's primary address",
                  "type": ["string", "null"]
                },
                "street_type": {
                  "description": "street type of patron's primary address",
                  "type": ["string", "null"]
                },
                "surname": {
                  "description": "patron's last name",
                  "type": ["string", "null"]
                },
                "title": {
                  "description": "patron's title",
                  "type": ["string", "null"]
                },
                "updated_on": {
                  "description": "time of last change could be useful for synchronization with external systems (among others)",
                  "format": "date-time",
                  "type": "string"
                },
                "userid": {
                  "description": "patron's login",
                  "type": ["string", "null"]
                }
              },
              "required": [
                "surname",
                "address",
                "city",
                "library_id",
                "category_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "A successfully created patron",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "address": {
                    "description": "first address line of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "address2": {
                    "description": "second address line of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "altaddress_address": {
                    "description": "first address line of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_address2": {
                    "description": "second address line of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_city": {
                    "description": "city or town of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_country": {
                    "description": "country of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_email": {
                    "description": "email address for patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_notes": {
                    "description": "a note related to patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_phone": {
                    "description": "phone number for patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_postal_code": {
                    "description": "zip or postal code of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_state": {
                    "description": "state or province of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_street_number": {
                    "description": "street number of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_street_type": {
                    "description": "street type of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altcontact_address": {
                    "description": "the first address line for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_address2": {
                    "description": "the second address line for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_city": {
                    "description": "the city for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_country": {
                    "description": "the country for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_firstname": {
                    "description": "first name of alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_phone": {
                    "description": "the phone number for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_postal_code": {
                    "description": "the zipcode for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_state": {
                    "description": "the state for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_surname": {
                    "description": "surname or last name of the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "anonymized": {
                    "description": "If the patron has been anonymized",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "autorenew_checkouts": {
                    "description": "indicate whether auto-renewal is allowed for patron",
                    "type": "boolean"
                  },
                  "cardnumber": {
                    "description": "library assigned user identifier",
                    "type": ["string", "null"]
                  },
                  "category_id": {
                    "description": "Internal identifier for the patron's category",
                    "type": "string"
                  },
                  "check_previous_checkout": {
                    "description": "produce a warning for this patron if this item has previously been checked out to this patron if 'yes', not if 'no', defer to category setting if 'inherit'",
                    "type": "string"
                  },
                  "city": {
                    "description": "city or town of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "country": {
                    "description": "country of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "date_enrolled": {
                    "description": "date the patron was added to Koha",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "date_of_birth": {
                    "description": "patron's date of birth",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "date_renewed": {
                    "description": "date the patron's card was last renewed",
                    "type": ["string", "null"]
                  },
                  "email": {
                    "description": "primary email address for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "expiry_date": {
                    "description": "date the patron's card is set to expire",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "fax": {
                    "description": "fax number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "firstname": {
                    "description": "patron's first name",
                    "type": ["string", "null"]
                  },
                  "gender": {
                    "description": "patron's gender",
                    "type": ["string", "null"]
                  },
                  "incorrect_address": {
                    "description": "set to 1 if library marked this patron as having an unconfirmed address",
                    "type": ["boolean", "null"]
                  },
                  "initials": {
                    "description": "initials of the patron",
                    "type": ["string", "null"]
                  },
                  "lang": {
                    "description": "lang to use to send notices to this patron",
                    "type": "string"
                  },
                  "last_seen": {
                    "description": "last time a patron has been seen (connected at the OPAC or staff interface)",
                    "format": "date-time",
                    "type": ["string", "null"]
                  },
                  "library_id": {
                    "description": "Internal identifier for the patron's home library",
                    "type": "string"
                  },
                  "login_attempts": {
                    "description": "number of failed login attemps",
                    "type": ["integer", "null"]
                  },
                  "mobile": {
                    "description": "the other phone number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "opac_notes": {
                    "description": "a note on the patron's account visible in OPAC and staff client",
                    "type": ["string", "null"]
                  },
                  "other_name": {
                    "description": "any other names associated with the patron",
                    "type": ["string", "null"]
                  },
                  "overdrive_auth_token": {
                    "description": "persist OverDrive auth token",
                    "type": ["string", "null"]
                  },
                  "patron_card_lost": {
                    "description": "set to 1 if library marked this patron as having lost his card",
                    "type": ["boolean", "null"]
                  },
                  "patron_id": {
                    "description": "Internal patron identifier",
                    "type": "integer"
                  },
                  "phone": {
                    "description": "primary phone number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "postal_code": {
                    "description": "zip or postal code of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "privacy": {
                    "description": "patron's privacy settings related to their reading history",
                    "type": "integer"
                  },
                  "privacy_guarantor_checkouts": {
                    "description": "controls if relatives can see this patron's checkouts",
                    "type": "integer"
                  },
                  "privacy_guarantor_fines": {
                    "description": "controls if relatives can see this patron's fines",
                    "type": "boolean"
                  },
                  "relationship_type": {
                    "description": "used for children to include the relationship to their guarantor",
                    "type": ["string", "null"]
                  },
                  "restricted": {
                    "description": "If any restriction applies to the patron",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "secondary_email": {
                    "description": "secondary email address for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "secondary_phone": {
                    "description": "secondary phone number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "sms_number": {
                    "description": "the mobile phone number where the patron would like to receive notices (if SMS turned on)",
                    "type": ["string", "null"]
                  },
                  "sms_provider_id": {
                    "description": "the provider of the mobile phone number defined in smsalertnumber",
                    "type": ["integer", "null"]
                  },
                  "staff_notes": {
                    "description": "a note on the patron's account",
                    "type": ["string", "null"]
                  },
                  "state": {
                    "description": "state or province of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "statistics_1": {
                    "description": "a field that can be used for any information unique to the library",
                    "type": ["string", "null"]
                  },
                  "statistics_2": {
                    "description": "a field that can be used for any information unique to the library",
                    "type": ["string", "null"]
                  },
                  "street_number": {
                    "description": "street number of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "street_type": {
                    "description": "street type of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "surname": {
                    "description": "patron's last name",
                    "type": ["string", "null"]
                  },
                  "title": {
                    "description": "patron's title",
                    "type": ["string", "null"]
                  },
                  "updated_on": {
                    "description": "time of last change could be useful for synchronization with external systems (among others)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "userid": {
                    "description": "patron's login",
                    "type": ["string", "null"]
                  }
                },
                "required": [
                  "surname",
                  "address",
                  "city",
                  "library_id",
                  "category_id"
                ],
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad parameter",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "409": {
            "description": "Conflict in creating resource",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patrons"],
        "x-koha-authorization": {
          "permissions": { "borrowers": "edit_borrowers" }
        },
        "x-mojo-to": "Patrons#add"
      }
    },
    "/patrons/{patron_id}": {
      "delete": {
        "operationId": "deletePatron",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "path",
            "name": "patron_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": { "description": "Patron deleted" },
          "400": {
            "description": "Patron deletion failed",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Patron not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["patrons"],
        "x-koha-authorization": { "permissions": { "borrowers": "1" } },
        "x-mojo-to": "Patrons#delete"
      },
      "get": {
        "operationId": "getPatron",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "path",
            "name": "patron_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A patron",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "address": {
                  "description": "first address line of patron's primary address",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "second address line of patron's primary address",
                  "type": ["string", "null"]
                },
                "altaddress_address": {
                  "description": "first address line of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_address2": {
                  "description": "second address line of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_city": {
                  "description": "city or town of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_country": {
                  "description": "country of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_email": {
                  "description": "email address for patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_notes": {
                  "description": "a note related to patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_phone": {
                  "description": "phone number for patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_postal_code": {
                  "description": "zip or postal code of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_state": {
                  "description": "state or province of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_street_number": {
                  "description": "street number of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_street_type": {
                  "description": "street type of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altcontact_address": {
                  "description": "the first address line for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_address2": {
                  "description": "the second address line for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_city": {
                  "description": "the city for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_country": {
                  "description": "the country for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_firstname": {
                  "description": "first name of alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_phone": {
                  "description": "the phone number for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_postal_code": {
                  "description": "the zipcode for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_state": {
                  "description": "the state for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_surname": {
                  "description": "surname or last name of the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "anonymized": {
                  "description": "If the patron has been anonymized",
                  "readOnly": true,
                  "type": "boolean"
                },
                "autorenew_checkouts": {
                  "description": "indicate whether auto-renewal is allowed for patron",
                  "type": "boolean"
                },
                "cardnumber": {
                  "description": "library assigned user identifier",
                  "type": ["string", "null"]
                },
                "category_id": {
                  "description": "Internal identifier for the patron's category",
                  "type": "string"
                },
                "check_previous_checkout": {
                  "description": "produce a warning for this patron if this item has previously been checked out to this patron if 'yes', not if 'no', defer to category setting if 'inherit'",
                  "type": "string"
                },
                "city": {
                  "description": "city or town of patron's primary address",
                  "type": ["string", "null"]
                },
                "country": {
                  "description": "country of patron's primary address",
                  "type": ["string", "null"]
                },
                "date_enrolled": {
                  "description": "date the patron was added to Koha",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "date_of_birth": {
                  "description": "patron's date of birth",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "date_renewed": {
                  "description": "date the patron's card was last renewed",
                  "type": ["string", "null"]
                },
                "email": {
                  "description": "primary email address for patron's primary address",
                  "type": ["string", "null"]
                },
                "expiry_date": {
                  "description": "date the patron's card is set to expire",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "fax": {
                  "description": "fax number for patron's primary address",
                  "type": ["string", "null"]
                },
                "firstname": {
                  "description": "patron's first name",
                  "type": ["string", "null"]
                },
                "gender": {
                  "description": "patron's gender",
                  "type": ["string", "null"]
                },
                "incorrect_address": {
                  "description": "set to 1 if library marked this patron as having an unconfirmed address",
                  "type": ["boolean", "null"]
                },
                "initials": {
                  "description": "initials of the patron",
                  "type": ["string", "null"]
                },
                "lang": {
                  "description": "lang to use to send notices to this patron",
                  "type": "string"
                },
                "last_seen": {
                  "description": "last time a patron has been seen (connected at the OPAC or staff interface)",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "Internal identifier for the patron's home library",
                  "type": "string"
                },
                "login_attempts": {
                  "description": "number of failed login attemps",
                  "type": ["integer", "null"]
                },
                "mobile": {
                  "description": "the other phone number for patron's primary address",
                  "type": ["string", "null"]
                },
                "opac_notes": {
                  "description": "a note on the patron's account visible in OPAC and staff client",
                  "type": ["string", "null"]
                },
                "other_name": {
                  "description": "any other names associated with the patron",
                  "type": ["string", "null"]
                },
                "overdrive_auth_token": {
                  "description": "persist OverDrive auth token",
                  "type": ["string", "null"]
                },
                "patron_card_lost": {
                  "description": "set to 1 if library marked this patron as having lost his card",
                  "type": ["boolean", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "phone": {
                  "description": "primary phone number for patron's primary address",
                  "type": ["string", "null"]
                },
                "postal_code": {
                  "description": "zip or postal code of patron's primary address",
                  "type": ["string", "null"]
                },
                "privacy": {
                  "description": "patron's privacy settings related to their reading history",
                  "type": "integer"
                },
                "privacy_guarantor_checkouts": {
                  "description": "controls if relatives can see this patron's checkouts",
                  "type": "integer"
                },
                "privacy_guarantor_fines": {
                  "description": "controls if relatives can see this patron's fines",
                  "type": "boolean"
                },
                "relationship_type": {
                  "description": "used for children to include the relationship to their guarantor",
                  "type": ["string", "null"]
                },
                "restricted": {
                  "description": "If any restriction applies to the patron",
                  "readOnly": true,
                  "type": "boolean"
                },
                "secondary_email": {
                  "description": "secondary email address for patron's primary address",
                  "type": ["string", "null"]
                },
                "secondary_phone": {
                  "description": "secondary phone number for patron's primary address",
                  "type": ["string", "null"]
                },
                "sms_number": {
                  "description": "the mobile phone number where the patron would like to receive notices (if SMS turned on)",
                  "type": ["string", "null"]
                },
                "sms_provider_id": {
                  "description": "the provider of the mobile phone number defined in smsalertnumber",
                  "type": ["integer", "null"]
                },
                "staff_notes": {
                  "description": "a note on the patron's account",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "state or province of patron's primary address",
                  "type": ["string", "null"]
                },
                "statistics_1": {
                  "description": "a field that can be used for any information unique to the library",
                  "type": ["string", "null"]
                },
                "statistics_2": {
                  "description": "a field that can be used for any information unique to the library",
                  "type": ["string", "null"]
                },
                "street_number": {
                  "description": "street number of patron's primary address",
                  "type": ["string", "null"]
                },
                "street_type": {
                  "description": "street type of patron's primary address",
                  "type": ["string", "null"]
                },
                "surname": {
                  "description": "patron's last name",
                  "type": ["string", "null"]
                },
                "title": {
                  "description": "patron's title",
                  "type": ["string", "null"]
                },
                "updated_on": {
                  "description": "time of last change could be useful for synchronization with external systems (among others)",
                  "format": "date-time",
                  "type": "string"
                },
                "userid": {
                  "description": "patron's login",
                  "type": ["string", "null"]
                }
              },
              "required": [
                "surname",
                "address",
                "city",
                "library_id",
                "category_id"
              ],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Patron not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patrons"],
        "x-koha-authorization": {
          "permissions": { "borrowers": "edit_borrowers" }
        },
        "x-mojo-to": "Patrons#get"
      },
      "put": {
        "consumes": ["application/json"],
        "operationId": "updatePatron",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "path",
            "name": "patron_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object containing new information about existing patron",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "additionalProperties": false,
              "properties": {
                "address": {
                  "description": "first address line of patron's primary address",
                  "type": ["string", "null"]
                },
                "address2": {
                  "description": "second address line of patron's primary address",
                  "type": ["string", "null"]
                },
                "altaddress_address": {
                  "description": "first address line of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_address2": {
                  "description": "second address line of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_city": {
                  "description": "city or town of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_country": {
                  "description": "country of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_email": {
                  "description": "email address for patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_notes": {
                  "description": "a note related to patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_phone": {
                  "description": "phone number for patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_postal_code": {
                  "description": "zip or postal code of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_state": {
                  "description": "state or province of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_street_number": {
                  "description": "street number of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altaddress_street_type": {
                  "description": "street type of patron's alternate address",
                  "type": ["string", "null"]
                },
                "altcontact_address": {
                  "description": "the first address line for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_address2": {
                  "description": "the second address line for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_city": {
                  "description": "the city for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_country": {
                  "description": "the country for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_firstname": {
                  "description": "first name of alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_phone": {
                  "description": "the phone number for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_postal_code": {
                  "description": "the zipcode for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_state": {
                  "description": "the state for the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "altcontact_surname": {
                  "description": "surname or last name of the alternate contact for the patron",
                  "type": ["string", "null"]
                },
                "anonymized": {
                  "description": "If the patron has been anonymized",
                  "readOnly": true,
                  "type": "boolean"
                },
                "autorenew_checkouts": {
                  "description": "indicate whether auto-renewal is allowed for patron",
                  "type": "boolean"
                },
                "cardnumber": {
                  "description": "library assigned user identifier",
                  "type": ["string", "null"]
                },
                "category_id": {
                  "description": "Internal identifier for the patron's category",
                  "type": "string"
                },
                "check_previous_checkout": {
                  "description": "produce a warning for this patron if this item has previously been checked out to this patron if 'yes', not if 'no', defer to category setting if 'inherit'",
                  "type": "string"
                },
                "city": {
                  "description": "city or town of patron's primary address",
                  "type": ["string", "null"]
                },
                "country": {
                  "description": "country of patron's primary address",
                  "type": ["string", "null"]
                },
                "date_enrolled": {
                  "description": "date the patron was added to Koha",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "date_of_birth": {
                  "description": "patron's date of birth",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "date_renewed": {
                  "description": "date the patron's card was last renewed",
                  "type": ["string", "null"]
                },
                "email": {
                  "description": "primary email address for patron's primary address",
                  "type": ["string", "null"]
                },
                "expiry_date": {
                  "description": "date the patron's card is set to expire",
                  "format": "date",
                  "type": ["string", "null"]
                },
                "fax": {
                  "description": "fax number for patron's primary address",
                  "type": ["string", "null"]
                },
                "firstname": {
                  "description": "patron's first name",
                  "type": ["string", "null"]
                },
                "gender": {
                  "description": "patron's gender",
                  "type": ["string", "null"]
                },
                "incorrect_address": {
                  "description": "set to 1 if library marked this patron as having an unconfirmed address",
                  "type": ["boolean", "null"]
                },
                "initials": {
                  "description": "initials of the patron",
                  "type": ["string", "null"]
                },
                "lang": {
                  "description": "lang to use to send notices to this patron",
                  "type": "string"
                },
                "last_seen": {
                  "description": "last time a patron has been seen (connected at the OPAC or staff interface)",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "library_id": {
                  "description": "Internal identifier for the patron's home library",
                  "type": "string"
                },
                "login_attempts": {
                  "description": "number of failed login attemps",
                  "type": ["integer", "null"]
                },
                "mobile": {
                  "description": "the other phone number for patron's primary address",
                  "type": ["string", "null"]
                },
                "opac_notes": {
                  "description": "a note on the patron's account visible in OPAC and staff client",
                  "type": ["string", "null"]
                },
                "other_name": {
                  "description": "any other names associated with the patron",
                  "type": ["string", "null"]
                },
                "overdrive_auth_token": {
                  "description": "persist OverDrive auth token",
                  "type": ["string", "null"]
                },
                "patron_card_lost": {
                  "description": "set to 1 if library marked this patron as having lost his card",
                  "type": ["boolean", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "phone": {
                  "description": "primary phone number for patron's primary address",
                  "type": ["string", "null"]
                },
                "postal_code": {
                  "description": "zip or postal code of patron's primary address",
                  "type": ["string", "null"]
                },
                "privacy": {
                  "description": "patron's privacy settings related to their reading history",
                  "type": "integer"
                },
                "privacy_guarantor_checkouts": {
                  "description": "controls if relatives can see this patron's checkouts",
                  "type": "integer"
                },
                "privacy_guarantor_fines": {
                  "description": "controls if relatives can see this patron's fines",
                  "type": "boolean"
                },
                "relationship_type": {
                  "description": "used for children to include the relationship to their guarantor",
                  "type": ["string", "null"]
                },
                "restricted": {
                  "description": "If any restriction applies to the patron",
                  "readOnly": true,
                  "type": "boolean"
                },
                "secondary_email": {
                  "description": "secondary email address for patron's primary address",
                  "type": ["string", "null"]
                },
                "secondary_phone": {
                  "description": "secondary phone number for patron's primary address",
                  "type": ["string", "null"]
                },
                "sms_number": {
                  "description": "the mobile phone number where the patron would like to receive notices (if SMS turned on)",
                  "type": ["string", "null"]
                },
                "sms_provider_id": {
                  "description": "the provider of the mobile phone number defined in smsalertnumber",
                  "type": ["integer", "null"]
                },
                "staff_notes": {
                  "description": "a note on the patron's account",
                  "type": ["string", "null"]
                },
                "state": {
                  "description": "state or province of patron's primary address",
                  "type": ["string", "null"]
                },
                "statistics_1": {
                  "description": "a field that can be used for any information unique to the library",
                  "type": ["string", "null"]
                },
                "statistics_2": {
                  "description": "a field that can be used for any information unique to the library",
                  "type": ["string", "null"]
                },
                "street_number": {
                  "description": "street number of patron's primary address",
                  "type": ["string", "null"]
                },
                "street_type": {
                  "description": "street type of patron's primary address",
                  "type": ["string", "null"]
                },
                "surname": {
                  "description": "patron's last name",
                  "type": ["string", "null"]
                },
                "title": {
                  "description": "patron's title",
                  "type": ["string", "null"]
                },
                "updated_on": {
                  "description": "time of last change could be useful for synchronization with external systems (among others)",
                  "format": "date-time",
                  "type": "string"
                },
                "userid": {
                  "description": "patron's login",
                  "type": ["string", "null"]
                }
              },
              "required": [
                "surname",
                "address",
                "city",
                "library_id",
                "category_id"
              ],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "A successfully updated patron",
            "schema": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "address": {
                    "description": "first address line of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "address2": {
                    "description": "second address line of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "altaddress_address": {
                    "description": "first address line of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_address2": {
                    "description": "second address line of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_city": {
                    "description": "city or town of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_country": {
                    "description": "country of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_email": {
                    "description": "email address for patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_notes": {
                    "description": "a note related to patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_phone": {
                    "description": "phone number for patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_postal_code": {
                    "description": "zip or postal code of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_state": {
                    "description": "state or province of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_street_number": {
                    "description": "street number of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altaddress_street_type": {
                    "description": "street type of patron's alternate address",
                    "type": ["string", "null"]
                  },
                  "altcontact_address": {
                    "description": "the first address line for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_address2": {
                    "description": "the second address line for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_city": {
                    "description": "the city for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_country": {
                    "description": "the country for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_firstname": {
                    "description": "first name of alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_phone": {
                    "description": "the phone number for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_postal_code": {
                    "description": "the zipcode for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_state": {
                    "description": "the state for the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "altcontact_surname": {
                    "description": "surname or last name of the alternate contact for the patron",
                    "type": ["string", "null"]
                  },
                  "anonymized": {
                    "description": "If the patron has been anonymized",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "autorenew_checkouts": {
                    "description": "indicate whether auto-renewal is allowed for patron",
                    "type": "boolean"
                  },
                  "cardnumber": {
                    "description": "library assigned user identifier",
                    "type": ["string", "null"]
                  },
                  "category_id": {
                    "description": "Internal identifier for the patron's category",
                    "type": "string"
                  },
                  "check_previous_checkout": {
                    "description": "produce a warning for this patron if this item has previously been checked out to this patron if 'yes', not if 'no', defer to category setting if 'inherit'",
                    "type": "string"
                  },
                  "city": {
                    "description": "city or town of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "country": {
                    "description": "country of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "date_enrolled": {
                    "description": "date the patron was added to Koha",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "date_of_birth": {
                    "description": "patron's date of birth",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "date_renewed": {
                    "description": "date the patron's card was last renewed",
                    "type": ["string", "null"]
                  },
                  "email": {
                    "description": "primary email address for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "expiry_date": {
                    "description": "date the patron's card is set to expire",
                    "format": "date",
                    "type": ["string", "null"]
                  },
                  "fax": {
                    "description": "fax number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "firstname": {
                    "description": "patron's first name",
                    "type": ["string", "null"]
                  },
                  "gender": {
                    "description": "patron's gender",
                    "type": ["string", "null"]
                  },
                  "incorrect_address": {
                    "description": "set to 1 if library marked this patron as having an unconfirmed address",
                    "type": ["boolean", "null"]
                  },
                  "initials": {
                    "description": "initials of the patron",
                    "type": ["string", "null"]
                  },
                  "lang": {
                    "description": "lang to use to send notices to this patron",
                    "type": "string"
                  },
                  "last_seen": {
                    "description": "last time a patron has been seen (connected at the OPAC or staff interface)",
                    "format": "date-time",
                    "type": ["string", "null"]
                  },
                  "library_id": {
                    "description": "Internal identifier for the patron's home library",
                    "type": "string"
                  },
                  "login_attempts": {
                    "description": "number of failed login attemps",
                    "type": ["integer", "null"]
                  },
                  "mobile": {
                    "description": "the other phone number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "opac_notes": {
                    "description": "a note on the patron's account visible in OPAC and staff client",
                    "type": ["string", "null"]
                  },
                  "other_name": {
                    "description": "any other names associated with the patron",
                    "type": ["string", "null"]
                  },
                  "overdrive_auth_token": {
                    "description": "persist OverDrive auth token",
                    "type": ["string", "null"]
                  },
                  "patron_card_lost": {
                    "description": "set to 1 if library marked this patron as having lost his card",
                    "type": ["boolean", "null"]
                  },
                  "patron_id": {
                    "description": "Internal patron identifier",
                    "type": "integer"
                  },
                  "phone": {
                    "description": "primary phone number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "postal_code": {
                    "description": "zip or postal code of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "privacy": {
                    "description": "patron's privacy settings related to their reading history",
                    "type": "integer"
                  },
                  "privacy_guarantor_checkouts": {
                    "description": "controls if relatives can see this patron's checkouts",
                    "type": "integer"
                  },
                  "privacy_guarantor_fines": {
                    "description": "controls if relatives can see this patron's fines",
                    "type": "boolean"
                  },
                  "relationship_type": {
                    "description": "used for children to include the relationship to their guarantor",
                    "type": ["string", "null"]
                  },
                  "restricted": {
                    "description": "If any restriction applies to the patron",
                    "readOnly": true,
                    "type": "boolean"
                  },
                  "secondary_email": {
                    "description": "secondary email address for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "secondary_phone": {
                    "description": "secondary phone number for patron's primary address",
                    "type": ["string", "null"]
                  },
                  "sms_number": {
                    "description": "the mobile phone number where the patron would like to receive notices (if SMS turned on)",
                    "type": ["string", "null"]
                  },
                  "sms_provider_id": {
                    "description": "the provider of the mobile phone number defined in smsalertnumber",
                    "type": ["integer", "null"]
                  },
                  "staff_notes": {
                    "description": "a note on the patron's account",
                    "type": ["string", "null"]
                  },
                  "state": {
                    "description": "state or province of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "statistics_1": {
                    "description": "a field that can be used for any information unique to the library",
                    "type": ["string", "null"]
                  },
                  "statistics_2": {
                    "description": "a field that can be used for any information unique to the library",
                    "type": ["string", "null"]
                  },
                  "street_number": {
                    "description": "street number of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "street_type": {
                    "description": "street type of patron's primary address",
                    "type": ["string", "null"]
                  },
                  "surname": {
                    "description": "patron's last name",
                    "type": ["string", "null"]
                  },
                  "title": {
                    "description": "patron's title",
                    "type": ["string", "null"]
                  },
                  "updated_on": {
                    "description": "time of last change could be useful for synchronization with external systems (among others)",
                    "format": "date-time",
                    "type": "string"
                  },
                  "userid": {
                    "description": "patron's login",
                    "type": ["string", "null"]
                  }
                },
                "required": [
                  "surname",
                  "address",
                  "city",
                  "library_id",
                  "category_id"
                ],
                "type": "object"
              }
            }
          },
          "202": {
            "description": "Accepted and waiting for librarian verification",
            "schema": { "type": "object" }
          },
          "204": {
            "description": "No Content",
            "schema": { "type": "object" }
          },
          "400": {
            "description": "Bad parameter",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Resource not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "409": {
            "description": "Conflict in updating resource",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          }
        },
        "tags": ["patrons"],
        "x-koha-authorization": { "permissions": { "borrowers": "1" } },
        "x-mojo-to": "Patrons#update"
      }
    },
    "/patrons/{patron_id}/account": {
      "get": {
        "operationId": "getPatronAccount",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "path",
            "name": "patron_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Patron's account balance",
            "schema": {
              "additionalProperties": false,
              "properties": {
                "balance": {
                  "description": "Signed decimal number",
                  "type": "number"
                },
                "outstanding_credits": {
                  "properties": {
                    "lines": {
                      "items": {
                        "properties": {
                          "account_line_id": {
                            "description": "Internal account line identifier",
                            "type": "integer"
                          },
                          "account_type": {
                            "description": "Account line type",
                            "type": ["string", "null"]
                          },
                          "amount": {
                            "description": "Account line amount",
                            "type": "number"
                          },
                          "amount_outstanding": {
                            "description": "Outstanding amount",
                            "type": "number"
                          },
                          "checkout_id": {
                            "description": "Internal identifier for the checkout the account line is related to",
                            "type": ["integer", "null"]
                          },
                          "date": {
                            "description": "Date the account line was created",
                            "format": "date-time",
                            "type": "string"
                          },
                          "debit_type": {
                            "description": "Account line debit type",
                            "type": ["string", "null"]
                          },
                          "description": {
                            "description": "Account line description",
                            "type": ["string", "null"]
                          },
                          "internal_note": {
                            "description": "Internal note",
                            "type": ["string", "null"]
                          },
                          "item_id": {
                            "description": "Internal identifier for the item the account line is related to",
                            "type": ["integer", "null"]
                          },
                          "last_increment": {
                            "description": "The amount the line was increased last time",
                            "type": ["number", "null"]
                          },
                          "library_id": {
                            "description": "Internal identifier for the library in which the transaction took place",
                            "type": ["string", "null"]
                          },
                          "patron_id": {
                            "description": "Internal identifier for the patron the account line belongs to",
                            "type": "integer"
                          },
                          "payment_type": {
                            "description": "Payment type",
                            "type": ["string", "null"]
                          },
                          "timestamp": {
                            "description": "Timestamp for the latest line update",
                            "format": "date-time",
                            "type": "string"
                          },
                          "user_id": {
                            "description": "Internal patron identifier for the staff member that introduced the account line",
                            "type": ["integer", "null"]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total": { "type": "number" }
                  }
                },
                "outstanding_debits": {
                  "properties": {
                    "lines": {
                      "items": {
                        "properties": {
                          "account_line_id": {
                            "description": "Internal account line identifier",
                            "type": "integer"
                          },
                          "account_type": {
                            "description": "Account line type",
                            "type": ["string", "null"]
                          },
                          "amount": {
                            "description": "Account line amount",
                            "type": "number"
                          },
                          "amount_outstanding": {
                            "description": "Outstanding amount",
                            "type": "number"
                          },
                          "checkout_id": {
                            "description": "Internal identifier for the checkout the account line is related to",
                            "type": ["integer", "null"]
                          },
                          "date": {
                            "description": "Date the account line was created",
                            "format": "date-time",
                            "type": "string"
                          },
                          "debit_type": {
                            "description": "Account line debit type",
                            "type": ["string", "null"]
                          },
                          "description": {
                            "description": "Account line description",
                            "type": ["string", "null"]
                          },
                          "internal_note": {
                            "description": "Internal note",
                            "type": ["string", "null"]
                          },
                          "item_id": {
                            "description": "Internal identifier for the item the account line is related to",
                            "type": ["integer", "null"]
                          },
                          "last_increment": {
                            "description": "The amount the line was increased last time",
                            "type": ["number", "null"]
                          },
                          "library_id": {
                            "description": "Internal identifier for the library in which the transaction took place",
                            "type": ["string", "null"]
                          },
                          "patron_id": {
                            "description": "Internal identifier for the patron the account line belongs to",
                            "type": "integer"
                          },
                          "payment_type": {
                            "description": "Payment type",
                            "type": ["string", "null"]
                          },
                          "timestamp": {
                            "description": "Timestamp for the latest line update",
                            "format": "date-time",
                            "type": "string"
                          },
                          "user_id": {
                            "description": "Internal patron identifier for the staff member that introduced the account line",
                            "type": ["integer", "null"]
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total": { "type": "number" }
                  },
                  "type": "object"
                }
              },
              "required": ["balance"],
              "type": "object"
            }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Patron not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patron"],
        "x-koha-authorization": {
          "permissions": {
            "borrowers": "edit_borrowers",
            "updatecharges": "remaining_permissions"
          }
        },
        "x-mojo-to": "Patrons::Account#get"
      }
    },
    "/patrons/{patron_id}/account/credits": {
      "post": {
        "operationId": "addPatronCredit",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "path",
            "name": "patron_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object containing credit information",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "account_lines_ids": {
                  "description": "List of account line ids the credit goes against (optional)",
                  "items": { "type": "integer" },
                  "type": "array"
                },
                "amount": {
                  "description": "Credit amount",
                  "minimum": 0,
                  "type": "number"
                },
                "credit_type": {
                  "description": "Type of credit ('CREDIT', 'FORGIVEN', 'LOST_FOUND', 'PAYMENT', 'WRITEOFF' )",
                  "type": "string"
                },
                "date": {
                  "description": "Date the credit was recorded (optional)",
                  "format": "date",
                  "type": "string"
                },
                "description": {
                  "description": "Description",
                  "type": "string"
                },
                "library_id": {
                  "description": "Internal identifier for the library in which the transaction took place",
                  "type": ["string", "null"]
                },
                "note": { "description": "Internal note", "type": "string" },
                "payment_type": {
                  "description": "Payment type (only applies when credit_type=payment)",
                  "type": "string"
                }
              },
              "required": ["amount"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Credit added",
            "schema": { "type": "object" }
          },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Patron not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patron"],
        "x-koha-authorization": {
          "permissions": { "updatecharges": "remaining_permissions" }
        },
        "x-mojo-to": "Patrons::Account#add_credit"
      }
    },
    "/patrons/{patron_id}/password": {
      "post": {
        "operationId": "setPatronPassword",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "path",
            "name": "patron_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object containing password information",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "password": {
                  "description": "New password (plain text)",
                  "type": "string"
                },
                "password_2": {
                  "description": "Repeated new password (plain text)",
                  "type": "string"
                }
              },
              "required": ["password", "password_2"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "Password changed" },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Patron not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patron"],
        "x-koha-authorization": { "permissions": { "borrowers": "1" } },
        "x-mojo-to": "Patrons::Password#set"
      }
    },
    "/public/biblios/{biblio_id}": {
      "get": {
        "operationId": "getBiblioPublic",
        "parameters": [
          {
            "description": "Record internal identifier",
            "in": "path",
            "name": "biblio_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": [
          "application/marcxml+xml",
          "application/marc-in-json",
          "application/marc",
          "text/plain"
        ],
        "responses": {
          "200": { "description": "A biblio" },
          "400": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Biblio not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "406": {
            "description": "Not acceptable",
            "schema": {
              "description": "Accepted content-types",
              "items": { "type": "string" },
              "type": "array"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["biblios"],
        "x-mojo-to": "Biblios#get_public"
      }
    },
    "/public/patrons/{patron_id}/guarantors/can_see_charges": {
      "put": {
        "operationId": "setPatronGuarantorsCanSeeCharges",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "path",
            "name": "patron_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A boolean representing if guarantors should be able to see the patron's charges",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": { "allowed": { "type": "boolean" } },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Charges view policy for guarantors changed"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Patron not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patron"],
        "x-koha-authorization": { "allow-owner": true },
        "x-mojo-to": "Patrons#guarantors_can_see_charges"
      }
    },
    "/public/patrons/{patron_id}/guarantors/can_see_checkouts": {
      "put": {
        "operationId": "setPatronGuarantorsCanSeeCheckouts",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "path",
            "name": "patron_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A boolean representing if guarantors should be able to see the patron's checkouts",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": { "allowed": { "type": "boolean" } },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Check-out view policy for guarantors changed"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Patron not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patron"],
        "x-koha-authorization": { "allow-owner": true },
        "x-mojo-to": "Patrons#guarantors_can_see_checkouts"
      }
    },
    "/public/patrons/{patron_id}/password": {
      "post": {
        "operationId": "setPatronPasswordPublic",
        "parameters": [
          {
            "description": "Internal patron identifier",
            "in": "path",
            "name": "patron_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object containing password information",
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "old_password": {
                  "description": "Patron's original password",
                  "type": "string"
                },
                "password": {
                  "description": "New password (plain text)",
                  "type": "string"
                },
                "password_repeated": {
                  "description": "Repeated new password (plain text)",
                  "type": "string"
                }
              },
              "required": ["password", "password_repeated", "old_password"],
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "Password changed" },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Patron not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["patron"],
        "x-koha-authorization": { "allow-owner": true },
        "x-mojo-to": "Patrons::Password#set_public"
      }
    },
    "/return_claims": {
      "post": {
        "operationId": "claimReturned",
        "parameters": [
          {
            "description": "A JSON object containing fields to modify",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "charge_lost_fee": {
                  "description": "Charge a lost fee if true and Koha is set to allow a choice. Ignored otherwise.",
                  "type": "boolean"
                },
                "created_by": {
                  "description": "User id for the librarian submitting this claim",
                  "type": "string"
                },
                "item_id": {
                  "description": "Internal item id to claim as returned",
                  "type": "integer"
                },
                "notes": {
                  "description": "Notes about this return claim",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "201": {
            "description": "Created claim",
            "schema": {
              "properties": {
                "claim_id": {
                  "description": "internally assigned return claim identifier",
                  "type": ["integer"]
                },
                "created_by": {
                  "description": "patron id of librarian who made the claim",
                  "type": ["integer", "null"]
                },
                "created_on": {
                  "description": "date of claim creation",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "issue_id": {
                  "description": "internal identifier of the claimed checkout if still checked out",
                  "type": ["integer", "null"]
                },
                "item_id": {
                  "description": "internal identifier of the claimed item",
                  "type": ["integer"]
                },
                "notes": {
                  "description": "notes about this claim",
                  "type": ["string", "null"]
                },
                "old_issue_id": {
                  "description": "internal identifier of the claimed checkout if not longer checked out",
                  "type": ["integer", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "resolution": {
                  "description": "code of resolution type for this claim",
                  "type": ["string", "null"]
                },
                "resolved_by": {
                  "description": "patron id of librarian who resolved this claim",
                  "type": ["integer", "null"]
                },
                "resolved_on": {
                  "description": "date the claim was resolved",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "updated_by": {
                  "description": "patron id of librarian who last updated the claim",
                  "type": ["integer", "null"]
                },
                "updated_on": {
                  "description": "date the claim was last updated",
                  "format": "date-time",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Checkout not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "409": {
            "description": "Conflict creating the resource",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["claims", "returned", "return", "claim"],
        "x-koha-authorization": {
          "permissions": { "circulate": "circulate_remaining_permissions" }
        },
        "x-mojo-to": "ReturnClaims#claim_returned"
      }
    },
    "/return_claims/{claim_id}": {
      "delete": {
        "operationId": "deletedClaim",
        "parameters": [
          {
            "description": "Unique identifier for the claim to be deleted",
            "in": "path",
            "name": "claim_id",
            "required": true,
            "type": "integer"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "204": {
            "description": "Claim deleted",
            "schema": {
              "properties": {
                "claim_id": {
                  "description": "internally assigned return claim identifier",
                  "type": ["integer"]
                },
                "created_by": {
                  "description": "patron id of librarian who made the claim",
                  "type": ["integer", "null"]
                },
                "created_on": {
                  "description": "date of claim creation",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "issue_id": {
                  "description": "internal identifier of the claimed checkout if still checked out",
                  "type": ["integer", "null"]
                },
                "item_id": {
                  "description": "internal identifier of the claimed item",
                  "type": ["integer"]
                },
                "notes": {
                  "description": "notes about this claim",
                  "type": ["string", "null"]
                },
                "old_issue_id": {
                  "description": "internal identifier of the claimed checkout if not longer checked out",
                  "type": ["integer", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "resolution": {
                  "description": "code of resolution type for this claim",
                  "type": ["string", "null"]
                },
                "resolved_by": {
                  "description": "patron id of librarian who resolved this claim",
                  "type": ["integer", "null"]
                },
                "resolved_on": {
                  "description": "date the claim was resolved",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "updated_by": {
                  "description": "patron id of librarian who last updated the claim",
                  "type": ["integer", "null"]
                },
                "updated_on": {
                  "description": "date the claim was last updated",
                  "format": "date-time",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Claim not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["claims", "returned", "return", "claim", "delete"],
        "x-koha-authorization": {
          "permissions": { "circulate": "circulate_remaining_permissions" }
        },
        "x-mojo-to": "ReturnClaims#delete_claim"
      }
    },
    "/return_claims/{claim_id}/notes": {
      "put": {
        "operationId": "updateClaimNotes",
        "parameters": [
          {
            "description": "Unique identifier for the claim whose notes are to be updated",
            "in": "path",
            "name": "claim_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object containing fields to modify",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "notes": {
                  "description": "Notes about this return claim",
                  "type": "string"
                },
                "updated_by": {
                  "description": "Interal identifier for the librarian updating the claim notes",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Claim notes updated",
            "schema": {
              "properties": {
                "claim_id": {
                  "description": "internally assigned return claim identifier",
                  "type": ["integer"]
                },
                "created_by": {
                  "description": "patron id of librarian who made the claim",
                  "type": ["integer", "null"]
                },
                "created_on": {
                  "description": "date of claim creation",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "issue_id": {
                  "description": "internal identifier of the claimed checkout if still checked out",
                  "type": ["integer", "null"]
                },
                "item_id": {
                  "description": "internal identifier of the claimed item",
                  "type": ["integer"]
                },
                "notes": {
                  "description": "notes about this claim",
                  "type": ["string", "null"]
                },
                "old_issue_id": {
                  "description": "internal identifier of the claimed checkout if not longer checked out",
                  "type": ["integer", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "resolution": {
                  "description": "code of resolution type for this claim",
                  "type": ["string", "null"]
                },
                "resolved_by": {
                  "description": "patron id of librarian who resolved this claim",
                  "type": ["integer", "null"]
                },
                "resolved_on": {
                  "description": "date the claim was resolved",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "updated_by": {
                  "description": "patron id of librarian who last updated the claim",
                  "type": ["integer", "null"]
                },
                "updated_on": {
                  "description": "date the claim was last updated",
                  "format": "date-time",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Claim not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["claims", "returned", "return", "claim", "notes"],
        "x-koha-authorization": {
          "permissions": { "circulate": "circulate_remaining_permissions" }
        },
        "x-mojo-to": "ReturnClaims#update_notes"
      }
    },
    "/return_claims/{claim_id}/resolve": {
      "put": {
        "operationId": "updateClaimResolve",
        "parameters": [
          {
            "description": "Unique identifier for the claim to be resolved",
            "in": "path",
            "name": "claim_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A JSON object containing fields to modify",
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "resolution": {
                  "description": "The RETURN_CLAIM_RESOLUTION code to be used to resolve the calim",
                  "type": "string"
                },
                "resolved_by": {
                  "description": "User id for the librarian resolving the claim",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "Claim resolved",
            "schema": {
              "properties": {
                "claim_id": {
                  "description": "internally assigned return claim identifier",
                  "type": ["integer"]
                },
                "created_by": {
                  "description": "patron id of librarian who made the claim",
                  "type": ["integer", "null"]
                },
                "created_on": {
                  "description": "date of claim creation",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "issue_id": {
                  "description": "internal identifier of the claimed checkout if still checked out",
                  "type": ["integer", "null"]
                },
                "item_id": {
                  "description": "internal identifier of the claimed item",
                  "type": ["integer"]
                },
                "notes": {
                  "description": "notes about this claim",
                  "type": ["string", "null"]
                },
                "old_issue_id": {
                  "description": "internal identifier of the claimed checkout if not longer checked out",
                  "type": ["integer", "null"]
                },
                "patron_id": {
                  "description": "Internal patron identifier",
                  "type": "integer"
                },
                "resolution": {
                  "description": "code of resolution type for this claim",
                  "type": ["string", "null"]
                },
                "resolved_by": {
                  "description": "patron id of librarian who resolved this claim",
                  "type": ["integer", "null"]
                },
                "resolved_on": {
                  "description": "date the claim was resolved",
                  "format": "date-time",
                  "type": ["string", "null"]
                },
                "updated_by": {
                  "description": "patron id of librarian who last updated the claim",
                  "type": ["integer", "null"]
                },
                "updated_on": {
                  "description": "date the claim was last updated",
                  "format": "date-time",
                  "type": ["string", "null"]
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Claim not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["claims", "returned", "return", "claim", "notes"],
        "x-koha-authorization": {
          "permissions": { "circulate": "circulate_remaining_permissions" }
        },
        "x-mojo-to": "ReturnClaims#resolve_claim"
      }
    },
    "/rotas/{rota_id}/stages/{stage_id}/position": {
      "put": {
        "operationId": "moveStage",
        "parameters": [
          {
            "description": "A rotas ID",
            "in": "path",
            "name": "rota_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A stages ID",
            "in": "path",
            "name": "stage_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "A stages position in the rota",
            "in": "body",
            "name": "position",
            "required": true,
            "schema": { "type": "integer" }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "OK" },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "403": {
            "description": "Access forbidden",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Position not found",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          },
          "501": {
            "description": "Default response.",
            "schema": { "$ref": "#/definitions/DefaultResponse" }
          },
          "503": {
            "description": "Under maintenance",
            "schema": {
              "properties": {
                "error": { "description": "Error message", "type": "string" }
              },
              "type": "object"
            }
          }
        },
        "tags": ["rotas"],
        "x-koha-authorization": { "permissions": { "stockrotation": "1" } },
        "x-mojo-to": "Stage#move"
      }
    }
  },
  "swagger": "2.0",
  "x-primitives": {
    "advancededitormacro_id": {
      "description": "Internal advanced editor macro identifier",
      "readOnly": true,
      "type": "integer"
    },
    "biblio_id": {
      "description": "Internal biblio identifier",
      "type": "integer"
    },
    "cardnumber": {
      "description": "library assigned user identifier",
      "type": ["string", "null"]
    },
    "city_id": {
      "description": "internally assigned city identifier",
      "readOnly": true,
      "type": "integer"
    },
    "email": {
      "description": "primary email address for patron's primary address",
      "type": ["string", "null"]
    },
    "firstname": {
      "description": "patron's first name",
      "type": ["string", "null"]
    },
    "fund_id": {
      "description": "internally assigned fund identifier",
      "readOnly": true,
      "type": "integer"
    },
    "library_id": {
      "description": "internally assigned library identifier",
      "maxLength": 10,
      "minLength": 1,
      "type": "string"
    },
    "patron_id": {
      "description": "Internal patron identifier",
      "type": "integer"
    },
    "phone": {
      "description": "primary phone number for patron's primary address",
      "type": ["string", "null"]
    },
    "surname": {
      "description": "patron's last name",
      "type": ["string", "null"]
    },
    "vendor_id": {
      "description": "internally assigned vendor identifier",
      "readOnly": true,
      "type": "integer"
    }
  }
}
